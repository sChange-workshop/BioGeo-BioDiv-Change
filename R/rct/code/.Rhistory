cowplot::plot_grid(top, bottom, nrow = 2, rel_heights = c(0.1,1))
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/Fig4_alt1.png',
width = 230, height = 230, units = 'mm')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/Fig4_alt1.png',
width = 230, height = 230, units = 'mm')
# ggsave('FigSx_turnover_density_taxaLevel.pdf', width = 200, height = 200, units = 'mm')
jtu_study_p2 <- ggplot() +
facet_wrap(~Latitude) +
geom_rect(data = study_sample_posterior %>% distinct(Jtu_lower_slope, Jtu_upper_slope),
aes(xmin = Jtu_lower_slope, xmax = Jtu_upper_slope), ymin = -Inf, ymax = Inf,
alpha = 0.3) +
geom_density_ridges_gradient(data = study_sample_posterior,
aes(x = Jtu_posterior + unique(Jtu_global_slope), y = Realm,
fill = stat(quantile)
),
linetype = 0,
scale = 0.95, alpha = 0.6,
calc_ecdf = T,
quantiles = c(0.05, 0.25, 0.75, 0.95)) +
scale_fill_manual(name = 'Posterior\nprobability',
values = c('#cccccc', '#969696', '#636363',
'#969696', '#cccccc'),
labels = c('< 5%', '5-25%', '50%',
'5-25%', '< 5%')) +
geom_vline(data = rct_sample_posterior,
aes(xintercept = Jtu_global_slope)) +
geom_vline(xintercept = 0, lty = 2, lwd = 0.5) +
geom_text(data = study_count,
aes(x=-0.035, y=Realm,
label=paste('n[study] == ', n.study)),
size=3.5,
nudge_y = 0.3, parse = T) +
scale_y_discrete(labels = scales::wrap_format(12), expand = c(0.05, 0, 0.12, 0)) +
theme_bw() +
labs(y = 'Realm',
x = 'Study-level turnover [proportion of species/yr]',
tag = 'B') +
theme(panel.grid = element_blank(),
legend.key = element_blank(),
legend.position = 'none', #c(1,0), legend.justification = c(1,0),
legend.background = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 14),#hjust = 0,
axis.text.x = element_text(size = 13),# vjust = 0.8, angle = 30),
axis.text.y = element_text(size = 13),
axis.title = element_text(size = 15)) +
guides(fill = guide_legend(keywidth = 0.6, keyheight = 0.6,
# override.aes = list(alpha = 1),
ncol = 1))
bottom_inset2 <- cowplot::plot_grid(jtu_study_p2 +
annotation_custom2(inset_legend,
data = data.frame(Realm = 'Freshwater',
Latitude = 'Tropical',
x = 0, y = 3),
xmin = 0.1, xmax = Inf, ymin = -Inf, ymax = 2))
bottom <- cowplot::plot_grid(jtu_rct_p1, bottom_inset2, align = 'hv', nrow = 2)
cowplot::plot_grid(top, bottom, nrow = 2, rel_heights = c(0.1,1))
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/Fig4_alt1.png',
width = 230, height = 230, units = 'mm')
# ggsave('FigSx_turnover_density_taxaLevel.pdf', width = 200, height = 200, units = 'mm')
jtu_study_p2 <- ggplot() +
facet_wrap(~Latitude) +
geom_rect(data = study_sample_posterior %>% distinct(Jtu_lower_slope, Jtu_upper_slope),
aes(xmin = Jtu_lower_slope, xmax = Jtu_upper_slope), ymin = -Inf, ymax = Inf,
alpha = 0.3) +
geom_density_ridges_gradient(data = study_sample_posterior,
aes(x = Jtu_posterior + unique(Jtu_global_slope), y = Realm,
fill = stat(quantile)
),
linetype = 0,
scale = 0.95, alpha = 0.6,
calc_ecdf = T,
quantiles = c(0.05, 0.25, 0.75, 0.95)) +
scale_fill_manual(name = 'Posterior\nprobability',
values = c('#cccccc', '#969696', '#636363',
'#969696', '#cccccc'),
labels = c('< 5%', '5-25%', '50%',
'5-25%', '< 5%')) +
geom_vline(data = rct_sample_posterior,
aes(xintercept = Jtu_global_slope)) +
geom_vline(xintercept = 0, lty = 2, lwd = 0.5) +
geom_text(data = study_count,
aes(x=-0.04, y=Realm,
label=paste('n[study] == ', n.study)),
size=3.5,
nudge_y = 0.3, parse = T) +
scale_y_discrete(labels = scales::wrap_format(12), expand = c(0.05, 0, 0.12, 0)) +
theme_bw() +
labs(y = 'Realm',
x = 'Study-level turnover [proportion of species/yr]',
tag = 'B') +
theme(panel.grid = element_blank(),
legend.key = element_blank(),
legend.position = 'none', #c(1,0), legend.justification = c(1,0),
legend.background = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 14),#hjust = 0,
axis.text.x = element_text(size = 13),# vjust = 0.8, angle = 30),
axis.text.y = element_text(size = 13),
axis.title = element_text(size = 15)) +
guides(fill = guide_legend(keywidth = 0.6, keyheight = 0.6,
# override.aes = list(alpha = 1),
ncol = 1))
bottom_inset2 <- cowplot::plot_grid(jtu_study_p2 +
annotation_custom2(inset_legend,
data = data.frame(Realm = 'Freshwater',
Latitude = 'Tropical',
x = 0, y = 3),
xmin = 0.1, xmax = Inf, ymin = -Inf, ymax = 2))
bottom <- cowplot::plot_grid(jtu_rct_p1, bottom_inset2, align = 'hv', nrow = 2)
cowplot::plot_grid(top, bottom, nrow = 2, rel_heights = c(0.1,1))
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/Fig4_alt1.png',
width = 230, height = 230, units = 'mm')
Year<-c()
SampleID<-c()
Species<-c()
Abundance<-c()
for(y in 1:50){
S<- sample(100,1)
Year<-c(Year,rep(y,S))
SampleID<-c(SampleID,rep(1,S))
Species<-c(Species,sample(1000,S))
Abundance<-c(Abundance,rep(1,S))
}
resamps<-1
a<-rarefysamplesturnoverbnh(Year, SampleID,Species,Abundance, 1)
plot(a$Year,a$Jaccard)
Species
Abundance
S
Year
SampleID
SampleID %>% unique()
Species
sample(1000,S)
# Want to know how many studies in each group
load('~/Dropbox/BiogeoBioTIME/rarefied_medians.Rdata')
rarefied_medians
meta <- read.csv('~/Dropbox/BioTIMELatest/bioTIMEmetadataSept18.csv')
meta <- read.csv('~/Dropbox/BioTIMELatest/bioTIMEmetadataSept18.csv') %>%
as_tibble()
meta
library(sp)
library(rworldmap)
coords2continent = function(points)
{
countriesSP <- getMap(resolution='low')
#countriesSP <- getMap(resolution='high') #you could use high res map from rworldxtra if you were concerned about detail
# converting points to a SpatialPoints object
# setting CRS directly to that from rworldmap
pointsSP = SpatialPoints(points, proj4string=CRS(proj4string(countriesSP)))
# use 'over' to get indices of the Polygons object containing each point
indices = over(pointsSP, countriesSP)
#indices$continent   # returns the continent (6 continent model)
indices$REGION   # returns the continent (7 continent model)
#indices$ADMIN  #returns country name
#indices$ISO3 # returns the ISO3 code
}
rarefied_medians %>%
distinct(rarefyID_x, rarefyID_y)
rarefied_medians %>%
distinct(STUDY_ID, rarefyID_x, rarefyID_y)
rarefied_medians %>%
distinct(STUDY_ID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y)
continents <- rarefied_medians %>%
distinct(STUDY_ID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(continent = purrr::map(data, ~coords2continent(data.frame(.x$rarefyID_x, .x$rarefyID_y))))
continents
continents %>%
unnest(continent)
continents <- rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(continent = purrr::map(data, ~coords2continent(data.frame(.x$rarefyID_x, .x$rarefyID_y))))
continents %>%
unnest(continent)
filter(continents, REALM == 'Marine') %>%
unnest(data)
filter(continents, REALM == 'Marine') %>%
unnest(data, continent)
# visual check
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(continents, REALM == 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = Biome), size = 0.5, stroke = 1.2)
world = map_data('world')
# visual check
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(continents, REALM == 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = Biome), size = 0.5, stroke = 1.2)
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(continents, REALM != 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
filter(continents, REALM != 'Marine') %>%
unnest(data, continent) %>%
filter(is.na(continent))
filter(continents, REALM != 'Marine') %>%
unnest(data, continent) %>%
filter(is.na(continent)) %>% data.frame
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#f0f0f0', size=0) +
geom_point(data = filter(continents, REALM != 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
filter(continents, REALM == 'Marine') %>%
unnest(data, continent) %>%
filter(is.na(Biome))
filter(continents, REALM != 'Marine') %>%
unnest(data, continent) %>%
filter(is.na(continent))
# need to fix the NAs by hand
filter(continents, REALM != 'Marine') %>%
unnest(data, continent) %>%
filter(is.na(continent)) %>%
data.frame()
meta
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
continents %>%
filter(is.na(continent) & (rarefyID_y > 50 & rarefyID_x < -100))
continents
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & (rarefyID_y > 50 & rarefyID_x < -100))
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100))
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100))
continents %>%
unnest(data, continent) %>%
distinct(continent)
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100)) %>%
mutate(continent = 'North America')
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 0 & (rarefyID_x < -50 & rarefyID_x > -100)))
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 0 & (rarefyID_x < -50 & rarefyID_x > -100))),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
na2 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 0 & (rarefyID_x < -50 & rarefyID_x > -100))) %>%
mutate(continent = 'North America')
na2
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10) %>%
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
na3 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10) %>%
mutate(continent = 'Europe')
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent) %>%
# filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
# filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & !is.na(continent)) %>%
unnest(data, continent),
# filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
# filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
continents <- rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(continent = purrr::map(data, ~coords2continent(data.frame(.x$rarefyID_x, .x$rarefyID_y))))
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & abs(rarefyID_x) < 15) %>%
mutate(continent = 'Europe')
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
# filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > -10),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = continent), size = 0.5, stroke = 1.2)
# visual check
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#f0f0f0', size=0) +
geom_point(data = filter(continents, REALM == 'Marine') %>%
unnest(data, continent),
aes(x = rarefyID_x, y = rarefyID_y, colour = Biome), size = 0.5, stroke = 1.2)
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100))
na1 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100)) %>%
mutate(continent = 'North America')
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 0 & (rarefyID_x < -50 & rarefyID_x > -100)))
na2 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 0 & (rarefyID_x < -50 & rarefyID_x > -100))) %>%
mutate(continent = 'North America')
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & abs(rarefyID_x) < 15)
na3 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & abs(rarefyID_x) < 15) %>%
mutate(continent = 'Europe')
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > 50)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent),
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > 50),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > 50),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
na4 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > 50) %>%
mutate(continent = 'Asia')
na4
na3
na2
na1
continents %>%
unnest(data, continent) %>%
filter(continent=='South America' & rarefyID_y > 5)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & is.na(continent)) %>%
unnest(data, continent) %>%
filter(continent=='South America' & rarefyID_y > 5),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
# need to fix the NAs by hand
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#d9d9d9', size=0) +
geom_point(data = filter(continents, REALM != 'Marine' & !is.na(continent)) %>%
unnest(data, continent) %>%
filter(continent=='South America' & rarefyID_y > 5),
aes(x = rarefyID_x, y = rarefyID_y), size = 0.5, stroke = 1.2)
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100))
continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100)) %>%
mutate(continent = 'North America')
na1 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 50 & rarefyID_x < -100)) %>%
mutate(continent = 'North America')
na1
na2 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y > 0 & (rarefyID_x < -50 & rarefyID_x > -100))) %>%
mutate(continent = 'North America')
na3 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & abs(rarefyID_x) < 15) %>%
mutate(continent = 'Europe')
na4 <- continents %>%
unnest(data, continent) %>%
filter(is.na(continent) & REALM !='Marine' & (rarefyID_y) > 50 & rarefyID_x > 50) %>%
mutate(continent = 'Asia')
# fix the central american points to be north instead of south america
c2n <- continents %>%
unnest(data, continent) %>%
filter(continent=='South America' & rarefyID_y > 5) %>%
mutate(continent=='North America')
# replace the rows
continents <- continents %>%
unnest(data, continent)
continents %>%
filter(STUDY_ID %in% na1$STUDY_ID)
continents %>%
filter(STUDY_ID %in% na1$STUDY_ID)
continents %>%
# filter(STUDY_ID %in% na1$STUDY_ID) %>%
filter(STUDY_ID %in% na2$STUDY_ID)
continents %>%
# filter(STUDY_ID %in% na1$STUDY_ID ) %>%
filter(STUDY_ID %in% na2$STUDY_ID & is.na(continent)) %
continents %>%
# filter(STUDY_ID %in% na1$STUDY_ID ) %>%
filter((STUDY_ID %in% na2$STUDY_ID) & is.na(continent))
na2
na2 %>% data.frame
continents %>%
filter(!(STUDY_ID %in% na1$STUDY_ID) & is.na(continent))
continents
continents <- rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(continent = purrr::map(data, ~coords2continent(data.frame(.x$rarefyID_x, .x$rarefyID_y))))
rm(list=ls())
# code to create and check new regional grouping structure:
# marine realm to combine biome_taxa
# terrestrial and freshwater to combine continent and taxa
library(tidyverse)
library(sp)
library(rworldmap)
# Want to know how many studies in each group
load('~/Dropbox/BiogeoBioTIME/rarefied_medians.Rdata')
# The single argument to this function, points, is a data.frame in which:
#   - column 1 contains the longitude in degrees
#   - column 2 contains the latitude in degrees
coords2continent = function(points)
{
countriesSP <- getMap(resolution='low')
#countriesSP <- getMap(resolution='high') #you could use high res map from rworldxtra if you were concerned about detail
# converting points to a SpatialPoints object
# setting CRS directly to that from rworldmap
pointsSP = SpatialPoints(points, proj4string=CRS(proj4string(countriesSP)))
# use 'over' to get indices of the Polygons object containing each point
indices = over(pointsSP, countriesSP)
#indices$continent   # returns the continent (6 continent model)
indices$REGION   # returns the continent (7 continent model)
#indices$ADMIN  #returns country name
#indices$ISO3 # returns the ISO3 code
}
rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID, rarefyID_x, rarefyID_y)
rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y)
continents <- rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(continent = purrr::map(data, ~coords2continent(data.frame(.x$rarefyID_x, .x$rarefyID_y))))
continents <- rarefied_medians %>%
distinct(REALM, Biome, STUDY_ID, rarefyID_x, rarefyID_y) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(continent = purrr::map(data, ~coords2continent(data.frame(.x$rarefyID_x, .x$rarefyID_y))))
continents
