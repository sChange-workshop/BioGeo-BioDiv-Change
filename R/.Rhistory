subtitle = expression(paste('Cell-level ', italic(beta)[Year], " coefficients"))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
cell_nestedness <- ggplot() +
geom_point(data = bt_rid_coefs,
aes(x = jne_base, jne_next)) +
geom_point(data = bt_global,
aes(x = jne_base, y = jne_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jne_base, ymin = jne_next_lower, ymax = jne_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jne_next, xmin = jne_base_lower, xmax = jne_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_rid_coefs$rho_estimate_jne), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Nestedness change (based on comparisons to initial sample)',
y = 'Nestedness change(based on comparisons of consecutive samples)',
tag = 'A',
subtitle = expression(paste('Cell-level ', italic(beta)[Year], " coefficients"))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
# studyID
bt_study_coefs <- bind_cols(
beta_study %>%
filter(model=="Jtu_new_norm") %>%
mutate(jtu_base = Estimate.cYEAR,
jtu_base_lower = lower_slope,
jtu_base_upper = upper_slope) %>%
select(level, jtu_base, jtu_base_lower, jtu_base_upper),
beta_study %>%
filter(model=="Jtu_next_norm") %>%
mutate(jtu_next = Estimate.cYEAR,
jtu_next_lower = lower_slope,
jtu_next_upper = upper_slope) %>%
select(jtu_next, jtu_next_lower, jtu_next_upper),
beta_study %>%
filter(model=="Jtu_hind_norm") %>%
mutate(jtu_hind = Estimate.cYEAR,
jtu_hind_lower = lower_slope,
jtu_hind_upper = upper_slope) %>%
select(jtu_hind, jtu_hind_lower, jtu_hind_upper),
beta_study %>%
filter(model=="Jne_new_norm") %>%
mutate(jne_base = Estimate.cYEAR,
jne_base_lower = lower_slope,
jne_base_upper = upper_slope) %>%
select(jne_base, jne_base_lower, jne_base_upper),
beta_study %>%
filter(model=="Jne_next_norm") %>%
mutate(jne_next = Estimate.cYEAR,
jne_next_lower = lower_slope,
jne_next_upper = upper_slope) %>%
select(jne_next, jne_next_lower, jne_next_upper),
beta_study %>%
filter(model=="Jne_hind_norm") %>%
mutate(jne_hind = Estimate.cYEAR,
jne_hind_lower = lower_slope,
jne_hind_upper = upper_slope) %>%
select(jne_hind, jne_hind_lower, jne_hind_upper))
bt_study_coefs <- bt_study_coefs %>%
mutate(STUDY_ID2 = str_sub(level, start = -3),
# drop underscores
STUDY_ID = sub('_','', STUDY_ID2),
# remove study
bt = str_remove(level, STUDY_ID2),
# remove trailing underscore
bt = sub('_$', '', bt)) %>%
# ok, now use existing hacky code to separate biome and taxa
separate(bt, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t) %>%
# fix the biome name that causes problems for joins
mutate(Biome = ifelse(Biome=='Tropical_and_Subtropical_Moist_Broadleaf_Forests_',
'Tropical_and_Subtropical_Moist_Broadleaf_Forests', Biome)) %>%
# now join with the realm meta data
left_join(rarefied_medians %>% distinct(REALM, Biome, taxa_mod, STUDY_ID) %>%
mutate(STUDY_ID = as.character(STUDY_ID)),
by = c('Biome', 'taxa_mod', 'STUDY_ID')) %>%
mutate(rho_estimate_jtu = cor.test(jtu_base, jtu_next, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jtu = cor.test(jtu_base, jtu_next, method = 'spearman')$p.value %>% signif(digits = 2),
rho_estimate_jne = cor.test(jne_base, jne_next, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jne = cor.test(jne_base, jne_next, method = 'spearman')$p.value %>% signif(digits = 2))
study_turnover <- ggplot() +
geom_point(data = bt_study_coefs,
aes(x = jtu_base, jtu_next, colour = REALM),
size = 2.5, alpha = 0.7) +
geom_point(data = bt_global,
aes(x = jtu_base, y = jtu_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jtu_base, ymin = jtu_next_lower, ymax = jtu_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jtu_next, xmin = jtu_base_lower, xmax = jtu_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_study_coefs$rho_estimate_jtu), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Turnover rate (based on comparisons to initial sample)',
y = 'Turnover rate (based on comparisons of consecutive samples)',
tag = 'B',
subtitle = expression(paste('Study-level ', italic(beta)[Year], " coefficients"))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
study_nestedness <- ggplot() +
geom_point(data = bt_study_coefs,
aes(x = jne_base, jne_next, colour = REALM),
size = 3) +
geom_point(data = bt_global,
aes(x = jtu_base, y = jtu_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jtu_base, ymin = jtu_next_lower, ymax = jtu_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jtu_next, xmin = jtu_base_lower, xmax = jtu_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_study_coefs$rho_estimate_jne), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Turnover rate (based on comparisons to initial sample)',
y = 'Turnover rate (based on comparisons of consecutive samples)') +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
# biome-taxon
bt_taxa_coefs <- bind_cols(
beta_taxa %>%
filter(model=="Jtu_new_norm") %>%
mutate(jtu_base = Estimate.cYEAR,
jtu_base_lower = lower_slope,
jtu_base_upper = upper_slope) %>%
select(level, jtu_base, jtu_base_lower, jtu_base_upper),
beta_taxa %>%
filter(model=="Jtu_next_norm") %>%
mutate(jtu_next = Estimate.cYEAR,
jtu_next_lower = lower_slope,
jtu_next_upper = upper_slope) %>%
select(jtu_next, jtu_next_lower, jtu_next_upper),
beta_taxa %>%
filter(model=="Jtu_hind_norm") %>%
mutate(jtu_hind = Estimate.cYEAR,
jtu_hind_lower = lower_slope,
jtu_hind_upper = upper_slope) %>%
select(jtu_hind, jtu_hind_lower, jtu_hind_upper),
beta_taxa %>%
filter(model=="Jne_new_norm") %>%
mutate(jne_base = Estimate.cYEAR,
jne_base_lower = lower_slope,
jne_base_upper = upper_slope) %>%
select(jne_base, jne_base_lower, jne_base_upper),
beta_taxa %>%
filter(model=="Jne_next_norm") %>%
mutate(jne_next = Estimate.cYEAR,
jne_next_lower = lower_slope,
jne_next_upper = upper_slope) %>%
select(jne_next, jne_next_lower, jne_next_upper),
beta_taxa %>%
filter(model=="Jne_hind_norm") %>%
mutate(jne_hind = Estimate.cYEAR,
jne_hind_lower = lower_slope,
jne_hind_upper = upper_slope) %>%
select(jne_hind, jne_hind_lower, jne_hind_upper))
bt_taxa_coefs <- bt_taxa_coefs %>%
separate(level, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t) %>%
# fix one name
mutate(Biome = ifelse(Biome=='Tropical_and_Subtropical_Moist_Broadleaf_Forests_',
'Tropical_and_Subtropical_Moist_Broadleaf_Forests', Biome)) %>%
inner_join(rarefied_medians %>% distinct(REALM, Biome, taxa_mod),
by = c('Biome', 'taxa_mod')) %>%
mutate(rho_estimate_jtu = cor.test(jtu_base, jtu_next, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jtu = cor.test(jtu_base, jtu_next, method = 'spearman')$p.value %>% signif(digits = 2),
rho_estimate_jne = cor.test(jne_base, jne_next, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jne = cor.test(jne_base, jne_next, method = 'spearman')$p.value %>% signif(digits = 2))
taxa_turnover <- ggplot() +
geom_point(data = bt_taxa_coefs,
aes(x = jtu_base, jtu_next, colour = REALM),
size = 2.5) +
geom_point(data = bt_global,
aes(x = jtu_base, y = jtu_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jtu_base, ymin = jtu_next_lower, ymax = jtu_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jtu_next, xmin = jtu_base_lower, xmax = jtu_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_taxa_coefs$rho_estimate_jtu), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Turnover rate (based on comparisons to initial sample)',
y = 'Turnover rate (based on comparisons of consecutive samples)',
tag = 'C',
subtitle = expression(paste(italic(beta)[Year], " coefficients for taxa within biomes"))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
taxa_nestedness <- ggplot() +
geom_point(data = bt_taxa_coefs,
aes(x = jne_base, jne_next, colour = REALM),
size = 2.5) +
geom_point(data = bt_global,
aes(x = jne_base, y = jne_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jne_base, ymin = jne_next_lower, ymax = jne_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jne_next, xmin = jne_base_lower, xmax = jne_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_taxa_coefs$rho_estimate_jne), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Nestedness change (based on comparisons to initial sample)',
y = 'Nestedness change (based on comparisons of consecutive samples)',
tag = 'C',
subtitle = expression(paste(italic(beta)[Year], " coefficients for taxa within biomes"))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
# biome (departures)
bt_biome_ranef <- bind_cols(
beta_biome_ranef %>%
filter(model=="Jtu_new_norm") %>%
mutate(jtu_base = Slope_ranef,
jtu_base_lower = lower_slope,
jtu_base_upper = upper_slope) %>%
select(Biome, jtu_base, jtu_base_lower, jtu_base_upper),
beta_biome_ranef %>%
filter(model=="Jtu_next_norm") %>%
mutate(jtu_next = Slope_ranef,
jtu_next_lower = lower_slope,
jtu_next_upper = upper_slope) %>%
select(jtu_next, jtu_next_lower, jtu_next_upper),
beta_biome_ranef %>%
filter(model=="Jtu_hind_norm") %>%
mutate(jtu_hind = Slope_ranef,
jtu_hind_lower = lower_slope,
jtu_hind_upper = upper_slope) %>%
select(jtu_hind, jtu_hind_lower, jtu_hind_upper),
beta_biome_ranef %>%
filter(model=="Jne_new_norm") %>%
mutate(jne_base = Slope_ranef,
jne_base_lower = lower_slope,
jne_base_upper = upper_slope) %>%
select(jne_base, jne_base_lower, jne_base_upper),
beta_biome_ranef %>%
filter(model=="Jne_next_norm") %>%
mutate(jne_next = Slope_ranef,
jne_next_lower = lower_slope,
jne_next_upper = upper_slope) %>%
select(jne_next, jne_next_lower, jne_next_upper),
beta_biome_ranef %>%
filter(model=="Jne_hind_norm") %>%
mutate(jne_hind = Slope_ranef,
jne_hind_lower = lower_slope,
jne_hind_upper = upper_slope) %>%
select(jne_hind, jne_hind_lower, jne_hind_upper))
bt_biome_ranef <- bt_biome_ranef %>%
left_join(meta %>% distinct(Biome, .keep_all=T))
# biome (slopes)
bt_biome <- bind_cols(
beta_biome %>%
filter(model=="Jtu_new_norm") %>%
mutate(jtu_base = Estimate.cYEAR,
jtu_base_lower = lower_slope,
jtu_base_upper = upper_slope) %>%
select(Biome, jtu_base, jtu_base_lower, jtu_base_upper),
beta_biome %>%
filter(model=="Jtu_next_norm") %>%
mutate(jtu_next = Estimate.cYEAR,
jtu_next_lower = lower_slope,
jtu_next_upper = upper_slope) %>%
select(jtu_next, jtu_next_lower, jtu_next_upper),
beta_biome %>%
filter(model=="Jtu_hind_norm") %>%
mutate(jtu_hind = Estimate.cYEAR,
jtu_hind_lower = lower_slope,
jtu_hind_upper = upper_slope) %>%
select(jtu_hind, jtu_hind_lower, jtu_hind_upper),
beta_biome %>%
filter(model=="Jne_new_norm") %>%
mutate(jne_base = Estimate.cYEAR,
jne_base_lower = lower_slope,
jne_base_upper = upper_slope) %>%
select(jne_base, jne_base_lower, jne_base_upper),
beta_biome %>%
filter(model=="Jne_next_norm") %>%
mutate(jne_next = Estimate.cYEAR,
jne_next_lower = lower_slope,
jne_next_upper = upper_slope) %>%
select(jne_next, jne_next_lower, jne_next_upper),
beta_biome %>%
filter(model=="Jne_hind_norm") %>%
mutate(jne_hind = Estimate.cYEAR,
jne_hind_lower = lower_slope,
jne_hind_upper = upper_slope) %>%
select(jne_hind, jne_hind_lower, jne_hind_upper))
bt_biome <- bt_biome %>%
left_join(meta %>% distinct(Biome, .keep_all=T)) %>%
mutate(rho_estimate_jtu = cor.test(jtu_base, jtu_next, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jtu = cor.test(jtu_base, jtu_next, method = 'spearman')$p.value %>% signif(digits = 2),
rho_estimate_jne = cor.test(jne_base, jne_next, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jne = cor.test(jne_base, jne_next, method = 'spearman')$p.value %>% signif(digits = 2))
biome_turnover <- ggplot() +
geom_point(data = bt_biome,
aes(x = jtu_base, jtu_next, colour = REALM),
size = 2.5) +
geom_point(data = bt_global,
aes(x = jtu_base, y = jtu_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jtu_base, ymin = jtu_next_lower, ymax = jtu_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jtu_next, xmin = jtu_base_lower, xmax = jtu_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_biome$rho_estimate_jtu), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Turnover rate (based on comparisons to initial sample)',
y = 'Turnover rate (based on comparisons of consecutive samples)',
tag = 'D',
subtitle = expression(paste('Biome-level ', italic(beta)[Year], ' coefficients'))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
biome_nesetedness <- ggplot() +
geom_point(data = bt_biome,
aes(x = jne_base, jne_next, colour = REALM),
size = 2.5) +
geom_point(data = bt_global,
aes(x = jne_base, y = jne_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jne_base, ymin = jne_next_lower, ymax = jne_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jne_next, xmin = jne_base_lower, xmax = jne_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_biome$rho_estimate_jne), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Nestedness change (based on comparisons to initial sample)',
y = 'Nestedness change (based on comparisons of consecutive samples)',
tag = 'D',
subtitle = expression(paste('Biome-level ', italic(beta)[Year], ' coefficients'))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
cowplot::plot_grid(cell_turnover,
study_turnover,
taxa_turnover,
biome_turnover, nrow = 2, align = 'hv')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigSx_base_next_compare.png', width = 250, height = 250, units = 'mm')
biome_turnover <- ggplot() +
geom_point(data = bt_biome,
aes(x = jtu_base, jtu_next, colour = REALM),
size = 2.5) +
geom_point(data = bt_global,
aes(x = jtu_base, y = jtu_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jtu_base, ymin = jtu_next_lower, ymax = jtu_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jtu_next, xmin = jtu_base_lower, xmax = jtu_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_biome$rho_estimate_jtu), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Turnover rate (based on comparisons to initial sample)',
y = 'Turnover rate (based on comparisons of consecutive samples)',
tag = 'D',
subtitle = expression(paste('Biome-level ', italic(beta)[Year], ' coefficients'))) +
theme_bw() +
theme(legend.position = c(1,0),
legend.justification = c(1,0),
legend.background =  element_blank())
biome_nesetedness <- ggplot() +
geom_point(data = bt_biome,
aes(x = jne_base, jne_next, colour = REALM),
size = 2.5) +
geom_point(data = bt_global,
aes(x = jne_base, y = jne_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jne_base, ymin = jne_next_lower, ymax = jne_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jne_next, xmin = jne_base_lower, xmax = jne_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_biome$rho_estimate_jne), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Nestedness change (based on comparisons to initial sample)',
y = 'Nestedness change (based on comparisons of consecutive samples)',
tag = 'D',
subtitle = expression(paste('Biome-level ', italic(beta)[Year], ' coefficients'))) +
theme_bw() +
theme(legend.position = c(1,0),
legend.justification = c(1,0),
legend.background =  element_blank())
cowplot::plot_grid(cell_turnover,
study_turnover,
taxa_turnover,
biome_turnover, nrow = 2, align = 'hv')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigSx_base_next_compare.png', width = 250, height = 250, units = 'mm')
cowplot::plot_grid(cell_nestedness,
study_nestedness,
taxa_nestedness,
biome_nesetedness, nrow = 2, align = 'hv')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigSx_base_next_compare_nested.png', width = 250, height = 250, units = 'mm')
study_nestedness <- ggplot() +
geom_point(data = bt_study_coefs,
aes(x = jne_base, jne_next, colour = REALM),
size = 3) +
geom_point(data = bt_global,
aes(x = jne_base, y = jne_next),
colour = 'dark red', size = 4) +
geom_linerange(data = bt_global,
aes(x = jne_base, ymin = jne_next_lower, ymax = jne_next_upper),
colour = 'dark red', size = 1.5) +
geom_errorbarh(data = bt_global,
aes(y = jne_next, xmin = jne_base_lower, xmax = jne_base_upper),
colour = 'dark red', height = 0, size = 1.5) +
annotate("text", x = -Inf, y = Inf, hjust = -1, vjust = 2,
label = paste("paste(italic(rho) == " , unique(bt_study_coefs$rho_estimate_jne), ")"),
parse = TRUE, size = 6) +
scale_colour_manual(values = c('Terrestrial' = 'Dark orange',
'Marine' = 'Dark blue',
'Freshwater' = 'Dark green')) +
labs(x = 'Nestedness change (based on comparisons to initial sample)',
y = 'Nestedness change (based on comparisons of consecutive samples)',
tag = 'B',
subtitle = expression(paste('Study-level ', italic(beta)[Year], " coefficients"))) +
theme_bw() +
theme(legend.position = 'none',
legend.justification = c(1,0),
legend.background =  element_blank())
cowplot::plot_grid(cell_nestedness,
study_nestedness,
taxa_nestedness,
biome_nesetedness, nrow = 2, align = 'hv')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigSx_base_next_compare_nested.png', width = 250, height = 250, units = 'mm')
