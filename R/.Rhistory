jne_slopes <- c()
for(sim in 1:n_sim){
print(paste('simulation ', sim, 'in ', n_sim))
# initialise empty vectors for this simulation
Year = c()
SampleID = c()
Species = c()
Abundance = c()
for(y in 1:time_series_length[sim]){
# random sampling effort
S = sample_effort[sim]
# create year covariate for modelling
Year = c(Year,rep(y,S))
# assign sampleID
SampleID = c(SampleID,rep(1,S))
# sample from regional pool
Species = c(Species,sample(s_pool[sim],S))
# presence only data: abundance==1
Abundance = c(Abundance,rep(1,S))
}
# call function to calculate temporal turnover metrics
# (function also does sample-based rarefaction to standardise sampling effort, not required here)
a <- rarefysamplesturnoverbnh(Year, SampleID, Species, Abundance, resamps = 1)
# fit models to turnover and nestedness; extract the slope coefficient
jtu_slopes = c(jtu_slopes, with(a[[1]], coef(lm(Jtu ~ Year))['Year']))
jne_slopes = c(jne_slopes, with(a[[1]], coef(lm(Jne ~ Year))['Year']))
}
slopes <- tibble(metric = rep(c('Turnover', 'Nestedness'),
each = length(jtu_slopes)),
slope = c(jtu_slopes, jne_slopes)
)
# load model fits to add an empirical estimate to the plot
load('~/Dropbox/1current/BioTime/BioGeo-BioDiv-Change/R/bt/model_fits_output/BT_model_coef_ranef.Rdata')
empirical <- BT_global_estimates %>%
filter((model=='Jtu_new_norm' | model=='Jne_new_norm') & term=='Slope') %>%
mutate(metric = ifelse(model=='Jtu_new_norm', 'Turnover', 'Nestedness'))
ggplot() +
facet_wrap(~metric) +
geom_histogram(data = slopes,
aes(x = slope), binwidth = 0.005) +
geom_rect(data = empirical,
aes(ymin = -Inf, ymax = Inf, xmin = lower, xmax = upper),
alpha = 0.5) +
geom_vline(data = empirical,
aes(xintercept = Estimate)) +
geom_vline(data = slopes %>%
group_by(metric) %>%
summarise(median = median(slope, na.rm = T),
lower = quantile(slope, probs = 0.05, na.rm = T),
upper = quantile(slope, probs = 0.95, na.rm = T)),
aes(xintercept = upper),
lty = 2) +
geom_vline(data = slopes,
aes(xintercept = quantile(slope, probs = 0.95, na.rm=T)),
lty = 2) +
labs(x = 'Slope estimate',
y = 'Number of simulations') +
theme_bw()
slopes
ggplot() +
facet_wrap(~metric) +
geom_histogram(data = slopes,
aes(x = slope), binwidth = 0.005) +
geom_rect(data = empirical,
aes(ymin = -Inf, ymax = Inf, xmin = lower, xmax = upper),
alpha = 0.5) +
geom_vline(data = empirical,
aes(xintercept = Estimate)) +
geom_vline(data = slopes %>%
group_by(metric) %>%
summarise(median = median(slope, na.rm = T),
lower = quantile(slope, probs = 0.05, na.rm = T),
upper = quantile(slope, probs = 0.95, na.rm = T)),
aes(xintercept = upper),
lty = 2) +
# geom_vline(data = slopes,
#            aes(xintercept = quantile(slope, probs = 0.95, na.rm=T)),
#            lty = 2) +
labs(x = 'Slope estimate',
y = 'Number of simulations') +
theme_bw()
# calculate quantiles of simulated slopes
sim_quantiles <- slopes %>%
group_by(metric) %>%
summarise(median = median(slope, na.rm = T),
lower = quantile(slope, probs = 0.05, na.rm = T),
upper = quantile(slope, probs = 0.95, na.rm = T))
sim_quantiles
ggplot() +
facet_wrap(~metric) +
geom_histogram(data = slopes,
aes(x = slope), binwidth = 0.005) +
geom_rect(data = empirical,
aes(ymin = -Inf, ymax = Inf, xmin = lower, xmax = upper),
alpha = 0.5) +
geom_vline(data = empirical,
aes(xintercept = Estimate)) +
geom_vline(data = sim_quantiles,
aes(xintercept = upper),
lty = 2) +
geom_vline(data = sim_quantiles,
aes(xintercept = lower),
lty = 2) +
labs(x = 'Slope estimate',
y = 'Number of simulations') +
theme_bw()
# duration
rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
inset <- ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank())
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9_n_sim_1e4.png',
width = 150, height = 80, units = 'mm')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9_n_sim_1e4.png',
width = 150, height = 80, units = 'mm')
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9_n_sim_1e4.png',
width = 150, height = 80, units = 'mm')
ggplot() +
facet_wrap(~metric) +
geom_histogram(data = slopes,
aes(x = slope), binwidth = 0.005) +
geom_rect(data = empirical,
aes(ymin = -Inf, ymax = Inf, xmin = lower, xmax = upper),
alpha = 0.5) +
geom_vline(data = empirical,
aes(xintercept = Estimate)) +
geom_vline(data = sim_quantiles,
aes(xintercept = upper),
lty = 2) +
geom_vline(data = sim_quantiles,
aes(xintercept = lower),
lty = 2) +
labs(x = 'Slope estimate',
y = 'Number of simulations') +
theme_bw()
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9.png',
width = 150, height = 80, units = 'mm')
sim_result <- ggplot() +
facet_wrap(~metric) +
geom_histogram(data = slopes,
aes(x = slope), binwidth = 0.005) +
geom_rect(data = empirical,
aes(ymin = -Inf, ymax = Inf, xmin = lower, xmax = upper),
alpha = 0.5) +
geom_vline(data = empirical,
aes(xintercept = Estimate)) +
geom_vline(data = sim_quantiles,
aes(xintercept = upper),
lty = 2) +
geom_vline(data = sim_quantiles,
aes(xintercept = lower),
lty = 2) +
labs(x = 'Slope estimate',
y = 'Number of simulations') +
theme_bw()
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.08, xmax = 0, ymin = 500, ymax = 1000)
# duration
rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
inset <- ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank())
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank())
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.08, xmax = 0, ymin = 500, ymax = 1000)
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
labs(x = '')+
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank())
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.08, xmax = 0, ymin = 500, ymax = 1000)
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
labs(x = '')+
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank())
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.08, xmax = 0, ymin = 500, ymax = 1000)
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
labs(x = '')+
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank())
inset
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank(),
axis.title.x = element_blank())
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.08, xmax = 0, ymin = 500, ymax = 1000)
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank(),
axis.title.x = element_blank())
inset
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank())
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.08, xmax = 0, ymin = 500, ymax = 1000)
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.081, xmax = -0.05, ymin = 500, ymax = 1000)
sim_result + annotation_custom(ggplotGrob(inset),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
# function for custom inset
annotation_custom2 <- function (grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, data) {
layer(data = data, stat = StatIdentity, position = PositionIdentity,
geom = ggplot2:::GeomCustomAnn,
inherit.aes = TRUE, params = list(grob = grob,
xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax))
}
sim_result + annotation_custom2(inset,
data = data.frame(metric = 'Nestedness',
x = 0, y = 3)
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
sim_result + annotation_custom2(inset,
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
library(tidyverse)
library(ggridges)
sim_result + annotation_custom2(inset,
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
inset
sim_result + annotation_custom2(ggplotGrob(inset),
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9.png',
width = 150, height = 80, units = 'mm')
sim_result + annotation_custom2(ggplotGrob(inset),
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9.png',
width = 150, height = 80, units = 'mm')
dev.off
dev.off()
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9.png',
width = 150, height = 80, units = 'mm')
sim_result + annotation_custom2(ggplotGrob(inset),
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank())
sim_result + annotation_custom2(ggplotGrob(inset),
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
# duration
inset <- rarefied_medians %>%
group_by(rarefyID) %>%
# distinct(num_years) %>%
distinct(duration) %>%
# summarise(mean(log(duration)),
# sd(log(duration)))
ggplot() +
geom_density(aes(x = duration, fill = 'empirical')) +
# squint (or assume something) and it could be lognormal
geom_density(data = data.frame(duration_sim = rlnorm(1000,2.3,0.65)),#poilog::rpoilog(n_distinct(rarefied_medians %>%
# distinct(duration) %>%
# .$duration),
# mu = duration_poilog$par[1],
# sig = duration_poilog$par[2])),#sads::rsad(#S = 50000,
# frac = 1,
# sad = 'ls', coef = list(N = 285909, alpha = 34848.4))),#rlnorm(10000, 2, 0.8)
aes( x= duration_sim, fill = 'simulated'), alpha = 0.5) +
scale_fill_manual(name = '',
values = c('empirical' = 'black',
'simulated' = 'light grey')) +
theme_bw() +
theme(legend.position = c(1,1),
legend.justification = c(1,1),
legend.background = element_blank(),
panel.grid = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
sim_result + annotation_custom2(ggplotGrob(inset),
data = data.frame(metric = 'Nestedness',
x = 0, y = 3),
xmin = -0.081, xmax = -0.005, ymin = 500, ymax = 1000)
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS9.png',
width = 150, height = 80, units = 'mm')
