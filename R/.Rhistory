group_by(model, REALM) %>%
summarise(up = sum(change=='up'),
down = sum(change=='down'),
neutral = sum(change=='neutral'))
bt_new_study %>%
group_by(model, REALM) %>%
summarise(min_slope = min(Estimate.cYEAR),
max_slope = max(Estimate.cYEAR),
median_slope = median(Estimate.cYEAR),
n = n_distinct(Biome, taxa_mod, STUDY_ID))
BT_study_estimate
BT_studyID_estimate
BT_study_estimate <- BT_studyID_estimate %>%
mutate(STUDY_ID2 = str_sub(level, start = -3),
# drop underscores
STUDY_ID = sub('_','', STUDY_ID2),
# remove study
bt = str_remove(level, STUDY_ID2),
# remove trailing underscore
bt = sub('_$', '', bt)) %>%
# ok, now use existing hacky code to separate biome and taxa
separate(bt, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t)
BT_study_estimate %>% distinct(model)
meta <- rarefied_medians %>% distinct(REALM, Biome, taxa_mod, STUDY_ID)
Jtu_study <- BT_study_estimate %>%
# remove duplicate entries created when adding meta data
distinct(model, Biome, taxa_mod, Estimate.cYEAR, .keep_all = T) %>%
filter(model == 'Jtu_new_norm' & time_period=='ALL') %>%
mutate(deltaJtu = Estimate.cYEAR,
deltaJtu_lower = lower_slope,
deltaJtu_upper = upper_slope) %>%
select(level, deltaJtu, deltaJtu_lower, deltaJtu_upper)
Jne_study <- BT_study_estimate %>%
# remove duplicate entries created when adding meta data
distinct(model, Biome, taxa_mod, Estimate.cYEAR, .keep_all = T) %>%
filter(model == 'Jne_new_norm' & time_period=='ALL') %>%
mutate(deltaJne = Estimate.cYEAR,
deltaJne_lower = lower_slope,
deltaJne_upper = upper_slope) %>%
select(deltaJne,
deltaJne_lower,
deltaJne_upper)
S_study <- BT_study_estimate %>%
# remove duplicate entries created when adding meta data
distinct(model, Biome, taxa_mod, Estimate.cYEAR, .keep_all = T) %>%
filter(model == 'S_pois_new' & time_period=='ALL') %>%
mutate(deltaS = Estimate.cYEAR,
deltaS_lower = lower_slope,
deltaS_upper = upper_slope) %>%
select(deltaS,
deltaS_lower,
deltaS_upper)
study_corr <- bind_cols(
Jne_study,
Jtu_study,
S_study
) %>%
# separate level into its nested components
mutate(STUDY_ID2 = str_sub(level, start = -3),
# drop underscores
STUDY_ID = sub('_','', STUDY_ID2),
# remove study
bt = str_remove(level, STUDY_ID2),
# remove trailing underscore
bt = sub('_$', '', bt)) %>%
# ok, now use existing hacky code to separate biome and taxa
separate(bt, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t, -STUDY_ID2)
# put the meta data in
study_corr <- left_join(study_corr,
meta %>% mutate(STUDY_ID = as.character(STUDY_ID)),
by = c('Biome', 'taxa_mod', 'STUDY_ID'))
# some studies have not got there realm information
missing <- study_corr %>%
filter(is.na(REALM)) %>%
distinct(STUDY_ID)
missing
# check the realm of these studies
meta %>%
filter(STUDY_ID %in% missing$STUDY_ID) %>%
distinct(REALM) # they are all terrestrial...
# change all the missing realms to terrestrial
study_corr <- study_corr %>%
mutate(REALM = ifelse(is.na(REALM), 'Terrestrial', REALM))
study_corr <- study_corr %>%
mutate(Jtu_grt_Jne = ifelse(deltaJtu > deltaJne, 'Jtu > Jne', 'Jne > Jtu'))
# add another indicator for quadrant conceptual model (four colours: Jne>Jtu & S < 0, Jne>Jtu & S>0, etc)
study_corr <- study_corr %>%
mutate(quad = ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS < 0), 'c1',
ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS > 0), 'c2',
ifelse((Jtu_grt_Jne=='Jne > Jtu' & deltaS < 0), 'c3', 'c4'))),
quad_sig = ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS_upper < 0 & deltaJtu_lower > 0), 'c1_sig',
ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS_lower > 0 & deltaJtu_lower > 0), 'c2_sig',
ifelse((Jtu_grt_Jne=='Jne > Jtu' & deltaS_upper < 0 & deltaJne_lower > 0), 'c3_sig',
ifelse((Jtu_grt_Jne=='Jne > Jtu' & deltaS_lower > 0 & deltaJne_lower > 0), 'c4_sig', quad)))))
# create some covariates for plotting whether changes differ from zero
study_corr <- study_corr %>%
mutate(alphaS = ifelse((deltaS_lower < 0 & deltaS_upper > 0), 0.95, 1),
alphaJtu = ifelse((deltaJtu_lower < 0 & deltaJtu_upper > 0), 0.95, 1),
alphaJne = ifelse((deltaJne_lower < 0 & deltaJne_upper > 0), 0.95, 1),
ab_sig = ifelse(((Jtu_grt_Jne=='Jtu > Jne' & alphaJtu==1 & alphaS==1) |
(Jtu_grt_Jne=='Jne > Jtu' & alphaJne==1 & alphaS==1)), 1, 0.95))
study_corr <- study_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 1.1, 1),
# make points large if both change in dissimilarity and richness differ from zero
sizeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 2, .5),
sizeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 2, .5))
## jtu > jne?
study_corr %>%
group_by(Jtu_grt_Jne) %>%
summarise(n = n_distinct(Biome, taxa_mod, STUDY_ID))
study_corr %>%
group_by(quad_sig) %>%
summarise(n = n_distinct(Biome, taxa_mod, STUDY_ID))
world <- map_data('world')
# function to find the convex hull of a polygon
find_hull <- function(df) df[chull(df$rarefyID_x, df$rarefyID_y), ]
# function to find centre of hull
hull_centre <- function(rarefyID_x, rarefyID_y){
hc_x = geosphere::geomean(cbind(x = rarefyID_x, y = rarefyID_y))[1]
hc_y = geosphere::geomean(cbind(x = rarefyID_x, y = rarefyID_y))[2]
return(cbind.data.frame(hc_x, hc_y))
}
##  get unique coords for each biome, taxa combination
studies_ <- BT_study_estimate %>%
distinct(STUDY_ID)
coords <- rarefied_medians %>%
distinct(REALM, Biome, taxa_mod, STUDY_ID, rarefyID, rarefyID_x, rarefyID_y) %>%
# filter to the studies for which we have study-level slope estimates
filter(STUDY_ID %in% studies_$STUDY_ID)
##--------marine realm wrangle------------------
marine_hulls <- plyr::ddply(filter(coords, REALM=='Marine'),
plyr::.(REALM, Biome, taxa_mod, STUDY_ID), find_hull) %>%
as_tibble()
marine_nest <- marine_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID) %>%
filter(n_distinct(rarefyID) > 1) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y)))
mar_hull_cent <- marine_nest %>% unnest(hull_centre)
# we want a point for each unique combination of biome/taxa/study: ok
mar_hull_cent %>%
group_by(Biome, taxa_mod) %>%
summarise(n.study = n_distinct(STUDY_ID), #
points = n_distinct(hc_x, hc_y)) %>%
filter(points!=n.study)
# and we need points for the studies that only had one location
marine_singleLoc <- marine_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID) %>%
filter(n_distinct(rarefyID)==1) %>%
mutate(hc_x = rarefyID_x,
hc_y = rarefyID_y) %>%
select(REALM, Biome, taxa_mod, STUDY_ID, hc_x, hc_y) %>%
ungroup()
# rejoin with other marine location data
BTS_marine_locations <- bind_rows(mar_hull_cent %>% select(-data),
marine_singleLoc)
terr_hulls <- plyr::ddply(filter(coords, REALM!='Marine'),
plyr::.(REALM, Biome, taxa_mod, STUDY_ID), find_hull) %>%
as_tibble()
terr_nest <- terr_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID) %>%
filter(n_distinct(rarefyID) > 1) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y)))
terr_hull_cent <- terr_nest %>% unnest(hull_centre)
# we want a point for each unique combination of biome/taxa/study: ok
terr_hull_cent %>%
group_by(Biome, taxa_mod) %>%
summarise(n.study = n_distinct(STUDY_ID), #
points = n_distinct(hc_x, hc_y)) %>%
filter(points!=n.study)
# and we need points for the studies that only had one location
terr_singleLoc <- terr_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID) %>%
filter(n_distinct(rarefyID)==1) %>%
mutate(hc_x = rarefyID_x,
hc_y = rarefyID_y) %>%
select(REALM, Biome, taxa_mod, STUDY_ID, hc_x, hc_y) %>%
ungroup()
# rejoin with other marine location data
BTS_terr_locations <- bind_rows(terr_hull_cent %>% select(-data),
terr_singleLoc)
# fix biome names for cleaner plot
coords <- coords %>%
mutate(Biome2 = gsub("_", " ", Biome))
# want to combine the biome/taxa correlation data with these geographic data
# the difference between these two dataframes is that _allPoints show taxa-level estimates in all
# parts of the biomes in which they were observed (rather than reducing to a single point, as for the other dataframe)
all_points <- bind_rows(BTS_marine_locations,
BTS_terr_locations)
all_points <- all_points %>%
mutate(Biome2 = gsub("_", " ", Biome)) %>%
unite(bts, c(Biome, taxa_mod, STUDY_ID), remove = F)
# create a filter to get the combinations for biome-taxa-study we want
bts_filter <- study_corr %>%
unite(bts, c(Biome, taxa_mod, STUDY_ID)) %>%
distinct(bts)
# we are missing some locations for bts combinations
study_corr %>%
mutate(Biome = ifelse(Biome=='Tropical_and_Subtropical_Moist_Broadleaf_Forests_',
'Tropical_and_Subtropical_Moist_Broadleaf_Forests',
Biome)) %>%
unite(bts, c(Biome, taxa_mod, STUDY_ID), remove = F) %>%
filter(bts %in% all_points$bts) %>%
distinct(Biome, taxa_mod, STUDY_ID)
ab_concept_taxa_plot_allPoints <- left_join(study_corr %>%
select(Biome, taxa_mod, STUDY_ID,
deltaJne, deltaJne_lower, deltaJne_upper, deltaJtu, deltaJtu_lower,deltaJtu_upper,
deltaS, deltaS_lower,deltaS_upper,
quad, alphaS, alphaJtu, alphaJne) %>%
mutate(Biome = ifelse(Biome=='Tropical_and_Subtropical_Moist_Broadleaf_Forests_',
'Tropical_and_Subtropical_Moist_Broadleaf_Forests',
Biome)) %>%
unite(bts, c(Biome, taxa_mod, STUDY_ID), remove = F) %>%
filter(bts %in% all_points$bts) %>%
select(-bts),
all_points %>%
mutate(STUDY_ID = as.character(STUDY_ID)) %>%
select(-bts),
by = c('Biome', 'taxa_mod', 'STUDY_ID'))
# add indicator to change point stroke as a function of significant trends
study_corr <- study_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse(((quad=='c1' | quad=='c2') & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse(((quad=='c3' | quad=='c4') & alphaS==1 & alphaJne==1), 1.1, 1),
sizeBLUE = ifelse(((quad=='c1' | quad=='c2') & alphaS==1 & alphaJtu==1), 2.5, .5),
sizeGREEN = ifelse(((quad=='c3' | quad=='c4') & alphaS==1 & alphaJne==1), 2.5, .5))
ab_concept_taxa_plot_allPoints <- ab_concept_taxa_plot_allPoints %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse(((quad=='c1' | quad=='c2') & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse(((quad=='c3' | quad=='c4') & alphaS==1 & alphaJne==1), 1.1, 1),
sizeBLUE = ifelse(((quad=='c1' | quad=='c2') & alphaS==1 & alphaJtu==1), 2.5, .25),
sizeGREEN = ifelse(((quad=='c3' | quad=='c4') & alphaS==1 & alphaJne==1), 2.5, .25))
# combine terrestrial and freshwater for plotting
ab_concept_taxa_plot_allPoints <- ab_concept_taxa_plot_allPoints %>%
mutate(realm2 = ifelse(REALM=='Marine', 'Marine', 'Terrestrial and freshwater'))
# tidy taxa names: All to Multiple
ab_concept_taxa_plot_allPoints$taxa_mod2 <- factor(ab_concept_taxa_plot_allPoints$taxa_mod,
levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"All", "Marine invertebrates/plants", "Mammals"),
labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"Multiple taxa", "Marine invertebrates/plants", "Mammals"))
# study_corr$taxa_mod2 <- factor(study_corr$taxa_mod,
#                                                    levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
#                                                               "All", "Marine invertebrates/plants", "Mammals"),
#                                                    labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plants", "Amphibians",
#                                                               "Multiple taxa", "Marine invertebrates/plants", "Mammals"))
# join all the unique rarefyIDs with
coords_quad <- inner_join(coords, study_corr %>% select(Biome, taxa_mod, quad, alphaS))
# pink - purple
quad_col = c('c1' = '#a6cee3', 'c2' = '#1f78b4', 'c3' = '#b2df8a', 'c4' = '#33a02c')
quad_sig_fill = c('c1_sig' = '#a6cee3', 'c2_sig' = '#1f78b4', 'c3_sig' = '#b2df8a', 'c4_sig' = '#33a02c',
'c1' = 'white', 'c2' = 'white', 'c3' = 'white', 'c4' = 'white')
quad_sig_col = c('c1_sig' = '#a6cee3', 'c2_sig' = '#1f78b4', 'c3_sig' = '#b2df8a', 'c4_sig' = '#33a02c',
'c1' = '#a6cee3', 'c2' = '#1f78b4', 'c3' = '#b2df8a', 'c4' = '#33a02c')
# ggsave('bt_study_alpha_beta_map.png', width = 290, height = 200, units = 'mm')
# shapes for realm
shapes_realm <- c('Marine' = 15, 'Terrestrial' = 16, 'Freshwater' = 17)
ab_concept_taxa_plot_allPoints$taxa_mod2 <-  factor(ab_concept_taxa_plot_allPoints$taxa_mod,
levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"All", "Marine invertebrates/plants", "Mammals"),
labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plants", "Amphibians",
"Multiple taxa", "Marine invertebrates/plants", "Mammals"))
taxa_col = c('Multiple taxa' = '#e6f598',
'Amphibians' = '#fee08b',
'Benthos' = '#5e4fa2',
'Birds' = '#f46d43',
'Fish' = '#3288bd',
'Invertebrates' = '#abdda4',
'Mammals' = '#9e0142',
'Marine invertebrates/plants' = '#66c2a5',
'Plants' = '#fdae61')
# separate horizontal legend for taxa and realm
realm_taxa_horiz_legend <- ab_concept_taxa_plot_allPoints %>%
ggplot() +
geom_linerange(aes(x = hc_y, ymin = deltaS_lower, colour = taxa_mod2,
ymax = deltaS_upper),
alpha = 0.3) +
geom_hline(data = BT_global_estimates %>% filter(model=='S_pois_new' & term=='Slope'),
aes(yintercept = Estimate)) +
geom_hline(yintercept = 0, lty = 2, lwd = 0.5) +
geom_rect(data = BT_global_estimates %>% filter(model=='S_pois_new' & term=='Slope'),
aes(xmin = -Inf, xmax = Inf, ymin = lower, ymax = upper),
alpha = 0.3) +
geom_point(aes(x = hc_y, y = deltaS, colour = taxa_mod2, shape = REALM),
size = 3) +
# scale_color_manual(values = c('Marine' = 'Dark blue', 'Terrestrial' = 'Dark orange', 'Freshwater' = 'Dark green'), guide = FALSE) +
scale_shape_manual(name = 'Realm',
values = shapes_realm) +
scale_color_manual(name = 'Taxa',
values = taxa_col) +
scale_x_continuous(breaks = c(-60, -23.5, 0, 23.5, 60)) +
labs(x = 'Latitude',
y = 'Change in species richness [log(S)/yr]'#,
#subtitle = 'Study-level estimates'
) +
coord_flip()  +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'top',
legend.direction = 'horizontal')
source('~/Dropbox/1current/R_random/functions/gg_legend.R')
realm_taxa_legend <- gg_legend(realm_taxa_horiz_legend)
bt_study_s_lat <- ab_concept_taxa_plot_allPoints %>%
ggplot() +
geom_linerange(aes(x = hc_y, ymin = deltaS_lower, colour = taxa_mod2,
ymax = deltaS_upper),
alpha = 0.3) +
geom_hline(data = BT_global_estimates %>% filter(model=='S_pois_new' & term=='Slope'),
aes(yintercept = Estimate)) +
geom_hline(yintercept = 0, lty = 2, lwd = 0.5) +
geom_rect(data = BT_global_estimates %>% filter(model=='S_pois_new' & term=='Slope'),
aes(xmin = -Inf, xmax = Inf, ymin = lower, ymax = upper),
alpha = 0.3) +
geom_point(aes(x = hc_y, y = deltaS, colour = taxa_mod2, shape = REALM),
size = 3, alpha = 0.4) +
# scale_color_manual(values = c('Marine' = 'Dark blue', 'Terrestrial' = 'Dark orange', 'Freshwater' = 'Dark green'), guide = FALSE) +
scale_color_manual(values = taxa_col) +
scale_shape_manual(values = shapes_realm) +
scale_x_continuous(breaks = c(-60, -23.5, 0, 23.5, 60)) +
labs(x = 'Latitude',
y = 'Change in species richness [log(S)/yr]',
subtitle = 'Study-level estimates',
tag = 'A') +
coord_flip()  +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'none')
bt_study_jtu_lat <- ab_concept_taxa_plot_allPoints %>%
ggplot() +
geom_linerange(aes(x = hc_y, ymin = deltaJtu_lower, colour = taxa_mod2,
ymax = deltaJtu_upper),
alpha = 0.3) +
geom_hline(data = BT_global_estimates %>% filter(model=='Jtu_new_norm' & term=='Slope'),
aes(yintercept = Estimate)) +
geom_hline(yintercept = 0, lty = 2, lwd = 0.5) +
geom_rect(data = BT_global_estimates %>% filter(model=='Jtu_new_norm' & term=='Slope'),
aes(xmin = -Inf, xmax = Inf, ymin = lower, ymax = upper),
alpha = 0.3) +
geom_point(data = ab_concept_taxa_plot_allPoints,
aes(x = hc_y, y = deltaJtu, colour = taxa_mod2, shape = REALM),
size = 3, alpha = 0.4) +
scale_color_manual(values = taxa_col) +
# scale_color_manual(name = 'Realm',
#                    values = c('Marine' = 'Dark blue', 'Terrestrial' = 'Dark orange', 'Freshwater' = 'Dark green')) +
scale_shape_manual(name = 'Realm',
values = shapes_realm) +
scale_x_continuous(breaks = c(-60, -23.5, 0, 23.5, 60)) +
labs(x = '',
y = 'Turnover [proportion of species/yr]',
subtitle = '',
tag = 'B') +
coord_flip()  +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = 'none')
top <- cowplot::plot_grid(NULL, realm_taxa_legend, NULL, nrow = 1)
bottom <- cowplot::plot_grid(bt_study_s_lat, bt_study_jtu_lat, nrow = 1)
cowplot::plot_grid(top, bottom, nrow = 2, rel_heights = c(0.05,1))
study_corr <- study_corr %>%
mutate(realm2 = ifelse(REALM=='Marine', REALM, 'Terrestrial and freshwater'),
realm_label = ifelse(REALM=='A.   Marine', REALM, 'B.   Terrestrial and freshwater'))
# rename group of taxa labelled 'All' to 'Multiple'
study_corr$taxa_mod2 <- factor(study_corr$taxa_mod,
levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"All", "Marine invertebrates/plants", "Mammals"),
labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"Multiple taxa", "Marine invertebrates/plants", "Mammals"))
# set shapes for plotting groups of taxa
shapes_mod2 = c('Invertebrates' = 0, 'Fish' = 1, 'Benthos' = 2, 'Birds' = 15, 'Mammals' = 17,
'Plant' = 5, 'Multiple taxa' = 6, 'Marine invertebrates/plants' = 7, 'Amphibians' = 8)
# shapes for realm
shapes_realm <- c('Marine' = 15, 'Terrestrial' = 16, 'Freshwater' = 17)
# colours for each taxa
taxa_col = c('Multiple taxa' = '#e6f598',
'Amphibians' = '#fee08b',
'Benthos' = '#5e4fa2',
'Birds' = '#f46d43',
'Fish' = '#3288bd',
'Invertebrates' = '#abdda4',
'Mammals' = '#9e0142',
'Marine invertebrates/plants' = '#66c2a5',
'Plant' = '#fdae61')
quad_col = c('c1' = '#beaed4', 'c2' = '#7570b3', 'c3' = '#fb9a99', 'c4' = '#e7298a')
quad_sig_fill = c('c1_sig' = '#beaed4', 'c2_sig' = '#7570b3', 'c3_sig' = '#fb9a99', 'c4_sig' = '#e7298a',
'c1' = 'white', 'c2' = 'white', 'c3' = 'white', 'c4' = 'white')
quad_sig_col = c('c1_sig' = '#beaed4', 'c2_sig' = '#7570b3', 'c3_sig' = '#fb9a99', 'c4_sig' = '#e7298a',
'c1' = '#beaed4', 'c2' = '#7570b3', 'c3' = '#fb9a99', 'c4' = '#e7298a')
# plot change dissmilarity coefficient (either Jtu or Jne) as a function of the richness coefficient
# errorbars omitted for clarity;
alpha_beta_scatter <-
ggplot() +
# facet_wrap(~taxa_mod, scales = 'free') +
# Jtu > Jne
# geom_errorbarh(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS, y = deltaJtu, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
# geom_linerange(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS,  ymin = deltaJtu_lower, ymax = deltaJtu_upper, colour = quad, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
aes(x = (deltaS), (deltaJtu), colour = quad, shape = REALM, size = sizeBLUE),
alpha = 0.5) +#
# Jne > Jtu
# geom_errorbarh(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS, y = deltaJne, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
# geom_linerange(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS,  ymin = deltaJne_lower, ymax = deltaJne_upper, colour = quad, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
aes(x = deltaS, deltaJne, colour = quad, shape = REALM, size = sizeGREEN),
alpha = 0.5) +
# stat_smooth(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#             aes(x = deltaS, deltaJtu),
#             colour = '#7570b3',
#             method = 'gam', formula = y ~ s(x, bs = 'cs', k = 4), lty = 1) +
# stat_smooth(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#             aes(x = deltaS, deltaJne),
#             colour = '#e7298a',
#             method = 'gam', formula = y ~ s(x, bs = 'cs', k = 4), lty = 2) +
geom_hline(yintercept = 0, lty = 1) +
geom_vline(xintercept = 0, lty = 1) +
labs(y = (expression(paste(Delta, ' dissimilarity component [proportion of species/yr]', sep = ' '))),
x = (expression(paste(Delta, ' S [log(S)/yr]', sep = ' '))),
subtitle = 'B') +
scale_color_manual(values = quad_col, guide = FALSE) +
# scale_color_manual(values = c('Marine' = 'Dark blue', 'Terrestrial' = 'Dark orange', 'Freshwater' = 'Dark green'), guide = FALSE) +
# scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_realm) +
# scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
# scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = c(0.15, 0.9), legend.background = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold')#,
# plot.margin = unit(c(0,0,0,0), 'cm')
) +
guides(shape = guide_legend(title = '', override.aes = list(size = 3, alpha = 1)))
# summary of alpha_beta conceptual model
a_b_summary_plot <-
ggplot() +
# facet_wrap(~realm2, ncol = 1) +
geom_histogram(data = study_corr,
aes(x = quad, fill = quad_sig, colour = quad_sig),
stat = 'count') +
scale_fill_manual(values = quad_sig_fill, guide = FALSE) +
scale_colour_manual(values = quad_sig_col, guide = FALSE) +
scale_x_discrete(breaks = c('c1', 'c2', 'c3', 'c4'),
labels = c(expression(paste(symbol('\255'), 'Jtu', symbol('\257'), 'S')),
expression(paste(symbol('\255'), 'Jtu', symbol('\255'), 'S')),
expression(paste(symbol('\255'), 'Jne', symbol('\257'), 'S')),
expression(paste(symbol('\255'), 'Jne', symbol('\255'), 'S')))) +
labs(y = 'Number of biome-taxa-study combinations',
x = '',
subtitle = 'C') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold')#,
# plot.margin = unit(c(0,0,0,0), 'cm')
)
top1 <- cowplot::ggdraw() + cowplot::draw_image('~/Dropbox/BiogeoBioTIME/Figures/Conceptual_figure_pink_purple.png',
clip = 'on')
top1a <- cowplot::plot_grid(NULL, top1, NULL, rel_widths = c(0,1,0))
top2 <- cowplot::plot_grid(alpha_beta_scatter, a_b_summary_plot, nrow = 1, align = 'hv')
# 2 rows
cowplot::plot_grid(top1, top2, nrow = 2, align = 'hv',
scale = c(1.,1))
# 2 rows
cowplot::plot_grid(top1, top2, nrow = 2, align = 'hv',
scale = c(1.,1))
