legend.background = element_rect(fill = 'transparent'),
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(shape = guide_legend(title.position = 'top', ncol = 2, override.aes = list(size = 2)))
alpha_beta_map
rm(list=ls())
# wrangle coefficients & calculate relationships between change in the different metrics
source('~/Dropbox/BiogeoBioTIME/Nature_Manuscript/R/bt/code/02a_bt_alpha_beta_relationships_wrangle.R')
rm(list=ls())
#----wrangle coefficients & calculate correlations---------
source('~/Dropbox/BiogeoBioTIME/Nature_Manuscript/R/bt/code/02a_bt_taxa_to_singleLocations.R')
# load biomes---------------------
world <- map_data('world')
library(sf)
# library(tidyverse)
mar_shp <- sf::st_read('~/Dropbox/BiogeoBioTIME/biomes/marineInUSe.shp', quiet = T) %>% select(-lat, -long)
terr_shp <- sf::st_read('~/Dropbox/BiogeoBioTIME/biomes/terrInUSe.shp', quiet = T)  %>% select(-lat, -long)
fresh_shp <- sf::st_read('~/Dropbox/BiogeoBioTIME/biomes/freshinUse.shp', quiet = T)  %>% select(-lat, -long)
# create spatialdataframes (sp package) for use with geom_polygon
marine_spdf <- as(mar_shp, 'Spatial')
terr_spdf <- as(terr_shp, 'Spatial')
fresh_spdf <- as(fresh_shp, 'Spatial')
#-------process marine shp file: add slope ranef and flatten for ggplot---------
mar_biomes <- rarefied_medians %>%
filter(REALM=='Marine') %>%
distinct(Biome) %>%
mutate(Biome = gsub("_", " ", Biome))
# filter spatialdataframe to these biomes only
marine_spdf <- marine_spdf[which(marine_spdf$Biome %in% mar_biomes$Biome),]
# put the slope ranef in after fixing names
marine_biome_re <- bind_cols(BT_biome_ranef %>%
filter(model=='S_pois') %>%
mutate(S_biome_re = Slope_ranef) %>%
select(S_biome_re, Biome),
BT_biome_ranef %>%
filter(model=='Jtu_norm') %>%
mutate(Jtu_biome_re = Slope_ranef) %>%
select(Jtu_biome_re),
BT_biome_ranef %>%
filter(model=='Jne_norm') %>%
mutate(Jne_biome_re = Slope_ranef) %>%
select(Jne_biome_re)) %>%
mutate(Biome = gsub("_", " ", Biome))
# marine_spdf <- tmaptools::append_data(shp = marine_spdf, data = marine_biome_re, key.shp = 'Biome', key.data = 'Biome')
# or if you can't install tmaptools (I can't on one of my machines!)
marine_spdf@data = data.frame(marine_spdf@data,
marine_biome_re[match(as.character(marine_spdf@data[,'Biome']), as.character(unlist(marine_biome_re[,'Biome']))),])
names(marine_spdf)
marine_spdf@data$id = rownames(marine_spdf@data)
marine_spdf.points = fortify(marine_spdf, region="id")
marine_spdf2 = plyr::join(marine_spdf.points, marine_spdf@data, by="id")
marine_df <- marine_spdf2 %>%
mutate(Realm2 = 'Marine') %>%
as_tibble()
#-------process terr shp file: add slope ranef and flatten for ggplot---------
terr_biomes <- rarefied_medians %>%
filter(REALM=='Terrestrial') %>%
distinct(Biome) %>%
mutate(Biome = gsub("_", " ", Biome),
# fix some other random ones up
Biome = ifelse(Biome=='Boreal Forests Taiga', 'Boreal Forests/Taiga', Biome),
Biome = ifelse(Biome=='Tropical and Subtropical Grasslands Savannas and Shrublands',
'Tropical and Subtropical Grasslands, Savannas and Shrublands', Biome),
Biome = ifelse(Biome=='Mediterranean Forests Woodlands and Scrub',
'Mediterranean Forests, Woodlands and Scrub', Biome),
Biome = ifelse(Biome=='Temperate Grasslands Savannas and Shrublands',
'Temperate Grasslands, Savannas and Shrublands', Biome))
# filter spatialdataframe to these biomes only
terr_spdf <- terr_spdf[which(terr_spdf$Biome %in% terr_biomes$Biome),]
# fix names in ranef dataframe
terr_biome_re <- bind_cols(BT_biome_ranef %>%
filter(model=='S_pois') %>%
mutate(S_biome_re = Slope_ranef) %>%
select(S_biome_re, Biome),
BT_biome_ranef %>%
filter(model=='Jtu_norm') %>%
mutate(Jtu_biome_re = Slope_ranef) %>%
select(Jtu_biome_re),
BT_biome_ranef %>%
filter(model=='Jne_norm') %>%
mutate(Jne_biome_re = Slope_ranef) %>%
select(Jne_biome_re)) %>%
mutate(Biome = gsub("_", " ", Biome),
# fix some other random ones up
Biome = ifelse(Biome=='Boreal Forests Taiga', 'Boreal Forests/Taiga', Biome),
Biome = ifelse(Biome=='Tropical and Subtropical Grasslands Savannas and Shrublands',
'Tropical and Subtropical Grasslands, Savannas and Shrublands', Biome),
Biome = ifelse(Biome=='Mediterranean Forests Woodlands and Scrub',
'Mediterranean Forests, Woodlands and Scrub', Biome),
Biome = ifelse(Biome=='Temperate Grasslands Savannas and Shrublands',
'Temperate Grasslands, Savannas and Shrublands', Biome))
terr_spdf <- tmaptools::append_data(shp = terr_spdf, data = terr_biome_re, key.shp = 'Biome', key.data = 'Biome')
# or if you can't install tmaptools (I can't on one of my machines!)
terr_spdf@data = data.frame(terr_spdf@data,
terr_biome_re[match(as.character(terr_spdf@data[,'Biome']), as.character(unlist(terr_biome_re[,'Biome']))),])
terr_spdf$Biome %>% levels()
terr_spdf@data$id = rownames(terr_spdf@data)
terr_spdf.points = fortify(terr_spdf, region="id")
terr_spdf2 = plyr::join(terr_spdf.points, terr_spdf@data, by="id")
terr_spdf2 <- terr_spdf2 %>% as_tibble()
#-------process freshwater shp file: add slope ranef and flatten for ggplot---------
fresh_biomes <- rarefied_medians %>%
filter(REALM=='Freshwater') %>%
distinct(Biome) %>%
mutate(Biome = gsub("_", " ", Biome))
# filter spatialdataframe to these biomes only
fresh_spdf <- fresh_spdf[which(fresh_spdf$Biome %in% fresh_biomes$Biome),]
# fix names in ranef dataframe
fresh_biome_re <- bind_cols(BT_biome_ranef %>%
filter(model=='S_pois') %>%
mutate(S_biome_re = Slope_ranef) %>%
select(S_biome_re, Biome),
BT_biome_ranef %>%
filter(model=='Jtu_norm') %>%
mutate(Jtu_biome_re = Slope_ranef) %>%
select(Jtu_biome_re),
BT_biome_ranef %>%
filter(model=='Jne_norm') %>%
mutate(Jne_biome_re = Slope_ranef) %>%
select(Jne_biome_re)) %>%
mutate(Biome = gsub("_", " ", Biome),
# fix some other random ones up
Biome = ifelse(Biome=='Boreal Forests Taiga', 'Boreal Forests/Taiga', Biome),
Biome = ifelse(Biome=='Tropical and Subtropical Grasslands Savannas and Shrublands',
'Tropical and Subtropical Grasslands, Savannas and Shrublands', Biome),
Biome = ifelse(Biome=='Mediterranean Forests Woodlands and Scrub',
'Mediterranean Forests, Woodlands and Scrub', Biome),
Biome = ifelse(Biome=='Temperate Grasslands Savannas and Shrublands',
'Temperate Grasslands, Savannas and Shrublands', Biome))
# fresh_spdf <- tmaptools::append_data(shp = fresh_spdf, data = fresh_biome_re, key.shp = 'Biome', key.data = 'Biome')
# or if you can't install tmaptools (I can't on one of my machines!)
fresh_spdf@data = data.frame(fresh_spdf@data,
fresh_biome_re[match(as.character(fresh_spdf@data[,'Biome']), as.character(unlist(fresh_biome_re[,'Biome']))),])
fresh_spdf$Biome %>% levels()
fresh_spdf@data$id = rownames(fresh_spdf@data)
fresh_spdf.points = fortify(fresh_spdf, region="id")
fresh_spdf2 = plyr::join(fresh_spdf.points, fresh_spdf@data, by="id")
# all terrestrial/freshwater
terr_df <- bind_rows(terr_spdf2, fresh_spdf2) %>%
mutate(Realm2 = 'Terrestrial/Freshwater') %>%
as_tibble()
# slope ranef to qualitative (using deciles)
S_re <- BT_biome_ranef %>% filter(model=='S_pois') %>% select(Slope_ranef) %>% .$Slope_ranef
S_re_quantile <- quantile(S_re, probs = seq(0,1,by=0.2))
Jtu_re <- BT_biome_ranef %>% filter(model=='Jtu_norm') %>% select(Slope_ranef) %>% .$Slope_ranef
Jtu_re_quantile <- quantile(Jtu_re, probs = seq(0,1,by=0.2))
Jne_re <- BT_biome_ranef %>% filter(model=='Jne_norm') %>% select(Slope_ranef) %>% .$Slope_ranef
Jne_re_quantile <- quantile(Jtu_re, probs = seq(0,1,by=0.2))
# join terrestrial and marine data
all_df <- bind_rows(marine_df %>% select(-ECO_CODE), terr_df)
# cut the slope ranefs into bins
alldf <- all_df %>%
mutate(S_re=cut(S_biome_re, breaks = c(S_re_quantile[1:3], 0, S_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE),
Jtu_re=cut(Jtu_biome_re, breaks = c(Jtu_re_quantile[1:3], 0, Jtu_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE),
Jne_re=cut(Jne_biome_re, breaks = c(Jne_re_quantile[1:3], 0, Jne_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE)) %>%
as_tibble()
# add these qualitative data to the location of each rarefyID
coords2 <- left_join(coords %>%
mutate(Biome = gsub("_", " ", Biome),
# fix some other random ones up
Biome = ifelse(Biome=='Boreal Forests Taiga', 'Boreal Forests/Taiga', Biome),
Biome = ifelse(Biome=='Tropical and Subtropical Grasslands Savannas and Shrublands',
'Tropical and Subtropical Grasslands, Savannas and Shrublands', Biome),
Biome = ifelse(Biome=='Mediterranean Forests Woodlands and Scrub',
'Mediterranean Forests, Woodlands and Scrub', Biome),
Biome = ifelse(Biome=='Temperate Grasslands Savannas and Shrublands',
'Temperate Grasslands, Savannas and Shrublands', Biome)),
alldf %>% distinct(Biome, S_re, Jtu_re, Jne_re), by = 'Biome')
ab_concept_taxa_plot_allPoints <- inner_join(BT_taxa_estimate %>% select(Biome, taxa_mod, n_cells),
ab_concept_taxa_plot_allPoints, by = c('Biome', 'taxa_mod')) %>%
distinct(Biome, taxa_mod, hc_x, hc_y, .keep_all=TRUE)
ab_concept_taxa_plot <- inner_join(BT_taxa_estimate %>% select(Biome, taxa_mod, n_cells),
ab_concept_taxa_plot, by = c('Biome', 'taxa_mod')) %>%
distinct(Biome, taxa_mod, hc_x, hc_y, .keep_all=TRUE)
ab_concept_taxa_plot_allPoints <- ab_concept_taxa_plot_allPoints %>%
mutate(realm_label = ifelse(REALM=='Marine', 'a.   Marine', 'b.   Terrestrial/Freshwater'))
Jtu_leg_label <- c(Jtu_re_quantile[1:3], 0, Jtu_re_quantile[4:6]) %>% signif(2) %>% as.numeric() %>% format(scientific = T)
Jtu_estimate_label <- as.numeric(signif(c(Jtu_re_quantile[1:3], 0, Jtu_re_quantile[4:6]) +
BT_global_estimates %>% filter(model=='Jtu_norm' & time_period=='ALL') %>%
filter(term=='Slope') %>% .$Estimate, 4) )
combined_label <- paste0(paste(Jtu_leg_label, Jtu_estimate_label, sep = ' ('),')')
mar_biome_plot_Jtu <-  ggplot() +
geom_polygon(data = filter(alldf, Realm2 == 'Marine'),
aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re), alpha = 0.85) +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(coords2, REALM == 'Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re), size = 0.5, stroke = 1.2) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#ef8a62', '3' = '#fddbc7',
'4' = '#d1e5f0', '5' = '#67a9cf', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#ef8a62', '3' = '#fddbc7',
'4' = '#d1e5f0', '5' = '#67a9cf', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
scale_size_area() +
labs(y = '',
x = '',
subtitle = 'a    Marine') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.4), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
terr_biome_plot_Jtu <- ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = coords2 %>% dplyr::filter(REALM!='Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re), size = 0.5, stroke = 1.2) +
geom_polygon(data = filter(alldf, realm != 'Marine' & Jtu_re==1),
aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re), alpha = 1) +
geom_polygon(data = filter(alldf, realm != 'Marine' & Jtu_re==2),
aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re), alpha = 0.9) +
geom_polygon(data = filter(alldf, realm != 'Marine' & Jtu_re==4),
aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re), alpha = 0.8) +
geom_polygon(data = filter(alldf, realm != 'Marine' & Jtu_re==5),
aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re), alpha = 1) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#ef8a62', '3' = '#fddbc7',
'4' = '#d1e5f0', '5' = '#67a9cf', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#ef8a62', '3' = '#fddbc7',
'4' = '#d1e5f0', '5' = '#67a9cf', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
labs(x = '',
y = '',
subtitle = 'b    Terrestrial/Freshwater') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.4), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
mar_biome_plot_Jtu
taxa_corr
taxa_corr %>% select(Realm2)
rm(list=ls())
source('~/Dropbox/BiogeoBioTIME/Nature_Manuscript/R/bt/code/02b_bt_alpha_beta_relationships_wrangle.R')
#--Taxa-level plots------
taxa_corr <- taxa_corr %>%
# simplify realms for plotting, and add a label (not needed now with the tag argument in ggplot2)
mutate(realm2 = ifelse(REALM=='Marine', REALM, 'Terrestrial/Freshwater'),
realm_label = ifelse(REALM=='a.   Marine', REALM, 'b.   Terrestrial/Freshwater'))
taxa_corr <- taxa_corr %>%
mutate(alphaS = ifelse((deltaS_lower < 0 & deltaS_upper > 0), 0.95, 1),
alphaJtu = ifelse((deltaJtu_lower < 0 & deltaJtu_upper > 0), 0.95, 1),
alphaJne = ifelse((deltaJne_lower < 0 & deltaJne_upper > 0), 0.95, 1),
ab_sig = ifelse(((Jtu_grt_Jne=='Jtu > Jne' & alphaJtu==1 & alphaS==1) |
(Jtu_grt_Jne=='Jne > Jtu' & alphaJne==1 & alphaS==1)), 1, 0.95))
taxa_corr <- taxa_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 1.1, 1),
# make points large if both change in dissimilarity and richness differ from zero
sizeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 2, .5),
sizeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 2, .5))
# rename group of taxa labelled 'All' to 'Multiple'
taxa_corr$taxa_mod2 <- factor(taxa_corr$taxa_mod,
levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"All", "Marine invertebrates/plants", "Mammals"),
labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"Multiple taxa", "Marine invertebrates/plants", "Mammals"))
# set shapes for plotting groups of taxa
shapes_mod2 = c('Invertebrates' = 0, 'Fish' = 1, 'Benthos' = 2, 'Birds' = 15, 'Mammals' = 17,
'Plant' = 5, 'Multiple taxa' = 6, 'Marine invertebrates/plants' = 7, 'Amphibians' = 8)
# colours for each taxa
taxa_col = c('Multiple taxa' = '#e6f598',
'Amphibians' = '#fee08b',
'Benthos' = '#5e4fa2',
'Birds' = '#f46d43',
'Fish' = '#3288bd',
'Invertebrates' = '#abdda4',
'Mammals' = '#9e0142',
'Marine invertebrates/plants' = '#66c2a5',
'Plant' = '#fdae61')
# colours for conceptual model relating changes in alpha & beta diversity
# blue green (colour blind friendly - from colorbrewer2.org)
quad_col = c('c1' = '#a6cee3', 'c2' = '#1f78b4', 'c3' = '#b2df8a', 'c4' = '#33a02c')
quad_sig_fill = c('c1_sig' = '#a6cee3', 'c2_sig' = '#1f78b4', 'c3_sig' = '#b2df8a', 'c4_sig' = '#33a02c',
'c1' = 'white', 'c2' = 'white', 'c3' = 'white', 'c4' = 'white')
quad_sig_col = c('c1_sig' = '#a6cee3', 'c2_sig' = '#1f78b4', 'c3_sig' = '#b2df8a', 'c4_sig' = '#33a02c',
'c1' = '#a6cee3', 'c2' = '#1f78b4', 'c3' = '#b2df8a', 'c4' = '#33a02c')
#------taxa-level relationships----------------
# ad-hoc transformation for spreading values around zero.
sign_sqrt <- scales::trans_new('sign_sqrt',
transform = function(x) {sign(x) * sqrt(abs(x))},
inverse = function(x){sign(x) * abs(x)^2})
# plot change dissmilarity coefficient (either Jtu or Jne) as a function of the richness coefficient
# errorbars omitted for clarity;
alpha_beta_scatter <- ggplot() +
# facet_wrap(~taxa_mod, scales = 'free') +
# Jtu > Jne
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS, y = deltaJtu, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS,  ymin = deltaJtu_lower, ymax = deltaJtu_upper, colour = quad, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
geom_point(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
aes(x = (deltaS), (deltaJtu), colour = quad, shape = taxa_mod2,  stroke = strokeS, size = sizeBLUE,
alpha = ab_sig)) +#
# Jne > Jtu
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS, y = deltaJne, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS,  ymin = deltaJne_lower, ymax = deltaJne_upper, colour = quad, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
geom_point(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
aes(x = deltaS, deltaJne, colour = quad, shape = taxa_mod2, stroke = strokeS, size = sizeGREEN,
alpha = ab_sig)) +
geom_hline(yintercept = 0, lty = 1) +
geom_vline(xintercept = 0, lty = 1) +
labs(y = (expression(paste(Delta, ' dissimilarity component', sep = ' '))),
x = (expression(paste(Delta, ' S', sep = ' '))),
subtitle = 'b') +
scale_color_manual(values = quad_col, guide = FALSE) +
scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_mod2, guide = FALSE) +
scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = 'none', panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
alpha_beta_scatter
# summary of alpha_beta conceptual model
a_b_summary_plot <- ggplot() +
facet_wrap(~realm2, ncol = 1) +
geom_histogram(data = taxa_corr,
aes(x = quad, fill = quad_sig, colour = quad_sig),
stat = 'count') +
scale_fill_manual(values = quad_sig_fill, guide = FALSE) +
scale_colour_manual(values = quad_sig_col, guide = FALSE) +
scale_x_discrete(breaks = c('c1', 'c2', 'c3', 'c4'),
labels = c(expression(paste(symbol('\255'), 'Jtu', symbol('\257'), 'S')),
expression(paste(symbol('\255'), 'Jtu', symbol('\255'), 'S')),
expression(paste(symbol('\255'), 'Jne', symbol('\257'), 'S')),
expression(paste(symbol('\255'), 'Jne', symbol('\255'), 'S')))) +
labs(y = 'Number of biome-taxa combinations',
x = '',
subtitle = 'c') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
top1 <- cowplot::ggdraw() + cowplot::draw_image('~/Dropbox/BiogeoBioTIME/Figures/Conceptual_figure_octo.png')
top2 <- cowplot::plot_grid(alpha_beta_scatter, a_b_summary_plot, nrow = 1, align = 'v')
top <- cowplot::plot_grid(top1, alpha_beta_scatter, a_b_summary_plot, nrow = 1, axis = 't')
top
dev.off()
top
rm(list=ls())
# code to examine relationships between alpha and beta-diversity change
# Fig 5 + supplementary regression plots
# wrangle coefficients to plot relationships between change in the different metrics and to plot alpha_beta_map
source('~/Dropbox/BiogeoBioTIME/Nature_Manuscript/R/bt/code/02c_bt_taxa_to_singleLocations.R')
#--Taxa-level plots------
taxa_corr <- taxa_corr %>%
# simplify realms for plotting, and add a label (not needed now with the tag argument in ggplot2)
mutate(realm2 = ifelse(REALM=='Marine', REALM, 'Terrestrial/Freshwater'),
realm_label = ifelse(REALM=='a.   Marine', REALM, 'b.   Terrestrial/Freshwater'))
# create some covariates for plotting whether changes differ from zero
taxa_corr <- taxa_corr %>%
mutate(alphaS = ifelse((deltaS_lower < 0 & deltaS_upper > 0), 0.95, 1),
alphaJtu = ifelse((deltaJtu_lower < 0 & deltaJtu_upper > 0), 0.95, 1),
alphaJne = ifelse((deltaJne_lower < 0 & deltaJne_upper > 0), 0.95, 1),
ab_sig = ifelse(((Jtu_grt_Jne=='Jtu > Jne' & alphaJtu==1 & alphaS==1) |
(Jtu_grt_Jne=='Jne > Jtu' & alphaJne==1 & alphaS==1)), 1, 0.95))
taxa_corr <- taxa_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 1.1, 1),
# make points large if both change in dissimilarity and richness differ from zero
sizeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 2, .5),
sizeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 2, .5))
# rename group of taxa labelled 'All' to 'Multiple'
taxa_corr$taxa_mod2 <- factor(taxa_corr$taxa_mod,
levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"All", "Marine invertebrates/plants", "Mammals"),
labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"Multiple taxa", "Marine invertebrates/plants", "Mammals"))
# set shapes for plotting groups of taxa
shapes_mod2 = c('Invertebrates' = 0, 'Fish' = 1, 'Benthos' = 2, 'Birds' = 15, 'Mammals' = 17,
'Plant' = 5, 'Multiple taxa' = 6, 'Marine invertebrates/plants' = 7, 'Amphibians' = 8)
# colours for each taxa
taxa_col = c('Multiple taxa' = '#e6f598',
'Amphibians' = '#fee08b',
'Benthos' = '#5e4fa2',
'Birds' = '#f46d43',
'Fish' = '#3288bd',
'Invertebrates' = '#abdda4',
'Mammals' = '#9e0142',
'Marine invertebrates/plants' = '#66c2a5',
'Plant' = '#fdae61')
# colours for conceptual model relating changes in alpha & beta diversity
# blue green (colour blind friendly - from colorbrewer2.org)
quad_col = c('c1' = '#a6cee3', 'c2' = '#1f78b4', 'c3' = '#b2df8a', 'c4' = '#33a02c')
quad_sig_fill = c('c1_sig' = '#a6cee3', 'c2_sig' = '#1f78b4', 'c3_sig' = '#b2df8a', 'c4_sig' = '#33a02c',
'c1' = 'white', 'c2' = 'white', 'c3' = 'white', 'c4' = 'white')
quad_sig_col = c('c1_sig' = '#a6cee3', 'c2_sig' = '#1f78b4', 'c3_sig' = '#b2df8a', 'c4_sig' = '#33a02c',
'c1' = '#a6cee3', 'c2' = '#1f78b4', 'c3' = '#b2df8a', 'c4' = '#33a02c')
#------taxa-level relationships----------------
# ad-hoc transformation for spreading values around zero.
sign_sqrt <- scales::trans_new('sign_sqrt',
transform = function(x) {sign(x) * sqrt(abs(x))},
inverse = function(x){sign(x) * abs(x)^2})
# plot change dissmilarity coefficient (either Jtu or Jne) as a function of the richness coefficient
# errorbars omitted for clarity;
alpha_beta_scatter <- ggplot() +
# facet_wrap(~taxa_mod, scales = 'free') +
# Jtu > Jne
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS, y = deltaJtu, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS,  ymin = deltaJtu_lower, ymax = deltaJtu_upper, colour = quad, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
geom_point(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
aes(x = (deltaS), (deltaJtu), colour = quad, shape = taxa_mod2,  stroke = strokeS, size = sizeBLUE,
alpha = ab_sig)) +#
# Jne > Jtu
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS, y = deltaJne, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS,  ymin = deltaJne_lower, ymax = deltaJne_upper, colour = quad, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
geom_point(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
aes(x = deltaS, deltaJne, colour = quad, shape = taxa_mod2, stroke = strokeS, size = sizeGREEN,
alpha = ab_sig)) +
geom_hline(yintercept = 0, lty = 1) +
geom_vline(xintercept = 0, lty = 1) +
labs(y = (expression(paste(Delta, ' dissimilarity component', sep = ' '))),
x = (expression(paste(Delta, ' S', sep = ' '))),
subtitle = 'b') +
scale_color_manual(values = quad_col, guide = FALSE) +
scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_mod2, guide = FALSE) +
scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = 'none', panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
#       legend.position = c(0.1, 0.9), legend.text = element_text(size = 22), legend.title = element_text(size = 26)) +
# guides(shape = guide_legend(override.aes = list(size = 4)))
# ggsave('scatterplot_quad_alphaS.pdf', width = 400, height = 250, units = 'mm')
# summary of alpha_beta conceptual model
a_b_summary_plot <- ggplot() +
facet_wrap(~realm2, ncol = 1) +
geom_histogram(data = taxa_corr,
aes(x = quad, fill = quad_sig, colour = quad_sig),
stat = 'count') +
scale_fill_manual(values = quad_sig_fill, guide = FALSE) +
scale_colour_manual(values = quad_sig_col, guide = FALSE) +
scale_x_discrete(breaks = c('c1', 'c2', 'c3', 'c4'),
labels = c(expression(paste(symbol('\255'), 'Jtu', symbol('\257'), 'S')),
expression(paste(symbol('\255'), 'Jtu', symbol('\255'), 'S')),
expression(paste(symbol('\255'), 'Jne', symbol('\257'), 'S')),
expression(paste(symbol('\255'), 'Jne', symbol('\255'), 'S')))) +
labs(y = 'Number of biome-taxa combinations',
x = '',
subtitle = 'c') +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
top1 <- cowplot::ggdraw() + cowplot::draw_image('~/Dropbox/BiogeoBioTIME/Figures/Conceptual_figure_octo.png')
top2 <- cowplot::plot_grid(alpha_beta_scatter, a_b_summary_plot, nrow = 1, align = 'v')
top <- cowplot::plot_grid(top1, alpha_beta_scatter, a_b_summary_plot, nrow = 1, axis = 't')
# run code to generate alpha_beta_map
cowplot::plot_grid(top, alpha_beta_map, ncol = 1, rel_heights = c(0.5,0.9))
dev.off()
cowplot::plot_grid(top, alpha_beta_map, ncol = 1, rel_heights = c(0.5,0.9))
load("/Users/jc155893/Desktop/bt_nuts_diagnostics.Rdata")
ls()
bt_nuts
bt_nuts %>% data.frame
