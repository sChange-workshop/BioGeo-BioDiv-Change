## cell-level estimates
bt_rarefyid_coef <- BTRfyID_rarefyID_coef %>%
filter(model=='Jtu_new_norm' | model=='S_pois_new') %>%
separate(level, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 't'), remove=F, sep='_') %>%
mutate(cell = ifelse(!is.na(t), t,
ifelse(!is.na(b9), b9,
ifelse(!is.na(b8), b8,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2))))))))) %>%
mutate(rarefyID = ifelse(is.na(b5), paste(b3, b4, sep = '_'),
ifelse(is.na(b6), paste(b4, b5, sep='_'),
ifelse(is.na(b7), paste(b5, b6, sep='_'),
ifelse(is.na(b8), paste(b6, b7, sep='_'),
ifelse(is.na(b9), paste(b7, b8, sep='_'), paste(b8, b9, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -b8, -b9, -cell, -t)
rct_rarefyID_estimate <- bind_rows(
rlm_clm_txa_rarefyID_estimate %>%
filter(model=='Jtu_new_norm' | model=='S_pois_new') %>%
separate(level, into = c('Realm', 'Climate', 'Taxa', 'STUDY_ID', 'b5' , 'b6'), sep = '_', remove = FALSE) %>%
unite(rarefyID, b5, b6))
r1 = bt_rarefyid_coef %>%
filter(model!='Jne_new_norm') %>%
mutate(bt_slope = Estimate.cYEAR,
bt_upper = upper_slope,
bt_lower = lower_slope) %>%
select(rarefyID, model, bt_slope, bt_upper, bt_lower) %>%
inner_join(rarefied_medians %>% distinct(Biome, rarefyID),
by = 'rarefyID') %>%
inner_join(realm_climate_biome %>%
select(-REALM),
by = 'Biome')
r2 = rct_rarefyID_estimate %>%
filter(time_period=='ALL') %>%
mutate(rct_slope = Estimate.cYEAR,
rct_lower = lower_slope,
rct_upper = upper_slope,
climate_mod = Climate) %>%
select(climate_mod, rarefyID, model, rct_slope, rct_lower, rct_upper)
bt_rct_cell_compare <- inner_join(r1, r2, by = c('model', 'rarefyID', 'climate_mod'))
# repeat for realm-region-taxa model (note different number of studies due to inclusion criteria)
rrt_cell_estimate <- rrt_rarefyID_coef %>%
# separate on the last (rightmost) underscore: this gets us study
separate(level, c('realm_region_taxa_study_study', 'cell'), sep = '_(?!.*_)',
remove = F) %>%
# get the second study and combine with cell for rarefyID
separate(realm_region_taxa_study_study, c('realm_region_taxa_study', 'study'), sep = '_(?!.*_)',
remove = F) %>%
unite(rarefyID, study, cell) %>%
# separate study from realm_region_taxa
# separate on the last (rightmost) underscore: this gets us study
separate(realm_region_taxa_study, c('realm_region_taxa', 'STUDY_ID'), sep = '_(?!.*_)',
remove = F) %>%
# separate realm_region from taxa
separate(realm_region_taxa, c('realm_region', 'taxa_mod'), sep = '_(?!.*_)',
remove = F) %>%
# separate realm and region
separate(realm_region, c('realm' , 'region'), sep = '(^[^_]*_)',
remove = F) %>%
separate(realm_region, c('realm', 'nuu'), sep = '_', remove = F) %>%
select(-nuu)
r3 = rrt_cell_estimate %>%
filter(model!='Jne_rlm_reg_txa') %>%
mutate(rrt_slope = Estimate.cYEAR,
rrt_lower = lower_slope,
rrt_upper = upper_slope) %>%
# need to rename the models so as we can join using model names
mutate(model = ifelse(model=='Jtu_rlm_reg_txa', 'Jtu_new_norm', 'S_pois_new')) %>%
select(realm, region, taxa_mod, STUDY_ID, rarefyID, model, rrt_slope, rrt_lower, rrt_upper) %>%
mutate(Biome = region)
bt_rrt_cell_compare <- right_join(r1, r3, by = c('rarefyID', 'model', 'Biome')) %>%
# and the terrestrial and freshwater studies
bind_rows(inner_join(r1 %>% filter(!Biome %in% marine_biomes$Biome) %>% select(-Biome),
r3 %>% filter(realm!='Marine'),
by = c('rarefyID', 'model')))
fig_c <- bt_rrt_cell_compare %>%
ggplot() +
# geom_linerange(aes(x = rrt_slope, ymin = bt_lower, ymax = bt_upper,
#                    colour = model,
#                    linetype = model),
#                alpha = 0.2, size = .8) +
# geom_errorbarh(aes(xmin = rrt_lower, xmax = rrt_upper,
#                    colour = model,
#                    linetype = model,
#                    y = bt_slope),
#                height = 0, alpha = 0.2, size = .8) +
geom_point(aes(x = rrt_slope, y = bt_slope,
colour = model,
shape = model),
alpha = 0.5,
size = 2) +
# overall turnover estimates
geom_point(data = global_trends,
aes(x = rrt_jtu, y = bt_jtu, shape = 'Jtu_new_norm'),
size = 2) +
geom_linerange(data = global_trends,
aes(x = rrt_jtu, ymin = bt_jtu_lower, ymax = bt_jtu_upper)) +
geom_errorbarh(data = global_trends,
aes(y = bt_jtu, xmin = rrt_jtu_lower, xmax = rrt_jtu_upper),
height = 0) +
# overall richness estimates
geom_point(data = global_trends,
aes(x = rrt_s, y = bt_s, shape = 'S_pois_new'),
size = 2) +
geom_linerange(data = global_trends,
aes(x = rrt_s, ymin = bt_s_lower, ymax = bt_s_upper)) +
geom_errorbarh(data = global_trends,
aes(y = bt_s, xmin = rrt_s_lower, xmax = rrt_s_upper),
height = 0) +
geom_abline(intercept = 0, slope = 1, lty = 2) +
scale_shape_manual(values = c('Jtu_new_norm' = 19,
'S_pois_new' = 17),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
scale_color_manual(values = c('Jtu_new_norm' = '#d8b365',
'S_pois_new' = '#5ab4ac'),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
scale_linetype_manual(values = c('Jtu_new_norm' = 1,
'S_pois_new' = 2),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
labs(x = 'Study-level slope (RRT model)',
y = 'Study-level slope (BT model)',
tag = 'C') +
theme_bw() +
theme(#panel.grid = element_blank(),
legend.position = c(0,1),
legend.background = element_blank(),
legend.justification = c(0,1),
legend.title = element_blank()) +
guides(shape = guide_legend(override.aes = list(colour = c('#d8b365','#5ab4ac'))))
fig_d <- bt_rct_cell_compare %>%
ggplot() +
# geom_linerange(aes(x = rct_slope, ymin = bt_lower, ymax = bt_upper,
#                    colour = model,
#                    linetype = model),
#                alpha = 0.2, size = .8) +
# geom_errorbarh(aes(xmin = rct_lower, xmax = rct_upper,
#                    colour = model,
#                    linetype = model,
#                    y = bt_slope),
#                height = 0, alpha = 0.2, size = .8) +
geom_point(aes(x = rct_slope, y = bt_slope,
colour = model,
shape = model),
alpha = 0.5,
size = 2) +
# overall turnover estimates
geom_point(data = global_trends,
aes(x = rct_jtu, y = bt_jtu, shape = 'Jtu_new_norm'),
size = 2) +
geom_linerange(data = global_trends,
aes(x = rct_jtu, ymin = bt_jtu_lower, ymax = bt_jtu_upper)) +
geom_errorbarh(data = global_trends,
aes(y = bt_jtu, xmin = rct_jtu_lower, xmax = rct_jtu_upper),
height = 0) +
# overall richness estimates
geom_point(data = global_trends,
aes(x = rct_s, y = bt_s, shape = 'S_pois_new'),
size = 2) +
geom_linerange(data = global_trends,
aes(x = rct_s, ymin = bt_s_lower, ymax = bt_s_upper)) +
geom_errorbarh(data = global_trends,
aes(y = bt_s, xmin = rct_s_lower, xmax = rct_s_upper),
height = 0) +
geom_abline(intercept = 0, slope = 1, lty = 2) +
scale_shape_manual(values = c('Jtu_new_norm' = 19,
'S_pois_new' = 17),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
scale_color_manual(values = c('Jtu_new_norm' = '#d8b365',
'S_pois_new' = '#5ab4ac'),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
scale_linetype_manual(values = c('Jtu_new_norm' = 1,
'S_pois_new' = 2),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
labs(x = 'Study-level slope (RCT model)',
y = 'Study-level slope (BT model)',
tag = 'D') +
theme_bw() +
theme(#panel.grid = element_blank(),
legend.position = c(0,1),
legend.background = element_blank(),
legend.justification = c(0,1),
legend.title = element_blank()) +
guides(shape = guide_legend(override.aes = list(colour = c('#d8b365','#5ab4ac'))))
##----high level: taxa-level of the bt model is most appropriate to compare to the other models
# (as taxa is in the highest level grouping covariate of both rrt and rct)
# biome vs biome for the marine realm: rrt vs bt
bt_taxa_coef <- BT_taxa_estimate %>%
filter(model=='S_pois_new' | model=='Jtu_new_norm') %>%
mutate(bt_slope = Estimate.cYEAR,
bt_upper = upper_slope,
bt_lower = lower_slope) %>%
separate(level, c('region', 'taxa'), sep = '_(?!.*_)',
remove = F) %>%
select(region, taxa, bt_slope, bt_upper, bt_lower, model)
rrt_taxa_coef <- rrt_rrt_estimate %>%
filter(model!='Jne_rlm_reg_txa') %>%
# separate on the last (rightmost) underscore
separate(rrt, c('realm_region', 'taxa'), sep = '_(?!.*_)',
remove = F) %>%
separate(realm_region, c('realm' , 'region'), sep = '(^[^_]*_)',
remove = F) %>%
separate(realm_region, c('realm', 'nuu'), sep = '_', remove = F) %>%
mutate(rrt_slope = Estimate.cYEAR,
rrt_lower = lower_slope,
rrt_upper = upper_slope,
model = ifelse(model=='Jtu_rlm_reg_txa', 'Jtu_new_norm', 'S_pois_new')) %>%
select(-nuu) %>%
select(realm, region, taxa, rrt_slope, rrt_lower, rrt_upper, model)
marine_taxa_compare <- inner_join(bt_taxa_coef,
rrt_taxa_coef %>%
filter(realm=='Marine'),
by = c('region', 'taxa', 'model'))
# need to put region information in from the metadata for the non-marine biomes
terr_regions <- rarefied_medians_region %>%
filter(REALM!='Marine') %>%
distinct(Biome, region) #
other_taxa_compare <- inner_join(bt_taxa_coef %>%
mutate(Biome=region) %>%
select(-region) %>%
left_join(terr_regions,
by = 'Biome') %>%
# get rid of the marine guys.
# notice that we have a single estimate from the BT model
# for multiple regions (for which we will have estimates from RRT)
filter(!is.na(region)) ,
rrt_taxa_coef %>%
filter(realm!='Marine'),
by = c('region', 'taxa', 'model'))
col_realm = c('Marine' = 'blue', 'Terrestrial' = 'orange', 'Freshwater' = 'dark green')
bind_rows(marine_taxa_compare,
other_taxa_compare) %>%
# filter(model!='Jtu_new_norm') %>%
ggplot() +
# facet_grid(region~taxa) +
# facet_wrap(~model, scales = 'free') +
geom_linerange(aes(x = rrt_slope, ymin = bt_lower, ymax = bt_upper,
colour = realm,
linetype = model),
size = .8,
alpha = 0.25) +
geom_errorbarh(aes(xmin = rrt_lower, xmax = rrt_upper,
colour = realm,
linetype = model,
y = bt_slope),
height = 0,
size = .8,
alpha = 0.25) +
geom_point(aes(x = rrt_slope, y = bt_slope, colour = realm,
shape = model),
alpha = 0.75,
size = 4) +
geom_abline(intercept = 0, slope = 1, lty = 2) +
# overall turnover estimates
geom_point(data = global_trends,
aes(x = rrt_jtu, y = bt_jtu),
size = 2) +
geom_linerange(data = global_trends,
aes(x = rrt_jtu, ymin = bt_jtu_lower, ymax = bt_jtu_upper)) +
geom_errorbarh(data = global_trends,
aes(y = bt_jtu, xmin = rrt_jtu_lower, xmax = rrt_jtu_upper),
height = 0) +
# overall richness estimates
geom_point(data = global_trends,
aes(x = rrt_s, y = bt_s),
size = 2, shape = 17) +
geom_linerange(data = global_trends,
aes(x = rrt_s, ymin = bt_s_lower, ymax = bt_s_upper)) +
geom_errorbarh(data = global_trends,
aes(y = bt_s, xmin = rrt_s_lower, xmax = rrt_s_upper),
height = 0) +
scale_shape_manual(values = c('Jtu_new_norm' = 19,
'S_pois_new' = 17),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
scale_linetype_manual(values = c('Jtu_new_norm' = 1,
'S_pois_new' = 2),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")) +
scale_color_manual(values = col_realm) +
labs(x = 'Taxon-level slope (RRT model: realm-region-taxon estimates)',
y = 'Taxon-level slope (BT model: taxon within biome estimates)') +
theme_bw() +
theme(#panel.grid = element_blank(),
legend.position = c(0,1),
legend.background = element_blank(),
legend.justification = c(0,1),
legend.title = element_blank()) +
guides(colour = guide_legend(override.aes = list(alpha = 1)))
bind_rows(marine_taxa_compare,
other_taxa_compare) %>%
filter(model=='Jtu_new_norm')
bind_rows(marine_taxa_compare,
other_taxa_compare) %>%
filter(model=='Jtu_new_norm') %>%
mutate(rho_estimate_jtu = cor.test(bt_slope, rrt_slope, method = 'spearman')$estimate %>% signif(digits = 2),
p_value_jtu = cor.test(bt_slope, rrt_slope, method = 'spearman')$p.value %>% signif(digits = 2))
load('~/Dropbox/1current/BioTime/local_code/hierarchical/6results/ct/rlm_reg_txa_coef_ranef.Rdata')
# first need to wrangle to levels for plots
rrt_rrt_estimate <- rrt_rrt_estimate %>%
# separate on the last (rightmost) underscore
separate(rrt, c('realm_region', 'taxa'), sep = '_(?!.*_)',
remove = F)
rrt_rrt_estimate <- rrt_rrt_estimate %>%
# separate realm and region
separate(realm_region, c('realm' , 'region'), sep = '(^[^_]*_)',
remove = F) %>%
separate(realm_region, c('realm', 'nuu'), sep = '_', remove = F) %>%
select(-nuu)
# add realm metadata
load('~/Desktop/revision_code/rarefied_medians_continents.Rdata')
rarefied_medians <- rarefied_medians %>%
unite(rrt, REALM, region, taxa_mod, remove = F)
rrt <- rarefied_medians %>%
select(REALM, region, taxa_mod, rrt, Biome) %>%
distinct(region, taxa_mod, rrt, .keep_all = T) %>%
rename(taxa = taxa_mod)
rrt_rrt_estimate <- rrt_rrt_estimate %>%
left_join(rrt,
by = c('rrt', 'region', 'taxa'))
# rename group of taxa labelled 'All' to 'Multiple'
rrt_rrt_estimate$taxa2 <- factor(rrt_rrt_estimate$taxa,
levels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"All", "Marine invertebrates/plants", "Mammals"),
labels = c("Fish", "Benthos", "Birds", "Invertebrates", "Plant", "Amphibians",
"Multiple taxa", "Marine invertebrates/plants", "Mammals"))
# colours for each taxa
taxa_col = c('Multiple taxa' = '#e6f598',
'Amphibians' = '#fee08b',
'Benthos' = '#5e4fa2',
'Birds' = '#f46d43',
'Fish' = '#3288bd',
'Invertebrates' = '#abdda4',
'Mammals' = '#9e0142',
'Marine invertebrates/plants' = '#66c2a5',
'Plant' = '#fdae61')
# set shapes for plotting groups of taxa
taxa_shape = c('Invertebrates' = 0, 'Fish' = 1, 'Benthos' = 2, 'Birds' = 15, 'Mammals' = 17,
'Plant' = 5, 'Multiple taxa' = 6, 'Marine invertebrates/plants' = 7, 'Amphibians' = 8)
# combine terrestrial and freshwater realms
rrt_rrt_estimate <- rrt_rrt_estimate %>%
mutate(realm2 = ifelse(REALM=='Marine', REALM, 'Terrestrial and freshwater'))
# tidy region names for plotting
rrt_rrt_estimate <- rrt_rrt_estimate %>%
mutate(region = gsub('_', ' ', region))
# first, get legend for building plot
taxa_col_shape_leg <- ggplot() +
facet_wrap(~realm2, ncol = 2) +
geom_point(data = rrt_rrt_estimate %>% filter(model=='Jtu_rlm_reg_txa'),
aes(x = region, y = Estimate.cYEAR,
group = taxa2,
colour = taxa2,
shape = taxa2),
position = position_dodge(width = 0.5),
size = 2) +
geom_linerange(data = rrt_rrt_estimate %>% filter(model=='Jtu_rlm_reg_txa'),
aes(x = region, ymin = lower_slope, ymax = upper_slope,
group = taxa2,
colour = taxa2),
position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2) +
geom_hline(data = rrt_global_estimates %>%
filter(model=='Jtu_rlm_reg_txa' & term=='Slope'),
aes(yintercept = Estimate)) +
geom_rect(data = rrt_global_estimates %>%
filter(model=='Jtu_rlm_reg_txa' & term=='Slope'),
aes(xmin = -Inf, xmax = Inf, ymin = lower, ymax = upper),
alpha = 0.2) +
scale_colour_manual(name = 'Taxa', values=taxa_col) +
scale_shape_manual(name = 'Taxa', values = taxa_shape) +
coord_flip() +
theme_bw() +
theme(legend.position = 'top',
legend.direction = 'horizontal') #+
source('~/Dropbox/1current/R_random/functions/gg_legend.R')
legend1 <- gg_legend(taxa_col_shape_leg)
# rotate line for legend: see https://stackoverflow.com/questions/35703983/how-to-change-angle-of-line-in-customized-legend-in-ggplot2
library(grid)
GeomLinerange$draw_key <- function(data, params, size)
{
segmentsGrob(0, 0.5, 1, 0.5, gp = gpar(col = alpha(data$colour,
data$alpha), lwd = data$size * .pt, lty = data$linetype,
lineend = "butt"))
}
terr_region_taxa_coef <- ggplot() +
# facet_wrap(~climate_mod, scales = 'free') +
geom_linerange(data = rrt_rrt_estimate %>% filter(model=='S_rlm_reg_txa' & realm2!='Marine'),
aes(x = reorder(region, Estimate.cYEAR), ymin = lower_slope, ymax = upper_slope,
group = interaction(realm,taxa2),
colour = taxa2, linetype = realm),
position = position_dodge(width = 0.5)) +
geom_point(data = rrt_rrt_estimate %>% filter(model=='S_rlm_reg_txa' & realm2!='Marine'),
aes(x = reorder(region, Estimate.cYEAR), y = Estimate.cYEAR,
group = interaction(realm,taxa2),
colour = taxa2,
shape = taxa2),
position = position_dodge(width = 0.5),
size = 2,
stroke = 1.2) +
geom_hline(yintercept = 0, lty = 2) +
geom_hline(data = rrt_global_estimates %>%
filter(model=='S_rlm_reg_txa' & term=='Slope'),
aes(yintercept = Estimate)) +
geom_rect(data = rrt_global_estimates %>%
filter(model=='S_rlm_reg_txa' & term=='Slope'),
aes(xmin = -Inf, xmax = Inf, ymin = lower, ymax = upper),
alpha = 0.2) +
labs(x = '',
y = '',
subtitle = 'Terrestrial and freshwater region - taxon combinations',
tag = 'B') +
scale_x_discrete(labels = scales::wrap_format(12)) +
scale_colour_manual(guide = F,
values=taxa_col) +
scale_shape_manual(guide = F,
values = taxa_shape) +
scale_linetype_manual(name = 'Realm',
values = c('Terrestrial' = 1, 'Freshwater' = 2)) +
coord_flip() +
theme_bw() +
theme(legend.position = c(1,0),
legend.justification = c(1,0),
legend.background = element_blank(),
axis.text.y = element_text(size = 10, lineheight = .8))
# separate realms to declutter
marine_region_taxa_coef <- ggplot() +
# facet_wrap(.~climate_mod, scales = 'free') +
geom_linerange(data = rrt_rrt_estimate %>% filter(model=='S_rlm_reg_txa' & realm2=='Marine'),
aes(x = reorder(region, Estimate.cYEAR), ymin = lower_slope, ymax = upper_slope,
group = taxa2,
colour = taxa2),
position = position_dodge(width = 0.7)) +
geom_point(data = rrt_rrt_estimate %>% filter(model=='S_rlm_reg_txa' & realm2=='Marine'),
aes(x = reorder(region, Estimate.cYEAR), y = Estimate.cYEAR,
group = taxa2,
colour = taxa2,
shape = taxa2),
position = position_dodge(width = 0.7),
size = 2,
stroke = 1.2) +
geom_hline(yintercept = 0, lty = 2) +
geom_hline(data = rrt_global_estimates %>%
filter(model=='S_rlm_reg_txa' & term=='Slope'),
aes(yintercept = Estimate)) +
geom_rect(data = rrt_global_estimates %>%
filter(model=='S_rlm_reg_txa' & term=='Slope'),
aes(xmin = -Inf, xmax = Inf, ymin = lower, ymax = upper),
alpha = 0.2) +
labs(x = '',
y = '',
subtitle = 'Marine region - taxon combinations',
tag = 'A') +
scale_x_discrete(labels = scales::wrap_format(20),
# expand = c(0.1,0.1)
) +
scale_colour_manual(values=taxa_col) +
scale_shape_manual(values = taxa_shape) +
coord_flip() +
theme_bw() +
theme(legend.position = 'none',
axis.text.y = element_text(size = 8, lineheight = .8))
top =  cowplot::plot_grid(NULL, legend1, NULL, ncol = 3)
bottom = cowplot::plot_grid(marine_region_taxa_coef,
terr_region_taxa_coef,
ncol = 2, align = 'hv') +
cowplot::draw_label('', y = 0.012) +
cowplot::draw_label('Region', x = 0.012, angle = 90)
bottom = cowplot::plot_grid(marine_region_taxa_coef,
terr_region_taxa_coef,
ncol = 2, align = 'hv') +
cowplot::draw_label('Change in species richnes [log(S)/yr]', y = 0.012) +
cowplot::draw_label('Region', x = 0.012, angle = 90)
cowplot::plot_grid(top, bottom,
ncol = 1,
rel_heights = c(0.05, 1))
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS6.png',
width = 290, height = 250, units = 'mm')
bottom = cowplot::plot_grid(marine_region_taxa_coef,
terr_region_taxa_coef,
ncol = 2, align = 'hv') +
cowplot::draw_label('Change in species richness [log(S)/yr]', y = 0.012) +
# cowplot::draw_label('Turnover [proportion of species/yr]', y = 0.012) +
cowplot::draw_label('Region', x = 0.012, angle = 90)
cowplot::plot_grid(top, bottom,
ncol = 1,
rel_heights = c(0.05, 1))
ggsave('~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Rev_2/figures/FigS6.png',
width = 290, height = 250, units = 'mm')
# code to plot coefficients of new model: this time with realm coded into groups: realm-region-taxa
library(tidyverse)
load('~/Dropbox/1current/BioTime/local_code/hierarchical/6results/ct/rlm_reg_txa_coef_ranef.Rdata')
# first need to wrangle to levels for plots
rrt_rrt_estimate <- rrt_rrt_estimate %>%
# separate on the last (rightmost) underscore
separate(rrt, c('realm_region', 'taxa'), sep = '_(?!.*_)',
remove = F)
rrt_rrt_estimate <- rrt_rrt_estimate %>%
# separate realm and region
separate(realm_region, c('realm' , 'region'), sep = '(^[^_]*_)',
remove = F) %>%
separate(realm_region, c('realm', 'nuu'), sep = '_', remove = F) %>%
select(-nuu)
rrt_rrt_estimate
rrt_rrt_estimate %>% distinct(model)
rrt_rrt_estimate %>% distinct(rrt)
