Jtu_new_norm_ALL_rarefyID,
Jne_new_norm_ALL_rarefyID)
CT_cont_taxa_ranef <- bind_rows(S_pois_new_ALL_cont_taxa_ranef,
Jtu_norm_new_cont_taxa_ranef,
Jne_new_norm_ALL_cont_taxa_ranef)
CT_studyID_ranef <- bind_rows(S_pois_new_ALL_studyID_ranef,
Jtu_new_norm_ALL_studyID_ranef,
Jne_new_norm_ALL_studyID_ranef)
CT_studyID_ranef
S_pois_new_ALL_studyID_ranef
Jtu_new_norm_ALL_studyID_ranef
Jne_new_norm_ALL_studyID_ranef
Jtu_new_norm_ALL_studyID_ranef <- as_tibble(Jtu_new_norm_ALL_ranef$`region_taxa:STUDY_ID`[,,'cYEAR']) %>%
mutate(level = rownames(Jtu_new_norm_ALL_ranef$`region_taxa:STUDY_ID`))
names(Jtu_new_norm_ALL_studyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
Jtu_new_norm_ALL_studyID_ranef <- Jtu_new_norm_ALL_studyID_ranef %>%
mutate(
model = 'Jtu_norm_continent',
time_period = 'ALL')
Jtu_new_norm_ALL_rarefyID_ranef <- as_tibble(Jtu_new_norm_ALL_ranef$`region_taxa:STUDY_ID:rarefyID`[,,'cYEAR']) %>%
mutate(level = rownames(Jtu_new_norm_ALL_ranef$`region_taxa:STUDY_ID:rarefyID`))
names(Jtu_new_norm_ALL_rarefyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
Jtu_new_norm_ALL_rarefyID_ranef <- Jtu_new_norm_ALL_rarefyID_ranef %>%
mutate(
model = 'Jtu_new_norm',
time_period = 'ALL')
CT_rarefyID_ranef <- bind_rows(S_pois_new_ALL_rarefyID_ranef,
Jtu_new_norm_ALL_rarefyID_ranef,
Jne_new_norm_ALL_rarefyID_ranef)
CT_global_estimates <- bind_rows(S_pois_new_ALL_global,
Jtu_new_norm_ALL_global,
Jne_new_norm_ALL_global)
CT_cont_taxa_estimate <- bind_rows(S_pois_ALL_cont_taxa,
Jtu_norm_new_cont_taxa,
Jne_norm_new_cont_taxa)
CT_studyID_estimate <- bind_rows(S_pois_new_ALL_studyID,
Jtu_new_norm_ALL_studyID,
Jne_new_norm_ALL_studyID)
CT_rarefyID_coef <- bind_rows(S_pois_new_ALL_rarefyID,
Jtu_new_norm_ALL_rarefyID,
Jne_new_norm_ALL_rarefyID)
CT_cont_taxa_ranef <- bind_rows(S_pois_new_ALL_cont_taxa_ranef,
Jtu_norm_new_cont_taxa_ranef,
Jne_new_norm_ALL_cont_taxa_ranef)
CT_studyID_ranef <- bind_rows(S_pois_new_ALL_studyID_ranef,
Jtu_new_norm_ALL_studyID_ranef,
Jne_new_norm_ALL_studyID_ranef)
CT_rarefyID_ranef <- bind_rows(S_pois_new_ALL_rarefyID_ranef,
Jtu_new_norm_ALL_rarefyID_ranef,
Jne_new_norm_ALL_rarefyID_ranef)
CT_global_estimates
CT_cont_taxa_estimate
CT_studyID_estimate
CT_rarefyID_coef
CT_cont_taxa_ranef
CT_studyID_ranef
CT_rarefyID_ranef
save(CT_global_estimates,
CT_cont_taxa_estimate, CT_studyID_estimate, CT_rarefyID_coef,
CT_cont_taxa_ranef, CT_studyID_ranef, CT_rarefyID_ranef,
file = '~/Dropbox/1current/BioTime/local_code/hierarchical/6results/ct/CTRfyID_coef_ranef.Rdata')
CT_cont_taxa_ranef
rarefied_medians
rarefied_medians %>% distinct(region)
rarefied_medians %>% distinct(region_taxa)
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y)
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y)
CT_cont_taxa_ranef
left_join(CT_cont_taxa_ranef,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y))
CT_cont_taxa_ranef %>%
# fix name for joining
revname(region_taxa = cont_taxa)
CT_cont_taxa_ranef %>%
# fix name for joining
rename(region_taxa = cont_taxa)
left_join(CT_cont_taxa_ranef %>%
# fix name for joining
rename(region_taxa = cont_taxa),
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa')
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y)
51322 * 3
# join departures with meta data for plotting
departures <- left_join(CT_cont_taxa_ranef %>%
# fix name for joining
rename(region_taxa = cont_taxa),
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa')
departures %>% filter(model=='S_pois_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
CT_cont_taxa_ranef %>% filter(model=='S_pois_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
# slope ranef to qualitative (using deciles)
S_re <- CT_cont_taxa_ranef %>% filter(model=='S_pois_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
S_re_quantile <- quantile(S_re, probs = seq(0,1,by=0.2))
S_re_quantile
Jtu_re <- CT_cont_taxa_ranef %>% filter(model=='Jtu_norm_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
Jtu_re_quantile <- quantile(Jtu_re, probs = seq(0,1,by=0.2))
Jne_re <- CT_cont_taxa_ranef %>% filter(model=='Jne_norm_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
Jne_re_quantile <- quantile(Jne_re, probs = seq(0,1,by=0.2))
Jtu_re
Jtu_re_quantile
Jne_re_quantile
CT_cont_taxa_ranef
CT_cont_taxa_ranef %>%
filter(model=='S_pois_continent') %>%
mutate(S_re = Slope_ranef)
CT_cont_taxa_ranef %>%
filter(model=='S_pois_continent') %>%
mutate(S_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(region_taxa, S_re)
CT_cont_taxa_ranef %>%
filter(model=='Jtu_norm_continent') %>%
mutate(Jtu_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(region_taxa, Jtu_re)
# rearrange departures into separate columns
departures <- bind_cols(CT_cont_taxa_ranef %>%
filter(model=='S_pois_continent') %>%
mutate(S_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(region_taxa, S_re),
CT_cont_taxa_ranef %>%
filter(model=='Jtu_norm_continent') %>%
mutate(Jtu_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jtu_re),
CT_cont_taxa_ranef %>%
filter(model=='Jne_norm_continent') %>%
mutate(Jne_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jne_re))
departures
cut(S_re, breaks = c(S_re_quantile[1:3], 0, S_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE)
cut(S_re, breaks = c(S_re_quantile[1:3], 0, S_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE) %>% length()
S_re2 <- CT_cont_taxa_ranef %>% filter(model=='S_pois_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
S_re_quantile <- quantile(S_re, probs = seq(0,1,by=0.2))
Jtu_re2 <- CT_cont_taxa_ranef %>% filter(model=='Jtu_norm_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
Jtu_re_quantile <- quantile(Jtu_re, probs = seq(0,1,by=0.2))
Jne_re2 <- CT_cont_taxa_ranef %>% filter(model=='Jne_norm_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
Jne_re_quantile <- quantile(Jne_re, probs = seq(0,1,by=0.2))
# rearrange departures into separate columns
departures <- bind_cols(CT_cont_taxa_ranef %>%
filter(model=='S_pois_continent') %>%
mutate(S_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(region_taxa, S_re),
CT_cont_taxa_ranef %>%
filter(model=='Jtu_norm_continent') %>%
mutate(Jtu_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jtu_re),
CT_cont_taxa_ranef %>%
filter(model=='Jne_norm_continent') %>%
mutate(Jne_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jne_re))
# cut the slope ranefs into bins
departures <- departures %>%
mutate(S_re_q=cut(S_re, breaks = c(S_re_quantile[1:3], 0, S_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE),
# check these break points! Is zero in the right spot? Between negative and positive departures
Jtu_re_q=cut(Jtu_re, breaks = c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]),
labels = c(1:6), include.lowest = TRUE),
# check these break points!
Jne_re_q=cut(Jne_re, breaks = c(Jne_re_quantile[1:4], 0, Jne_re_quantile[5:6]),
labels = c(1:6), include.lowest = TRUE)) %>%
as_tibble()
departures
departures %>% data.frame
departures
left_join(departures,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa')
# join departures with meta data for plotting
departures <- left_join(departures,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa')
Jtu_leg_label <- c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]) %>% signif(2) %>% as.numeric() %>% format(scientific = T)
CT_global_estimates %>% filter(model=='Jtu_norm_continent' & time_period=='ALL') %>%
filter(term=='Slope') %>% .$Estimate, 4)
CT_global_estimates %>% filter(model=='Jtu_norm_continent' & time_period=='ALL') %>%
filter(term=='Slope') %>% .$Estimate
CT_global_estimates %>% filter(model=='Jtu_norm_continent' & time_period=='ALL')
bind_rows(S_pois_new_ALL_global,
Jtu_new_norm_ALL_global,
Jne_new_norm_ALL_global)
CT_global_estimates <- bind_rows(S_pois_new_ALL_global,
Jtu_new_norm_ALL_global,
Jne_new_norm_ALL_global) %>%
mutate(term = rep(c('Intercept', 'Slope'), times = 3))
CT_global_estimates
save(CT_global_estimates,
CT_cont_taxa_estimate, CT_studyID_estimate, CT_rarefyID_coef,
CT_cont_taxa_ranef, CT_studyID_ranef, CT_rarefyID_ranef,
file = '~/Dropbox/1current/BioTime/local_code/hierarchical/6results/ct/CTRfyID_coef_ranef.Rdata')
# alt legend label with the numbers representing biome estimates (not random effects)
Jtu_estimate_label <- as.numeric(signif(c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]) +
CT_global_estimates %>% filter(model=='Jtu_norm_continent' & time_period=='ALL') %>%
filter(term=='Slope') %>% .$Estimate, 4) )
Jtu_estimate_label
combined_label <- paste0(paste(Jtu_leg_label, Jtu_estimate_label, sep = ' ('),')')
filter(departures, Realm2 == 'Marine')
# rearrange departures into separate columns
departures <- bind_cols(CT_cont_taxa_ranef %>%
filter(model=='S_pois_continent') %>%
mutate(S_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(region_taxa, S_re),
CT_cont_taxa_ranef %>%
filter(model=='Jtu_norm_continent') %>%
mutate(Jtu_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jtu_re),
CT_cont_taxa_ranef %>%
filter(model=='Jne_norm_continent') %>%
mutate(Jne_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jne_re))
# cut the slope ranefs into bins
departures <- departures %>%
mutate(S_re_q=cut(S_re, breaks = c(S_re_quantile[1:3], 0, S_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE),
# check these break points! Is zero in the right spot? Between negative and positive departures
Jtu_re_q=cut(Jtu_re, breaks = c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]),
labels = c(1:6), include.lowest = TRUE),
# check these break points!
Jne_re_q=cut(Jne_re, breaks = c(Jne_re_quantile[1:4], 0, Jne_re_quantile[5:6]),
labels = c(1:6), include.lowest = TRUE)) %>%
as_tibble()
# join departures with meta data for plotting
departures <- left_join(departures,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa') %>%
mutate(Realm2 = ifelse(REALM=='Marine', 'Marine', 'Terrestrial or freshwater'))
filter(departures, Realm2 == 'Marine')
S_re2 <- CT_cont_taxa_ranef %>% filter(model=='S_pois_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
S_re_quantile <- quantile(S_re, probs = seq(0,1,by=0.2))
Jtu_re2 <- CT_cont_taxa_ranef %>% filter(model=='Jtu_norm_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
Jtu_re_quantile <- quantile(Jtu_re, probs = seq(0,1,by=0.2))
Jne_re2 <- CT_cont_taxa_ranef %>% filter(model=='Jne_norm_continent') %>% select(Slope_ranef) %>% .$Slope_ranef
Jne_re_quantile <- quantile(Jne_re, probs = seq(0,1,by=0.2))
# rearrange departures into separate columns
departures <- bind_cols(CT_cont_taxa_ranef %>%
filter(model=='S_pois_continent') %>%
mutate(S_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(region_taxa, S_re),
CT_cont_taxa_ranef %>%
filter(model=='Jtu_norm_continent') %>%
mutate(Jtu_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jtu_re),
CT_cont_taxa_ranef %>%
filter(model=='Jne_norm_continent') %>%
mutate(Jne_re = Slope_ranef,
region_taxa = cont_taxa) %>%
select(Jne_re))
departures
# cut the slope ranefs into bins
departures <- departures %>%
mutate(S_re_q=cut(S_re, breaks = c(S_re_quantile[1:3], 0, S_re_quantile[4:6]),
labels = c(1:6), include.lowest = TRUE),
# check these break points! Is zero in the right spot? Between negative and positive departures
Jtu_re_q=cut(Jtu_re, breaks = c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]),
labels = c(1:6), include.lowest = TRUE),
# check these break points!
Jne_re_q=cut(Jne_re, breaks = c(Jne_re_quantile[1:4], 0, Jne_re_quantile[5:6]),
labels = c(1:6), include.lowest = TRUE)) %>%
as_tibble()
departures
left_join(departures,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa')
left_join(departures,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa') %>%
mutate(Realm2 = ifelse(REALM=='Marine', 'Marine', 'Terrestrial or freshwater'))
# join departures with meta data for plotting
departures <- left_join(departures,
rarefied_medians %>%
# want the unique locations for the grouping variable we are going to map
distinct(region_taxa, rarefyID_x, rarefyID_y, .keep_all = T) %>%
select(REALM, Biome, continent, taxa_mod, region_taxa, rarefyID_x, rarefyID_y),
by = 'region_taxa') %>%
mutate(Realm2 = ifelse(REALM=='Marine', 'Marine', 'Terrestrial or freshwater'))
departures
Jtu_leg_label <- c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]) %>% signif(2) %>% as.numeric() %>% format(scientific = T)
# alt legend label with the numbers representing biome estimates (not random effects)
Jtu_estimate_label <- as.numeric(signif(c(Jtu_re_quantile[1:4], 0, Jtu_re_quantile[5:6]) +
CT_global_estimates %>% filter(model=='Jtu_norm_continent' & time_period=='ALL') %>%
filter(term=='Slope') %>% .$Estimate, 4) )
combined_label <- paste0(paste(Jtu_leg_label, Jtu_estimate_label, sep = ' ('),')')
filter(departures, Realm2 == 'Marine')
# mar_biome_plot_Jtu <-
ggplot() +
# geom_polygon(data = filter(departures, Realm2 == 'Marine'),
#              aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re),
#              alpha = 0.85) +#colour = 'black',
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(departures, REALM == 'Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re), size = 0.5, stroke = 1.2) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
# scale_linetype_manual(guide = F, values = c('yes' = 1, 'no'= 0)) +
scale_size_area() +
labs(y = '',
x = '',
subtitle = 'A    Marine') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.425), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
world = map_data('World')
world = map_data('world')
# mar_biome_plot_Jtu <-
ggplot() +
# geom_polygon(data = filter(departures, Realm2 == 'Marine'),
#              aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re),
#              alpha = 0.85) +#colour = 'black',
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(departures, REALM == 'Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re), size = 0.5, stroke = 1.2) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
# scale_linetype_manual(guide = F, values = c('yes' = 1, 'no'= 0)) +
scale_size_area() +
labs(y = '',
x = '',
subtitle = 'A    Marine') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.425), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
# mar_biome_plot_Jtu <-
ggplot() +
# geom_polygon(data = filter(departures, Realm2 == 'Marine'),
#              aes(x = long, y = lat, group = group, linetype = NA, fill = Jtu_re),
#              alpha = 0.85) +#colour = 'black',
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = filter(departures, REALM == 'Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re_q), size = 0.5, stroke = 1.2) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
# scale_linetype_manual(guide = F, values = c('yes' = 1, 'no'= 0)) +
scale_size_area() +
labs(y = '',
x = '',
subtitle = 'A    Marine') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.425), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
departures %>% dplyr::filter(REALM!='Marine')
# terr_biome_plot_Jtu <-
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = departures %>% dplyr::filter(REALM!='Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re_q), size = 0.5, stroke = 1.2) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
# scale_linetype_manual(guide = F, values = c('yes' = 1, 'no'= 0)) +
labs(x = '',
y = '',
subtitle = 'B    Terrestrial and freshwater') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.425), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
rarefied_medians %>% distinct(region)
# terr_biome_plot_Jtu <-
ggplot() +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#7f7f7f', size=0) +
geom_point(data = departures %>% dplyr::filter(REALM!='Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = Jtu_re_q), size = 2, stroke = 1.2) +
scale_fill_manual(name = '', values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6'),
labels = c(combined_label[-1]), drop = FALSE) +
scale_colour_manual(guide = FALSE, values = c('1' = '#b2182b', '2' = '#d6604d', '3' = '#f4a582',
'4' = '#fddbc7', '5' = '#4393c3', '6' = '#2166ac'),
breaks = c('1', '2', '3', '4', '5', '6')) +
# scale_linetype_manual(guide = F, values = c('yes' = 1, 'no'= 0)) +
labs(x = '',
y = '',
subtitle = 'B    Terrestrial and freshwater') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(panel.grid.minor = element_blank(),
axis.text = element_blank(), axis.ticks = element_blank(),#)
legend.position = c(0.21, 0.425), legend.direction = 'horizontal',
# legend.position = 'none',
legend.key.size = unit(5, 'mm'), legend.spacing.x=unit(0, 'mm'),
legend.text = element_text(angle = 90, margin = margin(t=1)),
plot.margin = margin(0,0,0,0, 'mm'), legend.background = element_rect(fill = 'transparent'),
legend.text.align = 0.9,
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(fill = guide_legend(title = 'Biome departure (estimate)',
title.position = 'top',  label.position = 'top', nrow = 1, label.vjust = 0,
title.hjust = 0))
departures %>% dplyr::filter(REALM!='Marine')
departures %>% dplyr::filter(REALM!='Marine') %>% filter(Jtu_re > 0)
