filter(model!='Jne_new_norm' & model!='Jtu_beta') %>%
mutate(bt_slope = Estimate.cYEAR,
bt_upper = upper_slope,
bt_lower = lower_slope) %>%
select(Biome, STUDY_ID, model, bt_slope, bt_upper, bt_lower) %>%
inner_join(realm_climate_biome %>%
select(-REALM),
by = 'Biome')
rarefied_medians <- rarefied_medians %>%
group_by(Biome, taxa_mod) %>%
mutate(n_cells = n_distinct(rarefyID)) %>%
ungroup() %>%
filter(n_cells > 3)
#--------rarefied_medians.Rdata for meta data not in model object
load('~/Dropbox/BiogeoBioTIME/rarefied_medians.Rdata')
rarefied_medians <- rarefied_medians %>%
group_by(Biome, taxa_mod) %>%
mutate(n_cells = n_distinct(rarefyID)) %>%
ungroup() %>%
filter(n_cells > 3)
realm_climate_biome <- rarefied_medians %>%
distinct(REALM, climate_mod, Biome) %>%
ungroup()
# want unique climate (latitudinal bands for each biome)
# this is to compare like with like: some of the rct study estimates span multiple latitudinal bands
realm_climate_biome <- realm_climate_biome %>%
# filter(Biome %in% biome_levels_model$Biome) %>%
mutate(climate_mod = ifelse(Biome=='Arctic', 'Polar',
ifelse(Biome=='Boreal_Forests_Taiga', 'Temperate',
ifelse(Biome=='Cold_Temperate_Northeast_Pacific', 'Temperate',
ifelse(Biome=='Continental_High_Antarctic', 'Polar',
ifelse(Biome=='Hawaii', 'Tropical',
ifelse(Biome=='Northern_European_Seas', 'Temperate',
ifelse(Biome=='Subantarctic_Islands', 'Polar',
ifelse(Biome=='Tropical_and_Subtropical_Grasslands_Savannas_and_Shrublands', 'Temperate',
ifelse(Biome=='Tropical_and_Subtropical_Moist_Broadleaf_Forests', 'Tropical',
ifelse(Biome=='Tropical_Northwestern_Atlantic', 'Tropical',
ifelse(Biome=='Northeast_Australian_Shelf', 'Tropical', climate_mod))))))))))))
# wrangle study level estimates
BT_study_estimate <- BT_studyID_estimate %>%
mutate(STUDY_ID2 = str_sub(level, start = -3),
# drop underscores
STUDY_ID = sub('_','', STUDY_ID2),
# remove study
bt = str_remove(level, STUDY_ID2),
# remove trailing underscore
bt = sub('_$', '', bt)) %>%
# ok, now use existing hacky code to separate biome and taxa
separate(bt, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t)
# repeat for realm-climate-taxa model (note different number of studies due to inclusion criteria)
rct_study_estimate <- rlm_clm_txa_studyID_estimate %>%
separate(level, into = c('Realm', 'Climate', 'Taxa', 'STUDY_ID', 'b5' , 'b6'), sep = '_', remove = FALSE) %>%
select(-b5, -b6)
# repeat for realm-region-taxa model (note different number of studies due to inclusion criteria)
rrt_study_estimate <- rrt_studyID_estimate %>%
# separate on the last (rightmost) underscore
separate(level, c('realm_region_taxa', 'STUDY_ID'), sep = '_(?!.*_)',
remove = F)
# prepare coefficients for joining
s1 <- BT_study_estimate %>%
filter(model!='Jne_new_norm' & model!='Jtu_beta') %>%
mutate(bt_slope = Estimate.cYEAR,
bt_upper = upper_slope,
bt_lower = lower_slope) %>%
select(Biome, STUDY_ID, model, bt_slope, bt_upper, bt_lower) %>%
inner_join(realm_climate_biome %>%
select(-REALM),
by = 'Biome')
s2 <- rct_study_estimate %>%
filter(model!='Jne_new_norm' & time_period=='ALL') %>%
mutate(rct_slope = Estimate.cYEAR,
rct_lower = lower_slope,
rct_upper = upper_slope) %>%
select(STUDY_ID, model, rct_slope, rct_lower, rct_upper)
s3 <- rrt_study_estimate %>%
filter(model!='Jne_rlm_reg_txa') %>%
mutate(rrt_slope = Estimate.cYEAR,
rrt_lower = lower_slope,
rrt_upper = upper_slope) %>%
# need to rename the models so as we can join using model names
mutate(model = ifelse(model=='Jtu_rlm_reg_txa', 'Jtu_new_norm', 'S_pois_new')) %>%
select(STUDY_ID, model, rrt_slope, rrt_lower, rrt_upper)
study_compare <- inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod'))
s2
s2 <- rct_study_estimate %>%
filter(model!='Jne_new_norm' & time_period=='ALL') %>%
mutate(rct_slope = Estimate.cYEAR,
rct_lower = lower_slope,
rct_upper = upper_slope,
climate_mod = Climate) %>%
select(climate_mod, STUDY_ID, model, rct_slope, rct_lower, rct_upper)
study_compare <- inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod'))
study_compare %>%
ggplot() +
geom_linerange(aes(x = rct_slope, ymin = bt_lower, ymax = bt_upper, colour = model),
alpha = 0.2, size = .8) +
geom_errorbarh(aes(xmin = rct_lower, xmax = rct_upper, colour = model,
y = bt_slope),
height = 0, alpha = 0.2, size = .8) +
geom_point(aes(x = rct_slope, y = bt_slope, colour = model),
alpha = 0.5,
size = 2,
pch = 19) +
# geom_point(aes(x = rrt_slope, y = bt_slope, colour = model),
#            alpha = 0.5,
#            size = 2,
#            pch = 19) +
geom_abline(intercept = 0, slope = 1, lty = 2) +
scale_color_manual(values = c('Jtu_new_norm' = '#d8b365',
'S_pois_new' = '#5ab4ac'),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")
#guide = '', guide argument is broken
) +
labs(x = 'Study-level slope (RCT model)',
y = 'Study-level slope (BT model)') +
theme_bw() +
theme(#panel.grid = element_blank(),
legend.position = c(0.1, 0.9),
legend.title = element_blank())
study_compare
study_compare <- inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod')) %>%
left_join(s3, by = 'STUDY_ID', 'model')
study_compare
inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod'))
inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod')) %>%
left_join(s3, by = c('STUDY_ID', 'model'))
inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod')) %>%
right_join(s3, by = c('STUDY_ID', 'model'))
inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod')) %>%
inner_join(s3, by = c('STUDY_ID', 'model'))
study_compare <- inner_join(s1, s2,
by = c("STUDY_ID", 'model', 'climate_mod')) %>%
inner_join(s3, by = c('STUDY_ID', 'model'))
study_compare %>%
ggplot() +
# geom_linerange(aes(x = rct_slope, ymin = bt_lower, ymax = bt_upper, colour = model),
#                alpha = 0.2, size = .8) +
# geom_errorbarh(aes(xmin = rct_lower, xmax = rct_upper, colour = model,
#                    y = bt_slope),
#                height = 0, alpha = 0.2, size = .8) +
# geom_point(aes(x = rct_slope, y = bt_slope, colour = model),
#            alpha = 0.5,
#            size = 2,
#            pch = 19) +
geom_point(aes(x = rrt_slope, y = bt_slope, colour = model),
alpha = 0.5,
size = 2,
pch = 19) +
geom_abline(intercept = 0, slope = 1, lty = 2) +
scale_color_manual(values = c('Jtu_new_norm' = '#d8b365',
'S_pois_new' = '#5ab4ac'),
labels = c("Turnover component of\nJaccard's dissimilarity",
"Species richness")
#guide = '', guide argument is broken
) +
labs(x = 'Study-level slope (RCT model)',
y = 'Study-level slope (BT model)') +
theme_bw() +
theme(#panel.grid = element_blank(),
legend.position = c(0.1, 0.9),
legend.title = element_blank())
rrt_study_estimate
## compare the coefficients of jtu_norm and jtu_beta
rm(list=ls())
library(tidyverse)
library(ggridges)
load('~/Dropbox/1current/BioTime/BioGeo-BioDiv-Change/R/bt/model_fits_output/BT_model_coef_ranef.Rdata')
ls()
BT_studyID_estimate
BT_studyID_estimate %>% distinct(model)
load('~/Dropbox/BiogeoBioTIME/rarefied_medians.Rdata')
rarefied_medians <- rarefied_medians %>%
group_by(Biome, taxa_mod) %>%
mutate(n_cells = n_distinct(rarefyID)) %>%
ungroup() %>%
filter(n_cells > 3)
# want the centre_lat and studyID to join with study-level estimates
BT_study_estimate <- BT_studyID_estimate %>%
mutate(STUDY_ID2 = str_sub(level, start = -3),
# drop underscores
STUDY_ID = sub('_','', STUDY_ID2),
# remove study
bt = str_remove(level, STUDY_ID2),
# remove trailing underscore
bt = sub('_$', '', bt)) %>%
# ok, now use existing hacky code to separate biome and taxa
separate(bt, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t)
BT_study_estimate %>% distinct(model)
meta <- rarefied_medians %>% distinct(REALM, Biome, taxa_mod, STUDY_ID)
Jtu_study <- BT_study_estimate %>%
# remove duplicate entries created when adding meta data
distinct(model, Biome, taxa_mod, Estimate.cYEAR, .keep_all = T) %>%
filter(model == 'Jtu_new_norm' & time_period=='ALL') %>%
mutate(deltaJtu = Estimate.cYEAR,
deltaJtu_lower = lower_slope,
deltaJtu_upper = upper_slope) %>%
select(level, deltaJtu, deltaJtu_lower, deltaJtu_upper)
Jne_study <- BT_study_estimate %>%
# remove duplicate entries created when adding meta data
distinct(model, Biome, taxa_mod, Estimate.cYEAR, .keep_all = T) %>%
filter(model == 'Jne_new_norm' & time_period=='ALL') %>%
mutate(deltaJne = Estimate.cYEAR,
deltaJne_lower = lower_slope,
deltaJne_upper = upper_slope) %>%
select(deltaJne,
deltaJne_lower,
deltaJne_upper)
S_study <- BT_study_estimate %>%
# remove duplicate entries created when adding meta data
distinct(model, Biome, taxa_mod, Estimate.cYEAR, .keep_all = T) %>%
filter(model == 'S_pois_new' & time_period=='ALL') %>%
mutate(deltaS = Estimate.cYEAR,
deltaS_lower = lower_slope,
deltaS_upper = upper_slope) %>%
select(deltaS,
deltaS_lower,
deltaS_upper)
study_corr <- bind_cols(
Jne_study,
Jtu_study,
S_study
) %>%
# separate level into its nested components
mutate(STUDY_ID2 = str_sub(level, start = -3),
# drop underscores
STUDY_ID = sub('_','', STUDY_ID2),
# remove study
bt = str_remove(level, STUDY_ID2),
# remove trailing underscore
bt = sub('_$', '', bt)) %>%
# ok, now use existing hacky code to separate biome and taxa
separate(bt, c('b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 't'), remove=F, sep='_') %>%
mutate(taxa_mod = ifelse(!is.na(t), t,
ifelse(!is.na(b7), b7,
ifelse(!is.na(b6), b6,
ifelse(!is.na(b5), b5,
ifelse(!is.na(b4), b4,
ifelse(!is.na(b3), b3, b2)))))),
b7 = ifelse(b7==taxa_mod, '', b7),
Biome = ifelse(is.na(b3), b1,
ifelse(is.na(b4), paste(b1, b2, sep='_'),
ifelse(is.na(b5), paste(b1, b2, b3, sep='_'),
ifelse(is.na(b6), paste(b1, b2, b3, b4, sep='_'),
ifelse(is.na(b7), paste(b1, b2, b3, b4, b5, sep='_'),
paste(b1, b2, b3, b4, b5, b6, b7, sep='_'))))))) %>%
select(-b1, -b2, -b3, -b4, -b5, -b6, -b7, -t, -STUDY_ID2)
# put the meta data in
study_corr <- left_join(study_corr,
meta %>% mutate(STUDY_ID = as.character(STUDY_ID)),
by = c('Biome', 'taxa_mod', 'STUDY_ID'))
# some studies have not got there realm information
missing <- study_corr %>%
filter(is.na(REALM)) %>%
distinct(STUDY_ID)
# check the realm of these studies
meta %>%
filter(STUDY_ID %in% missing$STUDY_ID) %>%
distinct(REALM) # they are all terrestrial...
# change all the missing realms to terrestrial
study_corr <- study_corr %>%
mutate(REALM = ifelse(is.na(REALM), 'Terrestrial', REALM))
study_corr <- study_corr %>%
mutate(Jtu_grt_Jne = ifelse(deltaJtu > deltaJne, 'Jtu > Jne', 'Jne > Jtu'))
# add another indicator for quadrant conceptual model (four colours: Jne>Jtu & S < 0, Jne>Jtu & S>0, etc)
study_corr <- study_corr %>%
mutate(quad = ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS < 0), 'c1',
ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS > 0), 'c2',
ifelse((Jtu_grt_Jne=='Jne > Jtu' & deltaS < 0), 'c3', 'c4'))),
quad_sig = ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS_upper < 0 & deltaJtu_lower > 0), 'c1_sig',
ifelse((Jtu_grt_Jne=='Jtu > Jne' & deltaS_lower > 0 & deltaJtu_lower > 0), 'c2_sig',
ifelse((Jtu_grt_Jne=='Jne > Jtu' & deltaS_upper < 0 & deltaJne_lower > 0), 'c3_sig',
ifelse((Jtu_grt_Jne=='Jne > Jtu' & deltaS_lower > 0 & deltaJne_lower > 0), 'c4_sig', quad)))))
# create some covariates for plotting whether changes differ from zero
study_corr <- study_corr %>%
mutate(alphaS = ifelse((deltaS_lower < 0 & deltaS_upper > 0), 0.95, 1),
alphaJtu = ifelse((deltaJtu_lower < 0 & deltaJtu_upper > 0), 0.95, 1),
alphaJne = ifelse((deltaJne_lower < 0 & deltaJne_upper > 0), 0.95, 1),
ab_sig = ifelse(((Jtu_grt_Jne=='Jtu > Jne' & alphaJtu==1 & alphaS==1) |
(Jtu_grt_Jne=='Jne > Jtu' & alphaJne==1 & alphaS==1)), 1, 0.95))
study_corr <- study_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 1.1, 1),
# make points large if both change in dissimilarity and richness differ from zero
sizeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 2, .5),
sizeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 2, .5))
study_corr
## get model coefs for models fit with study-level varying coefs only
##------data and libraries-----------------------
rm(list=ls())
library(brms)
library(dplyr)
#library(broom)
library(tidyr)
library(tibble)
#----load data
##----count data only, whole time period--------
load('~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/N_lognorm_STUDY-5366358.Rdata')
##--species richness coefficients and random effects---------
N_lnorm_global <- fixef(N_lognorm_STUDY, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'N_lnorm',
time_period = 'ALL')
names(N_lnorm_global)[3:4] <- c('lower', 'upper')
N_lnorm_global <- N_lnorm_global %>%
mutate(
change = ifelse(lower > 0, 'up',
ifelse(upper < 0, 'down', 'neutral')))
N_lnorm_global
N_lnorm_groupCoefs <- coef(N_lognorm_STUDY, robust = TRUE, probs = c(0.05, 0.95))
as_tibble(N_lnorm_groupCoefs[[1]]) %>%
mutate(level = rownames(N_lnorm_groupCoefs[[1]]))
##  break into study and rarefyID estimates
N_lnorm_studyID <- as_tibble(N_lnorm_groupCoefs[[1]]) %>%
mutate(STUDY_ID = rownames(N_lnorm_groupCoefs[[1]]))
N_lnorm_rarefyID <- as_tibble(N_lnorm_groupCoefs[[2]]) %>%
mutate(rarefyID = rownames(N_lnorm_groupCoefs[[2]]))
N_lnorm_rarefyID
N_lnorm_rarefyID <- as_tibble(N_lnorm_groupCoefs[[2]]) %>%
mutate(level = rownames(N_lnorm_groupCoefs[[2]]))
N_lnorm_rarefyID
N_lognorm_STUDY$data %>% head
rm(list=N_lognorm_STUDY)
rm(N_lognorm_STUDY)
load('~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/ENSPIE_lognorm_study-5366357.Rdata')
##--evenness coefficients and random effects---------
ENSPIE_lnorm_global <- fixef(ENSPIE_lognorm_STUDY, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'ENSPIE_lnorm',
time_period = 'ALL')
names(ENSPIE_lnorm_global)[3:4] <- c('lower', 'upper')
ENSPIE_lnorm_global <- ENSPIE_lnorm_global %>%
mutate(
change = ifelse(lower > 0, 'up',
ifelse(upper < 0, 'down', 'neutral')))
ENSPIE_lnorm_global
ENSPIE_lnorm_groupCoefs <- coef(ENSPIE_lognorm_STUDY, robust = TRUE, probs = c(0.05, 0.95))
##  break into study and rarefyID estimates
ENSPIE_lnorm_studyID <- as_tibble(ENSPIE_lnorm_groupCoefs[[1]]) %>%
mutate(STUDY_ID = rownames(ENSPIE_lnorm_groupCoefs[[1]]))
names(ENSPIE_lnorm_studyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
ENSPIE_lnorm_studyID <- ENSPIE_lnorm_studyID %>%
mutate(
model = 'ENSPIE_lnorm',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
ENSPIE_lnorm_rarefyID <- as_tibble(ENSPIE_lnorm_groupCoefs[[2]]) %>%
mutate(level = rownames(ENSPIE_lnorm_groupCoefs[[2]]))
names(ENSPIE_lnorm_rarefyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
ENSPIE_lnorm_rarefyID <- ENSPIE_lnorm_rarefyID %>%
mutate(
model = 'ENSPIE_lnorm',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
##  break into study and rarefyID estimates
N_lnorm_studyID <- as_tibble(N_lnorm_groupCoefs[[1]]) %>%
mutate(STUDY_ID = rownames(N_lnorm_groupCoefs[[1]]))
names(N_lnorm_studyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
N_lnorm_studyID <- N_lnorm_studyID %>%
mutate(
model = 'N_lnorm',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
N_lnorm_rarefyID <- as_tibble(N_lnorm_groupCoefs[[2]]) %>%
mutate(level = rownames(N_lnorm_groupCoefs[[2]]))
names(N_lnorm_rarefyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
N_lnorm_rarefyID <- N_lnorm_rarefyID %>%
mutate(
model = 'N_lnorm',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
N_lnorm_rarefyID
ENSPIE_lnorm_studyID
ENSPIE_lnorm_studyID %>% filter(change!='neutral')
##----- get raw data and process for metadata--------
load('~/Dropbox/BiogeoBioTIME/rarefied_medians.Rdata')
cell_count <- rarefied_medians %>%
group_by(STUDY_ID) %>%
dplyr::summarise(n_cells = n_distinct(rarefyID)) %>%
ungroup()
##	rejoin
rarefied_medians <- left_join(cell_count, rarefied_medians, by=c('STUDY_ID'))
##	filter to count data and biome/taxa combinations with >3 cells
# these are the data that the model was fit to
rarefied_medians <- rarefied_medians %>%
filter(BROAD_TYPE=='count') %>%
# simplify realm covariate for plotting
mutate(Realm2 = ifelse(REALM!='Marine', 'Terrestrial/Freshwater', 'Marine'))
ENSPIE_lnorm_studyID
pp_check(ENSPIE_lognorm_STUDY) + scale_x_continuous(trans='log2')
library(tidyverse)#----load data
library(brms)
pp_check(ENSPIE_lognorm_STUDY) + scale_x_continuous(trans='log2')
?`brms-package`
rarefied_medians %>% summarise(min(ENSPIE))
rarefied_medians %>% summarise(min(N))
#----load data
##----count data only, whole time period--------
load('~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/N_lognorm_STUDY-5366358.Rdata')
pp_check(N_lognorm_STUDY) + scale_x_continuous(trans='log2')
rarefied_medians %>% summarise(min(S))
rarefied_medians %>% summarise(max(S))
load('~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/S_pois_study-5366359.Rdata')
rm(N_lognorm_STUDY)
rm(ENSPIE_lognorm_STUDY)
##--evenness coefficients and random effects---------
S_pois_global <- fixef(ENSPIE_lognorm_STUDY, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'S_pois',
time_period = 'ALL')
##--evenness coefficients and random effects---------
S_pois_global <- fixef(S_pois_STUDY, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'S_pois',
time_period = 'ALL')
names(S_pois_global)[3:4] <- c('lower', 'upper')
S_pois_global <- S_pois_global %>%
mutate(
change = ifelse(lower > 0, 'up',
ifelse(upper < 0, 'down', 'neutral')))
S_pois_global
S_pois_groupCoefs <- coef(S_pois_STUDY, robust = TRUE, probs = c(0.05, 0.95))
##  break into study and rarefyID estimates
S_pois_studyID <- as_tibble(S_pois_groupCoefs[[1]]) %>%
mutate(STUDY_ID = rownames(S_pois_groupCoefs[[1]]))
names(S_pois_studyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_studyID <- S_pois_studyID %>%
mutate(
model = 'S_pois',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
S_pois_rarefyID <- as_tibble(S_pois_groupCoefs[[2]]) %>%
mutate(level = rownames(S_pois_groupCoefs[[2]]))
names(S_pois_rarefyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_rarefyID <- S_pois_rarefyID %>%
mutate(
model = 'S_pois',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
alpha_global_studyOnly <- bind_rows(N_lnorm_global,
ENSPIE_lnorm_global,
S_pois_global)
alpha_global_studyOnly
exp(0.00207)
exp(.2)
alpha_study_studyOnly <- bind_rows(N_lnorm_studyID,
ENSPIE_lnorm_studyID,
S_pois_studyID)
alpha_study_studyOnly
alpha_cell_studyOnly <- bind_rows(N_lnorm_rarefyID,
ENSPIE_lnorm_rarefyID,
S_pois_rarefyID)
save('~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/alpha_coefs_studyOnly.Rdata')
save(alpha_global_studyOnly,
alpha_study_studyOnly,
alpha_cell_studyOnly,
'~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/alpha_coefs_studyOnly.Rdata')
save(alpha_global_studyOnly,
alpha_study_studyOnly,
alpha_cell_studyOnly,
file = '~/Dropbox/1current/BioTime/multidimensionalChangeMS/data_model_fits/alpha_coefs_studyOnly.Rdata')
S_pois_studyID %>% filter(change!='neutral')
N_lnorm_studyID %>% filter(change!='neutral')
ENSPIE_lnorm_studyID %>% filter(change!='neutral')
