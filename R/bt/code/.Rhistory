position = position_jitter(width = 0.25, height = 0.25)) +
geom_point(data = filter(study_corr, quad == 'c3' | quad == 'c4'),
aes(x = CENT_LONG, y = CENT_LAT, shape = taxa_mod2, colour = quad, stroke = strokeGREEN, size = sizeGREEN),
position = position_jitter(width = 0.25, height = 0.25)) +
# geom_hline(yintercept = 23.5, lty = 2) +
# geom_hline(yintercept = -23.5, lty = 2) +
scale_shape_manual(name = 'Taxa', values = shapes_mod2) +
scale_color_manual(guide = FALSE, values = quad_col) +
scale_size_area(guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
labs(subtitle = 'd') +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(axis.text = element_text(size = 14), panel.grid.minor = element_blank(),
legend.position = c(0.2, 0.3), legend.direction = 'horizontal',
legend.title = element_text(size = 14), legend.text = element_text(size = 12),
legend.background = element_rect(fill = 'transparent'),
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(shape = guide_legend(title.position = 'top', ncol = 2, override.aes = list(size = 2)))
world <- map_data('world')
# put the alpha-beta diversity concept on a map
alpha_beta_map <- ggplot() +
# facet_wrap(~Biome) +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#cccccc', size=0) +
# geom_polygon(data = filter(terr_hulls, Biome=='Boreal_Forests_Taiga'), alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# geom_point(data = filter(coords),
#            aes(x = rarefyID_x, y = rarefyID_y, shape = taxa_mod), size = 0.2, alpha = 0.1) +
geom_point(data = filter(study_corr, quad != 'c3' & quad != 'c4'),
aes(x = hc_x, y = hc_y, shape = taxa_mod2, colour = quad, stroke = strokeBLUE, size = sizeBLUE),
position = position_jitter(width = 0.25, height = 0.25)) +
geom_point(data = filter(study_corr, quad == 'c3' | quad == 'c4'),
aes(x = CENT_LONG, y = CENT_LAT, shape = taxa_mod2, colour = quad, stroke = strokeGREEN, size = sizeGREEN),
position = position_jitter(width = 0.25, height = 0.25)) +
# geom_hline(yintercept = 23.5, lty = 2) +
# geom_hline(yintercept = -23.5, lty = 2) +
scale_shape_manual(name = 'Taxa', values = shapes_mod2) +
scale_color_manual(guide = FALSE, values = quad_col) +
scale_size_area(guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
labs(subtitle = 'd') +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(axis.text = element_text(size = 14), panel.grid.minor = element_blank(),
legend.position = c(0.2, 0.3), legend.direction = 'horizontal',
legend.title = element_text(size = 14), legend.text = element_text(size = 12),
legend.background = element_rect(fill = 'transparent'),
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(shape = guide_legend(title.position = 'top', ncol = 2, override.aes = list(size = 2)))
alpha_beta_map
# put the alpha-beta diversity concept on a map
alpha_beta_map <- ggplot() +
# facet_wrap(~Biome) +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#cccccc', size=0) +
# geom_polygon(data = filter(terr_hulls, Biome=='Boreal_Forests_Taiga'), alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# geom_point(data = filter(coords),
#            aes(x = rarefyID_x, y = rarefyID_y, shape = taxa_mod), size = 0.2, alpha = 0.1) +
geom_point(data = filter(study_corr, quad != 'c3' & quad != 'c4'),
aes(x = CENT_LONG, y = CENT_LAT, shape = taxa_mod2, colour = quad),#, stroke = strokeBLUE, size = sizeBLUE
position = position_jitter(width = 0.25, height = 0.25)) +
geom_point(data = filter(study_corr, quad == 'c3' | quad == 'c4'),
aes(x = CENT_LONG, y = CENT_LAT, shape = taxa_mod2, colour = quad),#, stroke = strokeGREEN, size = sizeGREEN
position = position_jitter(width = 0.25, height = 0.25)) +
# geom_hline(yintercept = 23.5, lty = 2) +
# geom_hline(yintercept = -23.5, lty = 2) +
scale_shape_manual(name = 'Taxa', values = shapes_mod2) +
scale_color_manual(guide = FALSE, values = quad_col) +
scale_size_area(guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
labs(subtitle = 'd') +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(axis.text = element_text(size = 14), panel.grid.minor = element_blank(),
legend.position = c(0.2, 0.3), legend.direction = 'horizontal',
legend.title = element_text(size = 14), legend.text = element_text(size = 12),
legend.background = element_rect(fill = 'transparent'),
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(shape = guide_legend(title.position = 'top', ncol = 2, override.aes = list(size = 2)))
alpha_beta_map
study_corr
# covariates 4 graphics
study_corr <- study_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 1.1, 1),
# make points large if both change in dissimilarity and richness differ from zero
sizeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 2, .5),
sizeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 2, .5))
study_corr
study_corr <- study_corr %>%
mutate(alphaS = ifelse((deltaS_lower < 0 & deltaS_upper > 0), 0.95, 1),
alphaJtu = ifelse((deltaJtu_lower < 0 & deltaJtu_upper > 0), 0.95, 1),
alphaJne = ifelse((deltaJne_lower < 0 & deltaJne_upper > 0), 0.95, 1),
ab_sig = ifelse(((Jtu_grt_Jne=='Jtu > Jne' & alphaJtu==1 & alphaS==1) |
(Jtu_grt_Jne=='Jne > Jtu' & alphaJne==1 & alphaS==1)), 1, 0.95))
study_corr <- study_corr %>%
mutate(strokeS = ifelse(alphaS==1, 1.1, 1),
sizeS = ifelse(alphaS==1, 2, .5),
# set stroke and size for points where both alpha and beta differ from zero
strokeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 1.1, 1),
strokeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 1.1, 1),
# make points large if both change in dissimilarity and richness differ from zero
sizeBLUE = ifelse((Jtu_grt_Jne=='Jtu > Jne' & alphaS==1 & alphaJtu==1), 2, .5),
sizeGREEN = ifelse((Jtu_grt_Jne=='Jne > Jtu' & alphaS==1 & alphaJne==1), 2, .5))
# put the alpha-beta diversity concept on a map
alpha_beta_map <- ggplot() +
# facet_wrap(~Biome) +
geom_polygon(data=world, aes(long, lat, group = group), colour=NA, fill='#cccccc', size=0) +
# geom_polygon(data = filter(terr_hulls, Biome=='Boreal_Forests_Taiga'), alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# geom_point(data = filter(coords),
#            aes(x = rarefyID_x, y = rarefyID_y, shape = taxa_mod), size = 0.2, alpha = 0.1) +
geom_point(data = filter(study_corr, quad != 'c3' & quad != 'c4'),
aes(x = CENT_LONG, y = CENT_LAT, shape = taxa_mod2, colour = quad, stroke = strokeBLUE, size = sizeBLUE),#
position = position_jitter(width = 0.25, height = 0.25)) +
geom_point(data = filter(study_corr, quad == 'c3' | quad == 'c4'),
aes(x = CENT_LONG, y = CENT_LAT, shape = taxa_mod2, colour = quad, stroke = strokeBLUE, size = sizeBLUE),
position = position_jitter(width = 0.25, height = 0.25)) +
# geom_hline(yintercept = 23.5, lty = 2) +
# geom_hline(yintercept = -23.5, lty = 2) +
scale_shape_manual(name = 'Taxa', values = shapes_mod2) +
scale_color_manual(guide = FALSE, values = quad_col) +
scale_size_area(guide = FALSE) +
xlab('') +
ylab('') +
theme_bw() +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(0, -60, -23.5, 23.5, 60)) +
coord_cartesian(xlim = c(-180, 180), ylim = c(-90, 90)) +
labs(subtitle = 'd') +
# coord_map('mollweide', xlim = c(-180, 180)) +
theme(axis.text = element_text(size = 14), panel.grid.minor = element_blank(),
legend.position = c(0.2, 0.3), legend.direction = 'horizontal',
legend.title = element_text(size = 14), legend.text = element_text(size = 12),
legend.background = element_rect(fill = 'transparent'),
plot.subtitle = element_text(size = 14, face = 'bold')) +
guides(shape = guide_legend(title.position = 'top', ncol = 2, override.aes = list(size = 2)))
alpha_beta_map
study_corr %>% group_by(STUDY_ID) %>% summarise(n_biomes = n_distinct(Biome))
rarefied_medians %>% filter(STUDY_ID==112) %>% distinct(Biome)
rarefied_medians %>% filter(STUDY_ID==112) %>% distinct(TITLE)
rarefied_medians %>% filter(STUDY_ID==112) %>% distinct(taxa_col)
rarefied_medians %>% filter(STUDY_ID==112) %>% distinct(taxa_mod)
rarefied_medians %>% filter(STUDY_ID==112) %>% distinct(ORGANISMS)
rarefied_medians %>% filter(STUDY_ID==112) %>% distinct(CENT_LAT)
rarefied_medians %>% filter(STUDY_ID==117) %>% distinct(taxa_mod)
rarefied_medians %>% filter(STUDY_ID==117) %>% distinct(Biome)
##  get unique coords for each biome, taxa combination
coords <- rarefied_medians %>% distinct(REALM, Biome, taxa_mod, STUDY_ID, rarefyID, rarefyID_x, rarefyID_y)
coords
coords %>%
filter(REALM == 'Terrestrial') %>%
ggplot() +
facet_wrap(~Biome, scales ='free') +
geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_point(aes(x = rarefyID_x, y = rarefyID_y), size = 0.5) +
theme(legend.position = 'none')
coords %>%
filter(REALM == 'Marine') %>%
ggplot() +
facet_wrap(~Biome, scales = 'free') +
# geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_point(aes(x = rarefyID_x, y = rarefyID_y)) +
theme(legend.position = 'none')
##--------marine realm wrangle------------------
marine_hulls <- plyr::ddply(filter(coords, REALM=='Marine'),
plyr::.(REALM, Biome, taxa_mod, STUDY_ID), find_hull) %>%
as_tibble()
find_hull <- function(df) df[chull(df$rarefyID_x, df$rarefyID_y), ]
# function to find centre of hull
hull_centre <- function(rarefyID_x, rarefyID_y){
hc_x = geosphere::geomean(cbind(x = rarefyID_x, y = rarefyID_y))[1]
hc_y = geosphere::geomean(cbind(x = rarefyID_x, y = rarefyID_y))[2]
return(cbind.data.frame(hc_x, hc_y))
}
##--------marine realm wrangle------------------
marine_hulls <- plyr::ddply(filter(coords, REALM=='Marine'),
plyr::.(REALM, Biome, taxa_mod, STUDY_ID), find_hull) %>%
as_tibble()
marine_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID)
marine_nest <- marine_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID) %>%
filter(n_distinct(rarefyID) > 1) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y)))
marine_nest
mar_hull_cent <- marine_nest %>% unnest(hull_centre)
shapes = c('Invertebrates' = 0, 'Fish' = 1, 'Benthos' = 2, 'Birds' = 15, 'Mammals' = 17,
'Plant' = 5, 'All' = 6, 'Marine invertebrates/plants' = 7, 'Amphibians' = 8)
shapes_mod2 = c('Invertebrates' = 0, 'Fish' = 1, 'Benthos' = 2, 'Birds' = 15, 'Mammals' = 17,
'Plant' = 5, 'Multiple taxa' = 6, 'Marine invertebrates/plants' = 7, 'Amphibians' = 8)
ggplot() +
facet_wrap(~Biome) +
geom_polygon(data = marine_hulls, alpha = 0.5,
aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_point(data = filter(coords, REALM=='Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
geom_point(data = mar_hull_cent,
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
# coord_map('gilbert', xlim=c(-180, 180)) +
theme(legend.position = 'top', legend.direction = 'horizontal')
ggplot() +
facet_wrap(~Biome) +
geom_polygon(data = filter(marine_hulls, abs(rarefyID_y) < 23.5),  alpha = 0.5,
aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_point(data = filter(coords, REALM=='Marine' &  abs(rarefyID_y) < 23.5),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
geom_point(data = filter(mar_hull_cent, abs(hc_y) < 23.5),
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
coord_map('mollweide', xlim=c(-180, 180)) +
theme(legend.position = 'top', legend.direction = 'horizontal')
ggplot() +
facet_wrap(~Biome, scales = 'free') +
geom_polygon(data = filter(marine_hulls, Biome=='Tropical_Northwestern_Atlantic'), alpha = 0.5,
aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
geom_point(data = filter(coords, REALM=='Marine' & Biome=='Tropical_Northwestern_Atlantic'),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
geom_point(data = filter(mar_hull_cent, Biome=='Tropical_Northwestern_Atlantic'),
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
theme(legend.position = 'top', legend.direction = 'horizontal')
marine_nest %>% filter(Biome=='Arctic' & taxa_mod=='Invertebrates') %>%
unnest(data) %>%
# filter to region with most data
filter(rarefyID_x < -100) %>%
# nest and recalculate centre of small hull
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y))) %>%
unnest(hull_centre) %>%
bind_rows(marine_nest %>% filter(Biome=='Arctic' & taxa_mod=='Invertebrates') %>%
unnest(data) %>%
# filter to region with most data
filter(rarefyID_x > -100) %>%
mutate(
hc_x = rarefyID_x,
hc_y = rarefyID_y
))
#   geom_polygon(data = filter(marine_hulls, Biome=='Tropical_Northwestern_Atlantic'), alpha = 0.5,
#                aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
#   geom_point(data = filter(coords, REALM=='Marine' & Biome=='Tropical_Northwestern_Atlantic'),
#              aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
#   geom_point(data = filter(mar_hull_cent, Biome=='Tropical_Northwestern_Atlantic'),
#              aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
#   scale_shape_manual(values = shapes) +
#   theme(legend.position = 'top', legend.direction = 'horizontal')
#
# # 3 separate points for arctic inverts (or 1 pt )
arctic_invert_centre <- marine_nest %>% filter(Biome=='Arctic' & taxa_mod=='Invertebrates') %>%
unnest(data) %>%
# filter to region with most data
filter(rarefyID_x < -100) %>%
# nest and recalculate centre of small hull
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y))) %>%
unnest(hull_centre) %>%
bind_rows(marine_nest %>% filter(Biome=='Arctic' & taxa_mod=='Invertebrates') %>%
unnest(data) %>%
# filter to region with most data
filter(rarefyID_x > -100) %>%
mutate(
hc_x = rarefyID_x,
hc_y = rarefyID_y
))
ggplot() +
facet_wrap(~Biome, scales = 'free') +
geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_polygon(data = filter(marine_hulls, Biome=='Arctic'), alpha = 0.5,
aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
#
geom_point(data = filter(coords, REALM=='Marine' & Biome=='Arctic'),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
# majority of the data are from north america
geom_point(data = arctic_invert_centre,
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
theme(legend.position = 'top', legend.direction = 'horizontal')
filter(marine_hulls, Biome=='Arctic')
ggplot() +
facet_wrap(~Biome, scales = 'free') +
# geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
# geom_polygon(data = filter(marine_hulls, Biome=='Arctic'), alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# #
# geom_point(data = filter(coords, REALM=='Marine' & Biome=='Arctic'),
#            aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
# majority of the data are from north america
geom_point(data = arctic_invert_centre,
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
theme(legend.position = 'top', legend.direction = 'horizontal')
ggplot() +
facet_wrap(~Biome, scales = 'free') +
# geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
# geom_polygon(data = filter(marine_hulls, Biome=='Arctic'), alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# #
# geom_point(data = filter(coords, REALM=='Marine' & Biome=='Arctic'),
#            aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
# majority of the data are from north america
geom_point(data = arctic_invert_centre,
aes(x = hc_x, y = hc_y, shape = taxa_mod2)) +
scale_shape_manual(values = shapes) +
theme(legend.position = 'top', legend.direction = 'horizontal')
arctic_invert_centre %>% distinct(taxa_mod)
ggplot() +
facet_wrap(~Biome, scales = 'free') +
# geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
# geom_polygon(data = filter(marine_hulls, Biome=='Arctic'), alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# #
geom_point(data = filter(coords, REALM=='Marine' & Biome=='Arctic'),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
# majority of the data are from north america
geom_point(data = arctic_invert_centre,
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
theme(legend.position = 'top', legend.direction = 'horizontal')
marine_nest %>% filter(Biome=='Arctic' & taxa_mod=='Invertebrates') %>%
unnest(data)
arctic_invert_centre
mar_hull_cent
mar_hull_cent %>% group_by(REALM, Biome, taxa_col, STUDY_ID) %>% summarise(n_distinct(hc_x, hc_y))
mar_hull_cent %>% group_by(REALM, Biome, taxa_mod, STUDY_ID) %>% summarise(n_distinct(hc_x, hc_y))
mar_hull_cent %>% group_by(REALM, Biome, taxa_mod, STUDY_ID) %>% summarise(points = n_distinct(hc_x, hc_y)) %>% filter(points!=1)
mar_hull_cent %>% distinct(STUDY_ID)
mar_hull_cent %>% group_by(STUDY_ID) %>% summarise(n.biome = n_distinct(Biome))
mar_hull_cent %>% group_by(STUDY_ID) %>% summarise(n.biome = n_distinct(Biome)) %>% filter(n.biome>1)
mar_hull_cent %>% group_by(STUDY_ID) %>% summarise(n.biome = n_distinct(Biome)) %>% filter(n.biome>5)
mar_hull_cent %>% group_by(STUDY_ID) %>% summarise(n.biome = n_distinct(Biome)) %>% filter(n.biome>4)
mar_hull_cent %>% group_by(Biome, taxa_mod) %>% summarise(n.study = n_distinct(STUDY_ID), points = n_distinct(hc_x, hc_y)) %>% filter(points!=1)
# we want a point for each unique combination of biome/taxa/study
mar_hull_cent %>%
group_by(Biome, taxa_mod) %>%
summarise(n.study = n_distinct(STUDY_ID), points = n_distinct(hc_x, hc_y)) %>%
filter(points!=n.study)
# we want a point for each unique combination of biome/taxa/study
mar_hull_cent %>%
group_by(Biome, taxa_mod) %>%
summarise(n.study = n_distinct(STUDY_ID), points = n_distinct(hc_x, hc_y)) %>%
filter(points!=n.study)
ggplot() +
facet_wrap(~Biome) +
geom_polygon(data = marine_hulls, alpha = 0.5,
aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_point(data = filter(coords, REALM=='Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
geom_point(data = mar_hull_cent,
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
scale_shape_manual(values = shapes) +
# coord_map('gilbert', xlim=c(-180, 180)) +
theme(legend.position = 'top', legend.direction = 'horizontal')
terr_hulls <- plyr::ddply(filter(coords, REALM!='Marine'),
plyr::.(REALM, Biome, taxa_mod), find_hull) %>%
as_tibble()
terr_nest <- terr_hulls %>%
group_by(REALM, Biome, taxa_mod) %>%
filter(n_distinct(rarefyID) > 1) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y)))
terr_hull_cent <- terr_nest %>% unnest(hull_centre)
# we want a point for each unique combination of biome/taxa/study: ok
terr_hull_cent %>%
group_by(Biome, taxa_mod) %>%
summarise(n.study = n_distinct(STUDY_ID), #
points = n_distinct(hc_x, hc_y)) %>%
filter(points!=n.study)
terr_hulls <- plyr::ddply(filter(coords, REALM!='Marine'),
plyr::.(REALM, Biome, taxa_mod, STUDY_ID), find_hull) %>%
as_tibble()
terr_nest <- terr_hulls %>%
group_by(REALM, Biome, taxa_mod, STUDY_ID) %>%
filter(n_distinct(rarefyID) > 1) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~ hull_centre(.x$rarefyID_x, .x$rarefyID_y)))
terr_hull_cent <- terr_nest %>% unnest(hull_centre)
# we want a point for each unique combination of biome/taxa/study: ok
terr_hull_cent %>%
group_by(Biome, taxa_mod) %>%
summarise(n.study = n_distinct(STUDY_ID), #
points = n_distinct(hc_x, hc_y)) %>%
filter(points!=n.study)
# # visual inspection
ggplot() +
facet_wrap(~Biome, scales = 'free') +
# geom_polygon(data = terr_hulls, alpha = 0.5,
#              aes(x = rarefyID_x, rarefyID_y, fill = taxa_mod)) +
# geom_map(data=world, map=world, aes(long, lat, map_id=region), colour='white', fill='#7f7f7f', size=0.05, alpha=0.5) +
geom_point(data = filter(coords, REALM!='Marine'),
aes(x = rarefyID_x, y = rarefyID_y, colour = taxa_mod), size = 0.5, alpha = 0.8) +
geom_point(data = terr_hull_cent,
aes(x = hc_x, y = hc_y, shape = taxa_mod)) +
stat_density2d(data = terr_hulls, alpha = 0.5, geom = 'raster',
aes(x = rarefyID_x, rarefyID_y, fill=taxa_mod, group = taxa_mod), contour = FALSE) +
scale_shape_manual(values = shapes) +
# coord_map('gilbert', xlim=c(-180, 180)) +
theme(legend.position = 'top', legend.direction = 'horizontal')
terr_hulls %>%
filter(Biome==bad_hulls$Biome[8] & taxa_mod=='Amphibians') %>%
select(-rarefyID) %>%
nest(rarefyID_x, rarefyID_y) %>%
mutate(hull_centre = purrr::map(data, ~hull_centre(.x$rarefyID_x, .x$rarefyID_y))) %>%
unnest(hull_centre)
coords
BT_rarefyID_ranef
BT_rarefyID_ranef %>% distinct(rarefyID)
BT_rarefyID_ranef %>% distinct(rarefyID, model)
BT_rarefyID_ranef %>% distinct(model)
BT_rarefyID_ranef %>% filter(model=='Jtu_new_norm') %>% distinct(model)
BT_rarefyID_ranef %>% filter(model=='Jtu_new_norm') %>% distinct(rarefied_medians)
BT_rarefyID_ranef %>% filter(model=='Jtu_new_norm') %>% distinct(rarefyID)
BT_rarefyID_ranef %>% filter(model=='Jtu_new_norm' | model=='S_pois_new') %>% distinct(rarefyID)
study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne')
# plot change dissmilarity coefficient (either Jtu or Jne) as a function of the richness coefficient
# errorbars omitted for clarity;
# alpha_beta_scatter <-
ggplot() +
# facet_wrap(~taxa_mod, scales = 'free') +
# Jtu > Jne
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS, y = deltaJtu, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS,  ymin = deltaJtu_lower, ymax = deltaJtu_upper, colour = quad, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
aes(x = (deltaS), (deltaJtu), colour = REALM, shape = taxa_mod2, size = sizeBLUE)) +#
# Jne > Jtu
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS, y = deltaJne, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS,  ymin = deltaJne_lower, ymax = deltaJne_upper, colour = quad, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
aes(x = deltaS, deltaJne, colour = REALM, shape = taxa_mod2, size = sizeGREEN)) +
geom_hline(yintercept = 0, lty = 1) +
geom_vline(xintercept = 0, lty = 1) +
labs(y = (expression(paste(Delta, ' dissimilarity component', sep = ' '))),
x = (expression(paste(Delta, ' S', sep = ' '))),
subtitle = 'b') +
scale_color_manual(values = quad_col, guide = FALSE) +
scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_mod2, guide = FALSE) +
# scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
# scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = 'none', panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
# plot change dissmilarity coefficient (either Jtu or Jne) as a function of the richness coefficient
# errorbars omitted for clarity;
# alpha_beta_scatter <-
ggplot() +
# facet_wrap(~taxa_mod, scales = 'free') +
# Jtu > Jne
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS, y = deltaJtu, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS,  ymin = deltaJtu_lower, ymax = deltaJtu_upper, colour = quad, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
aes(x = (deltaS), (deltaJtu), colour = REALM, shape = taxa_mod2, size = sizeBLUE)) +#
# Jne > Jtu
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS, y = deltaJne, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS,  ymin = deltaJne_lower, ymax = deltaJne_upper, colour = quad, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
aes(x = deltaS, deltaJne, colour = REALM, shape = taxa_mod2, size = sizeGREEN)) +
geom_hline(yintercept = 0, lty = 1) +
geom_vline(xintercept = 0, lty = 1) +
labs(y = (expression(paste(Delta, ' dissimilarity component', sep = ' '))),
x = (expression(paste(Delta, ' S', sep = ' '))),
subtitle = 'b') +
# scale_color_manual(values = quad_col, guide = FALSE) +
scale_color_manual(values = c('Marine' = 'Dark blue', 'Terrestrial' = 'Dark orange', 'Freshwater' = 'Dark green'), guide = FALSE) +
scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_mod2, guide = FALSE) +
# scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
# scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = 'none', panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
