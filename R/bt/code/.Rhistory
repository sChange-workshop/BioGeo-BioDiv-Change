scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_mod2, guide = FALSE) +
# scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
# scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = 'none', panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
# plot change dissmilarity coefficient (either Jtu or Jne) as a function of the richness coefficient
# errorbars omitted for clarity;
# alpha_beta_scatter <-
ggplot() +
# facet_wrap(~taxa_mod, scales = 'free') +
# Jtu > Jne
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS, y = deltaJtu, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
#                aes(x = deltaS,  ymin = deltaJtu_lower, ymax = deltaJtu_upper, colour = quad, stroke = strokeBLUE,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jtu > Jne'),
aes(x = (deltaS), (deltaJtu), colour = REALM, shape = taxa_mod2, size = sizeBLUE)) +#
# Jne > Jtu
# geom_errorbarh(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS, y = deltaJne, xmin = deltaS_lower, xmax = deltaS_upper, colour = quad, height = 0, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
# geom_linerange(data = taxa_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
#                aes(x = deltaS,  ymin = deltaJne_lower, ymax = deltaJne_upper, colour = quad, stroke = strokeGREEN,
#                    alpha = ab_sig)) +
geom_point(data = study_corr %>% filter(Jtu_grt_Jne=='Jne > Jtu'),
aes(x = deltaS, deltaJne, colour = REALM, shape = taxa_mod2, size = sizeGREEN)) +
geom_hline(yintercept = 0, lty = 1) +
geom_vline(xintercept = 0, lty = 1) +
labs(y = (expression(paste(Delta, ' dissimilarity component', sep = ' '))),
x = (expression(paste(Delta, ' S', sep = ' '))),
subtitle = 'b') +
# scale_color_manual(values = quad_col, guide = FALSE) +
scale_color_manual(values = c('Marine' = 'Dark blue', 'Terrestrial' = 'Dark orange', 'Freshwater' = 'Dark green'), guide = FALSE) +
scale_alpha(range = c(0.7, 1), guide = FALSE) +
scale_size_area(guide = FALSE) +
scale_shape_manual(values = shapes_mod2, guide = FALSE) +
# scale_x_continuous(trans = sign_sqrt, breaks = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2), labels = c(-0.2, -0.1, -0.01, 0, 0.01, 0.1, 0.2)) +
# scale_y_continuous(trans = sign_sqrt, breaks = c(0, 0.01, 0.02, 0.04, 0.08, 0.12)) +
theme_bw() +
theme(legend.position = 'none', panel.grid = element_blank(),
axis.text.x = element_text(size = 14), axis.text.y = element_text(size = 14), #, angle = 70, vjust = 0.7
axis.title = element_text(size = 14),
plot.subtitle = element_text(size = 14, face = 'bold'))
load("/Users/sb25gaqy/Desktop/revision_models/S_pois_RCTSRfyID_count-4950831.Rdata")
ls()
S_pois_RCTSRfyID$prior
load("/Users/sb25gaqy/Dropbox/1current/BioTime/BioGeo-BioDiv-Change/R/rct/model_fits_output/rlm_clm_txa_modelCoefs.Rdata")
ls()
rm(S_pois_RCTSRfyID)
rlm_clm_txa_estimate
rlm_clm_txa_estimate %>% distinct(model)
library(tidyverse)
rlm_clm_txa_estimate %>% distinct(model)
rlm_clm_txa_estimate <- rlm_clm_txa_estimate %>%
filter(model=='Jtu_new_norm' | model=='Jne_new_norm' | model=='S_pois_new')
rlm_clm_txa_estimate
ls()
rlm_clm_txa_global_estimates %>%
filter(model=='Jtu_new_norm' | model=='Jne_new_norm' | model=='S_pois_new')
rlm_clm_txa_global_estimates
rlm_clm_txa_global_estimates <- rlm_clm_txa_global_estimates %>%
filter(model=='Jtu_new_norm' | model=='Jne_new_norm' | model=='S_pois_new')
rlm_clm_txa_rarefyID_estimate
rlm_clm_txa_rarefyID_estimate <- rlm_clm_txa_rarefyID_estimate %>%
filter(model=='Jtu_new_norm' | model=='Jne_new_norm' | model=='S_pois_new')
rlm_clm_txa_rarefyID_estimate
rlm_clm_txa_studyID_estimate %>% distinct(model)
save(rlm_clm_txa_global_estimates,
rlm_clm_txa_estimate,
rlm_clm_txa_studyID_estimate,
rlm_clm_txa_rarefyID_estimate,
file = '~/Dropbox/1current/BioTime/BioGeo-BioDiv-Change/R/rct/model_fits_output/rlm_clm_txa_modelCoefs.Rdata')
load('~/Desktop/revision_models/S_pois_BTSRfyID_expPrior_36div.Rdata')
load('~/Desktop/revision_models/Jtu_norm_BTSRfyID_count_61div.Rdata')
load('~/Desktop/revision_models/S_pois_BTSRfyID_expPrior.Rdata')
load('~/Desktop/revision_models/Jtu_norm_BTSRfyID_count.Rdata')
sigmas <- tibble(
level = c('biome', 'taxa', 'study'),
name = c('Biome', 'Biome:taxa_mod', 'Biome:taxa_mod:STUDY_ID')) %>%
nest(name) %>%
mutate(S_post = purrr::map(data, ~posterior_samples(S_pois_BTSRfyID_countData,
pars = paste('sd_', as.character(.x$name), '__cYEAR', sep=''),
exact = TRUE,
subset = floor(runif(n = 1000,
min = 1, max = 2000))) %>% unlist() %>% as.numeric()),
Jtu_post = purrr::map(data, ~posterior_samples(Jtu_norm_BTSRfyID,
pars = paste('sd_', as.character(.x$name), '__cYEAR', sep=''),
exact = TRUE,
subset = floor(runif(n = 1000,
min = 1, max = 2000))) %>% unlist() %>% as.numeric()))
sigmas %>%
unnest(S_post, Jtu_post) %>%
group_by(level) %>%
summarise(S_median = median(S_post),
S_upper95 = quantile(S_post, probs = 0.95),
S_lower5 = quantile(S_post, probs = 0.05),
Jtu_median = median(Jtu_post),
Jtu_upper95 = quantile(Jtu_post, probs = 0.95),
Jtu_lower5 = quantile(Jtu_post, probs = 0.05))
library(tidyverse)
library(brms)
# want to know the sigmas for the biome, biome-taxa and biome-taxa-study levels
sigmas <- tibble(
level = c('biome', 'taxa', 'study'),
name = c('Biome', 'Biome:taxa_mod', 'Biome:taxa_mod:STUDY_ID')) %>%
nest(name) %>%
mutate(S_post = purrr::map(data, ~posterior_samples(S_pois_BTSRfyID_countData,
pars = paste('sd_', as.character(.x$name), '__cYEAR', sep=''),
exact = TRUE,
subset = floor(runif(n = 1000,
min = 1, max = 2000))) %>% unlist() %>% as.numeric()),
Jtu_post = purrr::map(data, ~posterior_samples(Jtu_norm_BTSRfyID,
pars = paste('sd_', as.character(.x$name), '__cYEAR', sep=''),
exact = TRUE,
subset = floor(runif(n = 1000,
min = 1, max = 2000))) %>% unlist() %>% as.numeric()))
sigmas %>%
unnest(S_post, Jtu_post) %>%
group_by(level) %>%
summarise(S_median = median(S_post),
S_upper95 = quantile(S_post, probs = 0.95),
S_lower5 = quantile(S_post, probs = 0.05),
Jtu_median = median(Jtu_post),
Jtu_upper95 = quantile(Jtu_post, probs = 0.95),
Jtu_lower5 = quantile(Jtu_post, probs = 0.05))
sigmas %>%
unnest(S_post, Jtu_post) %>%
group_by(level) %>%
summarise(S_median = median(S_post),
S_Q95 = quantile(S_post, probs = 0.95),
S_Q5 = quantile(S_post, probs = 0.05),
Jtu_median = median(Jtu_post),
Jtu_Q95 = quantile(Jtu_post, probs = 0.95),
Jtu_Q5 = quantile(Jtu_post, probs = 0.05)) %>%
write.csv(file = '~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Revision/figures/bt_sigma.csv')
sigmas %>%
unnest(S_post, Jtu_post) %>%
group_by(level) %>%
summarise(S_median = median(S_post),
S_Q95 = quantile(S_post, probs = 0.95),
S_Q5 = quantile(S_post, probs = 0.05),
Jtu_median = median(Jtu_post),
Jtu_Q95 = quantile(Jtu_post, probs = 0.95),
Jtu_Q5 = quantile(Jtu_post, probs = 0.05)) %>%
write.csv(file = '~/Dropbox/BiogeoBioTIME/Biogeo Science submission/Biogeo Science Revision/figures/bt_sigma.csv', sep = ',')
load('~/Desktop/revision_models/N_lognorm_BTSRfyID_72div.Rdata')
load('~/Desktop/revision_models/ENSPIE_lognorm_BTSRfyID_7div.Rdata')
load('~/Desktop/revision_models/S_pois_BTSRfyID_count-5050747.Rdata')
library(brms)
library(dplyr)
#library(broom)
library(tidyr)
library(tibble)
#----load data
##--ENSPIE coefficients and random effects---------
ENSPIE_lognorm_new_ALL_global <- fixef(S_pois_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL')
##--ENSPIE coefficients and random effects---------
ENSPIE_lognorm_new_ALL_global <- fixef(ENSPIE_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL')
ENSPIE_lognorm_new_ALL_global
ENSPIE_lognorm_new_ALL_global <- fixef(ENSPIE_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL')
names(ENSPIE_lognorm_new_ALL_global)[3:4] <- c('lower', 'upper')
ENSPIE_lognorm_new_ALL_global <- ENSPIE_lognorm_new_ALL_global %>%
mutate(
change = ifelse(lower > 0, 'up',
ifelse(upper < 0, 'down', 'neutral')))
ENSPIE_lognorm_new_ALL_groupCoefs <- coef(ENSPIE_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95))
ENSPIE_lognorm_ALL_biome <- as_tibble(ENSPIE_lognorm_new_ALL_groupCoefs[[1]]) %>%
mutate(Biome = rownames(ENSPIE_lognorm_new_ALL_groupCoefs[[1]]))
names(ENSPIE_lognorm_ALL_biome)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_newALL_biome <- ENSPIE_lognorm_ALL_biome %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
ENSPIE_lognorm_new_ALL_taxa <- as_tibble(ENSPIE_lognorm_new_ALL_groupCoefs[[2]]) %>%
mutate(level = rownames(ENSPIE_lognorm_new_ALL_groupCoefs[[2]]))
names(ENSPIE_lognorm_new_ALL_taxa)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_taxa <- ENSPIE_lognorm_new_ALL_taxa %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
ENSPIE_lognorm_new_ALL_studyID <- as_tibble(ENSPIE_lognorm_new_ALL_groupCoefs[[3]]) %>%
mutate(level = rownames(ENSPIE_lognorm_new_ALL_groupCoefs[[3]]))
names(ENSPIE_lognorm_new_ALL_studyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_studyID <- ENSPIE_lognorm_new_ALL_studyID %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
ENSPIE_lognorm_new_ALL_rarefyID <- as_tibble(ENSPIE_lognorm_new_ALL_groupCoefs[[4]]) %>%
mutate(level = rownames(ENSPIE_lognorm_new_ALL_groupCoefs[[4]]))
names(ENSPIE_lognorm_new_ALL_rarefyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_rarefyID <- ENSPIE_lognorm_new_ALL_rarefyID %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
#-----random effects for map---------
ENSPIE_lognorm_new_ALL_ranef <- ranef(ENSPIE_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95))
# separate biome and taxa slope random effects
ENSPIE_lognorm_new_ALL_biome_ranef <- as_tibble(ENSPIE_lognorm_new_ALL_ranef$Biome[,,'cYEAR']) %>%
mutate(Biome = rownames(ENSPIE_lognorm_new_ALL_ranef$Biome))
names(ENSPIE_lognorm_new_ALL_biome_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_biome_ranef <- ENSPIE_lognorm_new_ALL_biome_ranef %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL')
ENSPIE_lognorm_new_ALL_Taxa_ranef <- as_tibble(ENSPIE_lognorm_new_ALL_ranef$`Biome:taxa_mod`[,,'cYEAR']) %>%
mutate(Taxa = rownames(ENSPIE_lognorm_new_ALL_ranef$`Biome:taxa_mod`))
names(ENSPIE_lognorm_new_ALL_Taxa_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_Taxa_ranef <- ENSPIE_lognorm_new_ALL_Taxa_ranef %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL')
ENSPIE_lognorm_new_ALL_studyID_ranef <- as_tibble(ENSPIE_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID`[,,'cYEAR']) %>%
mutate(rarefyID = rownames(ENSPIE_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID`))
names(ENSPIE_lognorm_new_ALL_studyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_studyID_ranef <- ENSPIE_lognorm_new_ALL_studyID_ranef %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL')
ENSPIE_lognorm_new_ALL_rarefyID_ranef <- as_tibble(ENSPIE_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID:rarefyID`[,,'cYEAR']) %>%
mutate(rarefyID = rownames(ENSPIE_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID:rarefyID`))
names(ENSPIE_lognorm_new_ALL_rarefyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
ENSPIE_lognorm_new_ALL_rarefyID_ranef <- ENSPIE_lognorm_new_ALL_rarefyID_ranef %>%
mutate(
model = 'ENSPIE_lognorm_new',
time_period = 'ALL')
ENSPIE_lognorm_new_ALL_taxa
ENSPIE_lognorm_new_ALL_taxa %>% filter(lower_slope > 1)
ENSPIE_lognorm_new_ALL_taxa %>% filter(lower_slope > 0)
ENSPIE_lognorm_new_ALL_taxa %>% filter(upper_slope < 0)
ENSPIE_lognorm_newALL_biome %>% filter(upper_slope < 0)
ENSPIE_lognorm_newALL_biome %>% filter(upper_slope > 0)
ENSPIE_lognorm_newALL_biome %>% filter(lower_slope > 0)
ENSPIE_lognorm_ALL_biome
ENSPIE_lognorm_newALL_biome
ENSPIE_lognorm_ALL_biome
##--total community abundance coefficients and random effects---------
N_lognorm_new_ALL_global <- fixef(N_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL')
names(N_lognorm_new_ALL_global)[3:4] <- c('lower', 'upper')
N_lognorm_new_ALL_global <- N_lognorm_new_ALL_global %>%
mutate(
change = ifelse(lower > 0, 'up',
ifelse(upper < 0, 'down', 'neutral')))
N_lognorm_new_ALL_global
N_lognorm_new_ALL_groupCoefs <- coef(N_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95))
N_lognorm_ALL_biome <- as_tibble(N_lognorm_new_ALL_groupCoefs[[1]]) %>%
mutate(Biome = rownames(N_lognorm_new_ALL_groupCoefs[[1]]))
names(N_lognorm_ALL_biome)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
N_lognorm_newALL_biome <- N_lognorm_ALL_biome %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
N_lognorm_new_ALL_taxa <- as_tibble(N_lognorm_new_ALL_groupCoefs[[2]]) %>%
mutate(level = rownames(N_lognorm_new_ALL_groupCoefs[[2]]))
names(N_lognorm_new_ALL_taxa)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_taxa <- N_lognorm_new_ALL_taxa %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
N_lognorm_new_ALL_studyID <- as_tibble(N_lognorm_new_ALL_groupCoefs[[3]]) %>%
mutate(level = rownames(N_lognorm_new_ALL_groupCoefs[[3]]))
names(N_lognorm_new_ALL_studyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_studyID <- N_lognorm_new_ALL_studyID %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
N_lognorm_new_ALL_rarefyID <- as_tibble(N_lognorm_new_ALL_groupCoefs[[4]]) %>%
mutate(level = rownames(N_lognorm_new_ALL_groupCoefs[[4]]))
names(N_lognorm_new_ALL_rarefyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_rarefyID <- N_lognorm_new_ALL_rarefyID %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
N_lognorm_new_ALL_ranef <- ranef(N_lognorm_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95))
# separate biome and taxa slope random effects
N_lognorm_new_ALL_biome_ranef <- as_tibble(N_lognorm_new_ALL_ranef$Biome[,,'cYEAR']) %>%
mutate(Biome = rownames(N_lognorm_new_ALL_ranef$Biome))
names(N_lognorm_new_ALL_biome_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_biome_ranef <- N_lognorm_new_ALL_biome_ranef %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL')
N_lognorm_new_ALL_Taxa_ranef <- as_tibble(N_lognorm_new_ALL_ranef$`Biome:taxa_mod`[,,'cYEAR']) %>%
mutate(Taxa = rownames(N_lognorm_new_ALL_ranef$`Biome:taxa_mod`))
names(N_lognorm_new_ALL_Taxa_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_Taxa_ranef <- N_lognorm_new_ALL_Taxa_ranef %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL')
N_lognorm_new_ALL_studyID_ranef <- as_tibble(N_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID`[,,'cYEAR']) %>%
mutate(rarefyID = rownames(N_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID`))
names(N_lognorm_new_ALL_studyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_studyID_ranef <- N_lognorm_new_ALL_studyID_ranef %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL')
N_lognorm_new_ALL_rarefyID_ranef <- as_tibble(N_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID:rarefyID`[,,'cYEAR']) %>%
mutate(rarefyID = rownames(N_lognorm_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID:rarefyID`))
names(N_lognorm_new_ALL_rarefyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
N_lognorm_new_ALL_rarefyID_ranef <- N_lognorm_new_ALL_rarefyID_ranef %>%
mutate(
model = 'N_lognorm_new',
time_period = 'ALL')
N_lognorm_newALL_biome
N_lognorm_newALL_biome %>% filter(lower_slope > 0)
ENSPIE_lognorm_newALL_biome %>% filter(upper_slope < 0)
ENSPIE_lognorm_newALL_biome %>% filter(Biome=='Warm_Temperate_Southwestern_Atlantic')
N_lognorm_newALL_biome %>% filter(upper_slope < 0)
N_lognorm_new_ALL_taxa %>% filter(upper_slope < 0)
N_lognorm_new_ALL_taxa %>% filter(lower_slope < 0)
N_lognorm_new_ALL_taxa %>% filter(lower_slope > 0)
ENSPIE_lognorm_new_ALL_taxa %>% filter(lower_slope > 0)
ENSPIE_lognorm_new_ALL_taxa %>% filter(upper_slope < 0)
N_lognorm_new_ALL_studyID %>% filter(upper_slope < 0)
N_lognorm_new_ALL_studyID %>% filter(lower_slope > 0)
N_lognorm_new_ALL_studyID
##--species richness coefficients and random effects---------
S_pois_new_ALL_global <- fixef(S_pois_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95)) %>%
as_tibble() %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL')
names(S_pois_new_ALL_global)[3:4] <- c('lower', 'upper')
S_pois_new_ALL_global <- S_pois_new_ALL_global %>%
mutate(
change = ifelse(lower > 0, 'up',
ifelse(upper < 0, 'down', 'neutral')))
S_pois_new_ALL_groupCoefs <- coef(S_pois_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95))
##  break into biome and rarefyID estimates
S_pois_ALL_biome <- as_tibble(S_pois_new_ALL_groupCoefs[[1]]) %>%
mutate(Biome = rownames(S_pois_new_ALL_groupCoefs[[1]]))
names(S_pois_ALL_biome)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_newALL_biome <- S_pois_ALL_biome %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
S_pois_new_ALL_taxa <- as_tibble(S_pois_new_ALL_groupCoefs[[2]]) %>%
mutate(level = rownames(S_pois_new_ALL_groupCoefs[[2]]))
names(S_pois_new_ALL_taxa)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_new_ALL_taxa <- S_pois_new_ALL_taxa %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
S_pois_new_ALL_studyID <- as_tibble(S_pois_new_ALL_groupCoefs[[3]]) %>%
mutate(level = rownames(S_pois_new_ALL_groupCoefs[[3]]))
names(S_pois_new_ALL_studyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_new_ALL_studyID <- S_pois_new_ALL_studyID %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
S_pois_new_ALL_rarefyID <- as_tibble(S_pois_new_ALL_groupCoefs[[4]]) %>%
mutate(level = rownames(S_pois_new_ALL_groupCoefs[[4]]))
names(S_pois_new_ALL_rarefyID)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_new_ALL_rarefyID <- S_pois_new_ALL_rarefyID %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
#-----random effects for map---------
S_pois_new_ALL_ranef <- ranef(S_pois_BTSRfyID_countData, robust = TRUE, probs = c(0.05, 0.95))
# separate biome and taxa slope random effects
S_pois_new_ALL_biome_ranef <- as_tibble(S_pois_new_ALL_ranef$Biome[,,'cYEAR']) %>%
mutate(Biome = rownames(S_pois_new_ALL_ranef$Biome))
names(S_pois_new_ALL_biome_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
S_pois_new_ALL_biome_ranef <- S_pois_new_ALL_biome_ranef %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL')
S_pois_new_ALL_Taxa_ranef <- as_tibble(S_pois_new_ALL_ranef$`Biome:taxa_mod`[,,'cYEAR']) %>%
mutate(Taxa = rownames(S_pois_new_ALL_ranef$`Biome:taxa_mod`))
names(S_pois_new_ALL_Taxa_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
S_pois_new_ALL_Taxa_ranef <- S_pois_new_ALL_Taxa_ranef %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL')
S_pois_new_ALL_studyID_ranef <- as_tibble(S_pois_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID`[,,'cYEAR']) %>%
mutate(rarefyID = rownames(S_pois_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID`))
names(S_pois_new_ALL_studyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
S_pois_new_ALL_studyID_ranef <- S_pois_new_ALL_studyID_ranef %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL')
S_pois_new_ALL_rarefyID_ranef <- as_tibble(S_pois_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID:rarefyID`[,,'cYEAR']) %>%
mutate(rarefyID = rownames(S_pois_new_ALL_ranef$`Biome:taxa_mod:STUDY_ID:rarefyID`))
names(S_pois_new_ALL_rarefyID_ranef)[c(1:4)] <- c('Slope_ranef', 'Slope_error', 'lower_slope', 'upper_slope')
S_pois_new_ALL_rarefyID_ranef <- S_pois_new_ALL_rarefyID_ranef %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL')
ls()
alpha_biome_coefs <- bind_rows(
S_pois_ALL_biome,
N_lognorm_newALL_biome,
ENSPIE_lognorm_newALL_biome
)
alpha_biome_coefs
alpha_biome_coefs %>% distinct(model)
S_pois_new_ALL_groupCoefs
##  break into biome and rarefyID estimates
S_pois_ALL_biome <- as_tibble(S_pois_new_ALL_groupCoefs[[1]]) %>%
mutate(Biome = rownames(S_pois_new_ALL_groupCoefs[[1]]))
names(S_pois_ALL_biome)[c(3:4, 7:8)] <- c('lower_intercept', 'upper_intercept', 'lower_slope', 'upper_slope')
S_pois_newALL_biome <- S_pois_ALL_biome %>%
mutate(
model = 'S_pois_new',
time_period = 'ALL',
change = ifelse(lower_slope > 0, 'up',
ifelse(upper_slope < 0, 'down', 'neutral')))
S_pois_newALL_biome
alpha_biome_coefs <- bind_rows(
S_pois_newALL_biome,
N_lognorm_newALL_biome,
ENSPIE_lognorm_newALL_biome
)
alpha_biome_coefs %>% distinct(model)
alpha_biome_coefs
alpha_biome_ranefs <- bind_rows(
S_pois_new_ALL_biome_ranef,
N_lognorm_new_ALL_biome_ranef,
ENSPIE_lognorm_new_ALL_biome_ranef
)
alpha_taxa_coefs <- bind_rows(
S_pois_new_ALL_taxa,
N_lognorm_new_ALL_taxa,
ENSPIE_lognorm_new_ALL_taxa
)
alpha_taxa_ranefs <- bind_rows(
S_pois_new_ALL_Taxa_ranef,
N_lognorm_new_ALL_Taxa_ranef,
ENSPIE_lognorm_new_ALL_Taxa_ranef
)
alpha_study_coefs <- bind_rows(
S_pois_new_ALL_studyID,
N_lognorm_new_ALL_studyID,
ENSPIE_lognorm_new_ALL_studyID
)
alpha_study_ranefs <- bind_rows(
S_pois_new_ALL_studyID_ranef,
N_lognorm_new_ALL_studyID_ranef,
ENSPIE_lognorm_new_ALL_studyID_ranef
)
alpha_rarefyID_coefs <- bind_rows(
S_pois_new_ALL_rarefyID,
N_lognorm_new_ALL_rarefyID,
ENSPIE_lognorm_new_ALL_rarefyID
)
alpha_rarefyID_ranefs <- bind_rows(
S_pois_new_ALL_rarefyID_ranef,
N_lognorm_new_ALL_rarefyID_ranef,
ENSPIE_lognorm_new_ALL_rarefyID_ranef
)
alpha_global_coefs <- bind_rows(
S_pois_new_ALL_global,
N_lognorm_new_ALL_global,
ENSPIE_lognorm_new_ALL_global
)
alpha_global_coefs
save(alpha_global_coefs,
alpha_biome_coefs,
alpha_biome_ranefs,
alpha_taxa_coefs,
alpha_taxa_ranefs,
alpha_study_coefs,
alpha_study_ranefs,
alpha_rarefyID_coefs,
alpha_rarefyID_ranefs,
file = '~/Desktop/biotime_alpha_diversity/alpha_coefs_ranefs.Rdata')
